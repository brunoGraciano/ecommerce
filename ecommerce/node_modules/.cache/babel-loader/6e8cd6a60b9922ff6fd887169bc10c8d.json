{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\bruno\\\\Desktop\\\\ecommerce\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\bruno\\\\Desktop\\\\ecommerce\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\bruno\\\\Desktop\\\\ecommerce\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\bruno\\\\Desktop\\\\ecommerce\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\bruno\\\\Desktop\\\\ecommerce\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\bruno\\\\Desktop\\\\ecommerce\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\bruno\\\\Desktop\\\\ecommerce\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\bruno\\\\Desktop\\\\ecommerce\\\\src\\\\components\\\\Toolbar\\\\DropdownMenu\\\\DropdownMenu.js\";\nimport React, { Component } from \"react\";\nimport \"./DropdownMenu.css\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { fetchCategory } from \"../../../store/actions/indexStore\";\n\nvar DropdownMenu =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DropdownMenu, _Component);\n\n  function DropdownMenu() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, DropdownMenu);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(DropdownMenu)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      categories: []\n    };\n    return _this;\n  }\n\n  _createClass(DropdownMenu, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var response, json;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch(\"http://localhost:8086/catalogs/categories\");\n\n              case 2:\n                response = _context.sent;\n                _context.next = 5;\n                return response.json();\n\n              case 5:\n                json = _context.sent;\n                this.setState({\n                  categories: json\n                });\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"DropdownMenu\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"category\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, this.state.categories.map(function (category) {\n        return React.createElement(\"div\", {\n          key: category.id,\n          className: \"dropdown\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"dropbtn\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        }, category.name), React.createElement(\"div\", {\n          className: \"dropdown-content\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"dropdown-layout\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"menu\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }, category.subcategories.map(function (subcategory) {\n          return React.createElement(Link, {\n            key: subcategory.id,\n            to: \"/\" + category.id + \"/\" + subcategory.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 27\n            },\n            __self: this\n          }, subcategory.name);\n        })), React.createElement(\"div\", {\n          className: \"image\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: category.img,\n          alt: category.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }))), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        })));\n      })));\n    }\n  }]);\n\n  return DropdownMenu;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    category: state.category\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onfetchCategory: function onfetchCategory() {\n      return dispatch(fetchCategory());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DropdownMenu);","map":{"version":3,"sources":["C:\\Users\\bruno\\Desktop\\ecommerce\\src\\components\\Toolbar\\DropdownMenu\\DropdownMenu.js"],"names":["React","Component","Link","connect","fetchCategory","DropdownMenu","state","categories","fetch","response","json","setState","map","category","id","name","subcategories","subcategory","img","mapStateToProps","mapDispatchToProps","dispatch","onfetchCategory"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,oBAAP;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,aAAT,QAA8B,mCAA9B;;IAEMC,Y;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,UAAU,EAAE;AADN,K;;;;;;;;;;;;;;;;uBAIiBC,KAAK,6C;;;AAAtBC,gBAAAA,Q;;uBACaA,QAAQ,CAACC,IAAT,E;;;AAAbA,gBAAAA,I;AACN,qBAAKC,QAAL,CAAc;AAAEJ,kBAAAA,UAAU,EAAEG;AAAd,iBAAd;;;;;;;;;;;;;;;;;;6BAEO;AACP,aACE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKJ,KAAL,CAAWC,UAAX,CAAsBK,GAAtB,CAA0B,UAAAC,QAAQ;AAAA,eACjC;AAAK,UAAA,GAAG,EAAEA,QAAQ,CAACC,EAAnB;AAAuB,UAAA,SAAS,EAAC,UAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA0BD,QAAQ,CAACE,IAAnC,CADF,EAEE;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGF,QAAQ,CAACG,aAAT,CAAuBJ,GAAvB,CAA2B,UAAAK,WAAW;AAAA,iBACrC,oBAAC,IAAD;AACE,YAAA,GAAG,EAAEA,WAAW,CAACH,EADnB;AAEE,YAAA,EAAE,EAAE,MAAMD,QAAQ,CAACC,EAAf,GAAoB,GAApB,GAA0BG,WAAW,CAACH,EAF5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAIGG,WAAW,CAACF,IAJf,CADqC;AAAA,SAAtC,CADH,CADF,EAWE;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,GAAG,EAAEF,QAAQ,CAACK,GAAnB;AAAwB,UAAA,GAAG,EAAEL,QAAQ,CAACC,EAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CAXF,CADF,EAgBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAhBF,CAFF,CADiC;AAAA,OAAlC,CADH,CADF,CADF;AA6BD;;;;EAvCwBb,S;;AA0C3B,IAAMkB,eAAe,GAAG,SAAlBA,eAAkB,CAAAb,KAAK,EAAI;AAC/B,SAAO;AACLO,IAAAA,QAAQ,EAAEP,KAAK,CAACO;AADX,GAAP;AAGD,CAJD;;AAMA,IAAMO,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ,EAAI;AACrC,SAAO;AACLC,IAAAA,eAAe,EAAE;AAAA,aAAMD,QAAQ,CAACjB,aAAa,EAAd,CAAd;AAAA;AADZ,GAAP;AAGD,CAJD;;AAMA,eAAeD,OAAO,CACpBgB,eADoB,EAEpBC,kBAFoB,CAAP,CAGbf,YAHa,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./DropdownMenu.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchCategory } from \"../../../store/actions/indexStore\";\r\n\r\nclass DropdownMenu extends Component {\r\n  state = {\r\n    categories: []\r\n  };\r\n  async componentDidMount() {\r\n    const response = await fetch(`http://localhost:8086/catalogs/categories`);\r\n    const json = await response.json();\r\n    this.setState({ categories: json });\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"DropdownMenu\">\r\n        <div className=\"category\">\r\n          {this.state.categories.map(category => (\r\n            <div key={category.id} className=\"dropdown\">\r\n              <div className=\"dropbtn\">{category.name}</div>\r\n              <div className=\"dropdown-content\">\r\n                <div className=\"dropdown-layout\">\r\n                  <div className=\"menu\">\r\n                    {category.subcategories.map(subcategory => (\r\n                      <Link\r\n                        key={subcategory.id}\r\n                        to={\"/\" + category.id + \"/\" + subcategory.id}\r\n                      >\r\n                        {subcategory.name}\r\n                      </Link>\r\n                    ))}\r\n                  </div>\r\n                  <div className=\"image\">\r\n                    <img src={category.img} alt={category.id} />\r\n                  </div>\r\n                </div>\r\n                <div />\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    category: state.category\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onfetchCategory: () => dispatch(fetchCategory())\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(DropdownMenu);\r\n"]},"metadata":{},"sourceType":"module"}