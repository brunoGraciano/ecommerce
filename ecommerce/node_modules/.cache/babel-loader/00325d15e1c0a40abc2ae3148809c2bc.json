{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\bruno\\\\Desktop\\\\Plataforma Ecommerce\\\\ecommerce\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport * as actionTypes from \"../actions/actionTypes\";\nvar catalog = {\n  catalog: [],\n  sizes: [],\n  colors: [],\n  weights: [],\n  brands: []\n};\n\nvar fetchCatalog = function fetchCatalog(state, action) {\n  return _objectSpread({}, state, {\n    catalog: action.catalog\n  });\n};\n\nvar fetchSizes = function fetchSizes(state, action) {\n  return _objectSpread({}, state, {\n    sizes: action.sizes\n  });\n};\n\nvar fetchColors = function fetchColors(state, action) {\n  return _objectSpread({}, state, {\n    colors: action.colors\n  });\n};\n\nvar fetchWeights = function fetchWeights(state, action) {\n  return _objectSpread({}, state, {\n    weights: action.weights\n  });\n};\n\nvar fetchBrands = function fetchBrands(state, action) {\n  return _objectSpread({}, state, {\n    brands: action.brands\n  });\n};\n\nvar fetchCatalogFailed = function fetchCatalogFailed(state, action) {\n  return {};\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : catalog;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionTypes.FETCH_CATALOG:\n      return fetchCatalog(state, action);\n\n    case actionTypes.FETCH_CATALOG_FAILED:\n      return fetchCatalogFailed(state, action);\n\n    case actionTypes.FETCH_SIZES:\n      return fetchSizes(state, action);\n\n    case actionTypes.FETCH_COLORS:\n      return fetchColors(state, action);\n\n    case actionTypes.FETCH_WEIGHTS:\n      return fetchWeights(state, action);\n\n    case actionTypes.FETCH_BRANDS:\n      return fetchBrands(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:\\Users\\bruno\\Desktop\\Plataforma Ecommerce\\ecommerce\\src\\store\\reducers\\catalog.js"],"names":["actionTypes","catalog","sizes","colors","weights","brands","fetchCatalog","state","action","fetchSizes","fetchColors","fetchWeights","fetchBrands","fetchCatalogFailed","reducer","type","FETCH_CATALOG","FETCH_CATALOG_FAILED","FETCH_SIZES","FETCH_COLORS","FETCH_WEIGHTS","FETCH_BRANDS"],"mappings":";AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AAEA,IAAMC,OAAO,GAAG;AACdA,EAAAA,OAAO,EAAE,EADK;AAEdC,EAAAA,KAAK,EAAE,EAFO;AAGdC,EAAAA,MAAM,EAAE,EAHM;AAIdC,EAAAA,OAAO,EAAE,EAJK;AAKdC,EAAAA,MAAM,EAAE;AALM,CAAhB;;AAQA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAQC,MAAR,EAAmB;AACtC,2BACKD,KADL;AAEEN,IAAAA,OAAO,EAAEO,MAAM,CAACP;AAFlB;AAID,CALD;;AAMA,IAAMQ,UAAU,GAAG,SAAbA,UAAa,CAACF,KAAD,EAAQC,MAAR,EAAmB;AACpC,2BACKD,KADL;AAEEL,IAAAA,KAAK,EAAEM,MAAM,CAACN;AAFhB;AAID,CALD;;AAMA,IAAMQ,WAAW,GAAG,SAAdA,WAAc,CAACH,KAAD,EAAQC,MAAR,EAAmB;AACrC,2BACKD,KADL;AAEEJ,IAAAA,MAAM,EAAEK,MAAM,CAACL;AAFjB;AAID,CALD;;AAMA,IAAMQ,YAAY,GAAG,SAAfA,YAAe,CAACJ,KAAD,EAAQC,MAAR,EAAmB;AACtC,2BACKD,KADL;AAEEH,IAAAA,OAAO,EAAEI,MAAM,CAACJ;AAFlB;AAID,CALD;;AAMA,IAAMQ,WAAW,GAAG,SAAdA,WAAc,CAACL,KAAD,EAAQC,MAAR,EAAmB;AACrC,2BACKD,KADL;AAEEF,IAAAA,MAAM,EAAEG,MAAM,CAACH;AAFjB;AAID,CALD;;AAMA,IAAMQ,kBAAkB,GAAG,SAArBA,kBAAqB,CAACN,KAAD,EAAQC,MAAR,EAAmB;AAC5C,SAAO,EAAP;AACD,CAFD;;AAIA,IAAMM,OAAO,GAAG,SAAVA,OAAU,GAA6B;AAAA,MAA5BP,KAA4B,uEAApBN,OAAoB;AAAA,MAAXO,MAAW;;AAC3C,UAAQA,MAAM,CAACO,IAAf;AACE,SAAKf,WAAW,CAACgB,aAAjB;AACE,aAAOV,YAAY,CAACC,KAAD,EAAQC,MAAR,CAAnB;;AACF,SAAKR,WAAW,CAACiB,oBAAjB;AACE,aAAOJ,kBAAkB,CAACN,KAAD,EAAQC,MAAR,CAAzB;;AACF,SAAKR,WAAW,CAACkB,WAAjB;AACE,aAAOT,UAAU,CAACF,KAAD,EAAQC,MAAR,CAAjB;;AACF,SAAKR,WAAW,CAACmB,YAAjB;AACE,aAAOT,WAAW,CAACH,KAAD,EAAQC,MAAR,CAAlB;;AACF,SAAKR,WAAW,CAACoB,aAAjB;AACE,aAAOT,YAAY,CAACJ,KAAD,EAAQC,MAAR,CAAnB;;AACF,SAAKR,WAAW,CAACqB,YAAjB;AACE,aAAOT,WAAW,CAACL,KAAD,EAAQC,MAAR,CAAlB;;AACF;AACE,aAAOD,KAAP;AAdJ;AAgBD,CAjBD;;AAmBA,eAAeO,OAAf","sourcesContent":["import * as actionTypes from \"../actions/actionTypes\";\r\n\r\nconst catalog = {\r\n  catalog: [],\r\n  sizes: [],\r\n  colors: [],\r\n  weights: [],\r\n  brands: []\r\n};\r\n\r\nconst fetchCatalog = (state, action) => {\r\n  return {\r\n    ...state,\r\n    catalog: action.catalog\r\n  };\r\n};\r\nconst fetchSizes = (state, action) => {\r\n  return {\r\n    ...state,\r\n    sizes: action.sizes\r\n  };\r\n};\r\nconst fetchColors = (state, action) => {\r\n  return {\r\n    ...state,\r\n    colors: action.colors\r\n  };\r\n};\r\nconst fetchWeights = (state, action) => {\r\n  return {\r\n    ...state,\r\n    weights: action.weights\r\n  };\r\n};\r\nconst fetchBrands = (state, action) => {\r\n  return {\r\n    ...state,\r\n    brands: action.brands\r\n  };\r\n};\r\nconst fetchCatalogFailed = (state, action) => {\r\n  return {};\r\n};\r\n\r\nconst reducer = (state = catalog, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.FETCH_CATALOG:\r\n      return fetchCatalog(state, action);\r\n    case actionTypes.FETCH_CATALOG_FAILED:\r\n      return fetchCatalogFailed(state, action);\r\n    case actionTypes.FETCH_SIZES:\r\n      return fetchSizes(state, action);\r\n    case actionTypes.FETCH_COLORS:\r\n      return fetchColors(state, action);\r\n    case actionTypes.FETCH_WEIGHTS:\r\n      return fetchWeights(state, action);\r\n    case actionTypes.FETCH_BRANDS:\r\n      return fetchBrands(state, action);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}