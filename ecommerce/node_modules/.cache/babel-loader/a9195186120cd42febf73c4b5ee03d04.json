{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\bruno\\\\Desktop\\\\ecommerce\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"C:\\\\Users\\\\bruno\\\\Desktop\\\\ecommerce\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\n\nvar _this = this;\n\nimport { getCookie } from \"../../components/Util/Util\";\nimport axios from \"axios\";\nimport * as actionTypes from \"./actionTypes\";\nexport var addUser = function addUser(user) {\n  axios({\n    method: \"post\",\n    headers: {\n      \"content-type\": \"application/json\"\n    },\n    data: JSON.stringify(user),\n    url: \"http://localhost:8087/users\"\n  }).then(function (res) {\n    if (res.status === 201) {\n      _this.props.closeEntry();\n    }\n  }).catch(function (error) {\n    _this.setState({\n      error: error.response.data.message\n    });\n  });\n  return {\n    type: actionTypes.ADD_USER,\n    user: user\n  };\n};\nexport var removeUser = function removeUser(username) {\n  return function (dispatch) {\n    return {\n      type: actionTypes.REMOVE_USER,\n      username: username\n    };\n  };\n};\nexport var updateEnable = function updateEnable(users, index, userId, val) {\n  var allUsers = _toConsumableArray(users);\n\n  var user = _objectSpread({}, users[index]);\n\n  user.enabled = val;\n  user.accountNonExpired = val;\n  user.accountNonLocked = val; //user.enable = val;\n  //user.account_non_expired = val;\n  //user.account_non_locked = val;\n\n  user.credentialsNonExpired = val;\n  allUsers[index] = user;\n  return function (dispatch) {\n    axios.put(\"http://localhost:8087/secure/users/\".concat(userId, \"?access_token=\").concat(getCookie(\"Session\")), user).then(function (res) {\n      if (res.status === 200) {\n        dispatch({\n          type: actionTypes.UPDATE_ENABLE,\n          allUsers: allUsers\n        });\n      }\n    });\n  };\n};\nexport var updateRole = function updateRole(role, user, index, userId, users) {\n  return function (dispatch) {\n    var id;\n\n    if (role === \"Admin\") {\n      id = 2;\n    } else if (role === \"User\") {\n      id = 1;\n    }\n\n    var r = \"ROLE_\" + role.toUpperCase();\n    user.roles[0].id = id;\n    user.roles[0].name = r;\n    axios.put(\"http://localhost:8087/secure/users/\".concat(userId, \"?access_token=\").concat(getCookie(\"Session\")), user).then(function (res) {\n      if (res.status === 200) {\n        var userArr = _toConsumableArray(users);\n\n        userArr[index] = user;\n        dispatch({\n          type: actionTypes.UPDATE_ROLE,\n          allUsers: userArr\n        });\n      }\n    });\n  };\n};\nexport var fetchUsers = function fetchUsers() {\n  return function (dispatch) {\n    var url = \"http://localhost:8087/secure/users?access_token=\".concat(getCookie(\"Session\"));\n    axios.get(url).then(function (res) {\n      var users = [];\n      var array = res.data;\n\n      for (var i = 0; i < array.length; i++) {\n        users.push(_objectSpread({}, array[i], {\n          isOpen: false\n        }));\n      }\n\n      dispatch(setUsers(users));\n    }).catch(function (err) {\n      dispatch(fetchUsersFailed());\n    });\n  };\n};\nexport var setUsers = function setUsers(users) {\n  return {\n    type: actionTypes.FETCH_USERS,\n    users: users\n  };\n};\nexport var fetchUsersFailed = function fetchUsersFailed() {\n  return {\n    type: actionTypes.FETCH_USERS_FAILED\n  };\n};\nexport var toggleUser = function toggleUser(users, index) {\n  var allUsers = _toConsumableArray(users);\n\n  allUsers[index].isOpen = !allUsers[index].isOpen;\n  return {\n    type: actionTypes.TOGGLE_USER,\n    allUsers: allUsers\n  };\n};","map":{"version":3,"sources":["C:\\Users\\bruno\\Desktop\\ecommerce\\src\\store\\actions\\user.js"],"names":["getCookie","axios","actionTypes","addUser","user","method","headers","data","JSON","stringify","url","then","res","status","props","closeEntry","catch","error","setState","response","message","type","ADD_USER","removeUser","username","dispatch","REMOVE_USER","updateEnable","users","index","userId","val","allUsers","enabled","accountNonExpired","accountNonLocked","credentialsNonExpired","put","UPDATE_ENABLE","updateRole","role","id","r","toUpperCase","roles","name","userArr","UPDATE_ROLE","fetchUsers","get","array","i","length","push","isOpen","setUsers","err","fetchUsersFailed","FETCH_USERS","FETCH_USERS_FAILED","toggleUser","TOGGLE_USER"],"mappings":"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","sourcesContent":["import { getCookie } from \"../../components/Util/Util\";\r\nimport axios from \"axios\";\r\nimport * as actionTypes from \"./actionTypes\";\r\n\r\nexport const addUser = user => {\r\n  axios({\r\n    method: \"post\",\r\n    headers: { \"content-type\": \"application/json\" },\r\n    data: JSON.stringify(user),\r\n    url: \"http://localhost:8087/users\"\r\n  })\r\n    .then(res => {\r\n      if (res.status === 201) {\r\n        this.props.closeEntry();\r\n      }\r\n    })\r\n    .catch(error => {\r\n      this.setState({ error: error.response.data.message });\r\n    });\r\n\r\n  return {\r\n    type: actionTypes.ADD_USER,\r\n    user: user\r\n  };\r\n};\r\n\r\nexport const removeUser = username => {\r\n  return dispatch => {\r\n    return {\r\n      type: actionTypes.REMOVE_USER,\r\n      username: username\r\n    };\r\n  };\r\n};\r\n\r\nexport const updateEnable = (users, index, userId, val) => {\r\n  let allUsers = [...users];\r\n  let user = { ...users[index] };\r\n  user.enabled = val;\r\n  user.accountNonExpired = val;\r\n  user.accountNonLocked = val;\r\n  //user.enable = val;\r\n  //user.account_non_expired = val;\r\n  //user.account_non_locked = val;\r\n  user.credentialsNonExpired = val;\r\n  allUsers[index] = user;\r\n  return dispatch => {\r\n    axios\r\n      .put(\r\n        `http://localhost:8087/secure/users/${userId}?access_token=${getCookie(\r\n          \"Session\"\r\n        )}`,\r\n        user\r\n      )\r\n      .then(res => {\r\n        if (res.status === 200) {\r\n          dispatch({\r\n            type: actionTypes.UPDATE_ENABLE,\r\n            allUsers: allUsers\r\n          });\r\n        }\r\n      });\r\n  };\r\n};\r\n\r\nexport const updateRole = (role, user, index, userId, users) => {\r\n  return dispatch => {\r\n    let id;\r\n    if (role === \"Admin\") {\r\n      id = 2;\r\n    } else if (role === \"User\") {\r\n      id = 1;\r\n    }\r\n    let r = \"ROLE_\" + role.toUpperCase();\r\n    user.roles[0].id = id;\r\n    user.roles[0].name = r;\r\n    axios\r\n      .put(\r\n        `http://localhost:8087/secure/users/${userId}?access_token=${getCookie(\r\n          \"Session\"\r\n        )}`,\r\n        user\r\n      )\r\n      .then(res => {\r\n        if (res.status === 200) {\r\n          let userArr = [...users];\r\n          userArr[index] = user;\r\n          dispatch({\r\n            type: actionTypes.UPDATE_ROLE,\r\n            allUsers: userArr\r\n          });\r\n        }\r\n      });\r\n  };\r\n};\r\n\r\nexport const fetchUsers = () => {\r\n  return dispatch => {\r\n    let url = `http://localhost:8087/secure/users?access_token=${getCookie(\r\n      \"Session\"\r\n    )}`;\r\n    axios\r\n      .get(url)\r\n      .then(res => {\r\n        let users = [];\r\n        let array = res.data;\r\n        for (let i = 0; i < array.length; i++) {\r\n          users.push({ ...array[i], isOpen: false });\r\n        }\r\n        dispatch(setUsers(users));\r\n      })\r\n      .catch(err => {\r\n        dispatch(fetchUsersFailed());\r\n      });\r\n  };\r\n};\r\n\r\nexport const setUsers = users => {\r\n  return {\r\n    type: actionTypes.FETCH_USERS,\r\n    users: users\r\n  };\r\n};\r\n\r\nexport const fetchUsersFailed = () => {\r\n  return {\r\n    type: actionTypes.FETCH_USERS_FAILED\r\n  };\r\n};\r\n\r\nexport const toggleUser = (users, index) => {\r\n  let allUsers = [...users];\r\n  allUsers[index].isOpen = !allUsers[index].isOpen;\r\n  return {\r\n    type: actionTypes.TOGGLE_USER,\r\n    allUsers: allUsers\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}