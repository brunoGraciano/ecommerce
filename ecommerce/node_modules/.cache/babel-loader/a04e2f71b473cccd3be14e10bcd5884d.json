{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\bruno\\\\Desktop\\\\ecommerce\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\bruno\\\\Desktop\\\\ecommerce\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\bruno\\\\Desktop\\\\ecommerce\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\bruno\\\\Desktop\\\\ecommerce\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\bruno\\\\Desktop\\\\ecommerce\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\bruno\\\\desktop\\\\ecommerce\\\\src\\\\components\\\\Orders\\\\Orders.js\";\nimport React, { Component } from \"react\";\nimport \"./Orders.css\";\nimport { connect } from \"react-redux\";\nimport { fetchProductOrder, updateProductOrderQuantity, addProductOrder } from \"../../store/actions/indexStore\";\n\nvar Orders =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Orders, _Component);\n\n  function Orders() {\n    _classCallCheck(this, Orders);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Orders).apply(this, arguments));\n  }\n\n  _createClass(Orders, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.onfetchProductOrder();\n    }\n  }, {\n    key: \"navigateProduct\",\n    value: function navigateProduct(product) {\n      this.props.history.push({\n        pathname: \"/categories/subcategories/\".concat(product.id)\n      });\n    }\n  }, {\n    key: \"calculateTotalHandler\",\n    value: function calculateTotalHandler() {\n      var products = this.props.order.products;\n      var total = 0;\n\n      for (var p = 0; p < products.length; p++) {\n        total += products[p].price * products[p].quantityCart;\n      }\n\n      total = Math.round(total * 100) / 100;\n      return total;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(\"div\", {\n        className: \"Orders-Height\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"Orders\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"cart-products\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"cart-products-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"Item\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"Description\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"Price\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"Quantity\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"Subtotal\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, this.props.order.products.length !== 0 ? this.props.order.products.map(function (product, index) {\n        return React.createElement(\"tr\", {\n          key: product.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"frame-img\",\n          onClick: function onClick() {\n            return _this.navigateProduct(product);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: product.thumbnail,\n          alt: product.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }))), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          onClick: function onClick() {\n            return _this.navigateProduct(product);\n          },\n          className: \"details\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"product-brand\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, product.attributes.brand), React.createElement(\"div\", {\n          className: \"product-name\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, product.name))), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, \"€\" + product.price), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          className: \"quantity-input\",\n          type: \"number\",\n          name: \"quantityLs\",\n          min: \"0\",\n          value: product.quantityCart,\n          max: product.quantity,\n          onChange: function onChange(e) {\n            _this.props.onupdateProductOrderQuantity(e.target.value, product.id, _this.props.order.products);\n          },\n          onKeyPress: function onKeyPress(event) {\n            return event.preventDefault();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        })), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, \"€\" + Math.round(product.price * product.quantityCart * 100) / 100));\n      }) : React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        colSpan: \"5\",\n        className: \"no-products\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"Your cart is empty!\")))))), React.createElement(\"div\", {\n        className: \"price\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"price-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"total-price\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"Total to pay\"), React.createElement(\"p\", {\n        className: \"price-number\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"\\u20AC\", this.calculateTotalHandler())), React.createElement(\"button\", {\n        className: \"checkout-btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"Proceed to checkout\")))));\n    }\n  }]);\n\n  return Orders;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    order: state.order\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onfetchProductOrder: function onfetchProductOrder() {\n      return dispatch(fetchProductOrder());\n    },\n    onupdateProductOrderQuantity: function onupdateProductOrderQuantity(inputValue, productId, products) {\n      return dispatch(updateProductOrderQuantity(inputValue, productId, products));\n    },\n    onaddProductOrder: function onaddProductOrder(productId) {\n      return dispatch(addProductOrder(productId));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Orders);","map":{"version":3,"sources":["C:\\Users\\bruno\\desktop\\ecommerce\\src\\components\\Orders\\Orders.js"],"names":["React","Component","connect","fetchProductOrder","updateProductOrderQuantity","addProductOrder","Orders","props","onfetchProductOrder","product","history","push","pathname","id","products","order","total","p","length","price","quantityCart","Math","round","map","index","navigateProduct","thumbnail","attributes","brand","name","quantity","e","onupdateProductOrderQuantity","target","value","event","preventDefault","calculateTotalHandler","mapStateToProps","state","mapDispatchToProps","dispatch","inputValue","productId","onaddProductOrder"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./Orders.css\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  fetchProductOrder,\r\n  updateProductOrderQuantity,\r\n  addProductOrder\r\n} from \"../../store/actions/indexStore\";\r\n\r\nclass Orders extends Component {\r\n  componentDidMount() {\r\n    this.props.onfetchProductOrder();\r\n  }\r\n  navigateProduct(product) {\r\n    this.props.history.push({\r\n      pathname: `/categories/subcategories/${product.id}`\r\n    });\r\n  }\r\n  calculateTotalHandler() {\r\n    let products = this.props.order.products;\r\n    let total = 0;\r\n    for (let p = 0; p < products.length; p++) {\r\n      total += products[p].price * products[p].quantityCart;\r\n    }\r\n    total = Math.round(total * 100) / 100;\r\n    return total;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Orders-Height\">\r\n        <div className=\"Orders\">\r\n          <div className=\"cart-products\">\r\n            <div className=\"cart-products-wrapper\">\r\n              <table>\r\n                <thead>\r\n                  <tr>\r\n                    <th>Item</th>\r\n                    <th>Description</th>\r\n                    <th>Price</th>\r\n                    <th>Quantity</th>\r\n                    <th>Subtotal</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {this.props.order.products.length !== 0 ? (\r\n                    this.props.order.products.map((product, index) => (\r\n                      <tr key={product.id}>\r\n                        <td>\r\n                          <div\r\n                            className=\"frame-img\"\r\n                            onClick={() => this.navigateProduct(product)}\r\n                          >\r\n                            <img src={product.thumbnail} alt={product.id} />\r\n                          </div>\r\n                        </td>\r\n                        <td>\r\n                          <div\r\n                            onClick={() => this.navigateProduct(product)}\r\n                            className=\"details\"\r\n                          >\r\n                            <div className=\"product-brand\">\r\n                              {product.attributes.brand}\r\n                            </div>\r\n                            <div className=\"product-name\">{product.name}</div>\r\n                          </div>\r\n                        </td>\r\n                        <td>{\"€\" + product.price}</td>\r\n                        <td>\r\n                          <input\r\n                            className=\"quantity-input\"\r\n                            type=\"number\"\r\n                            name=\"quantityLs\"\r\n                            min=\"0\"\r\n                            value={product.quantityCart}\r\n                            max={product.quantity}\r\n                            onChange={e => {\r\n                              this.props.onupdateProductOrderQuantity(\r\n                                e.target.value,\r\n                                product.id,\r\n                                this.props.order.products\r\n                              );\r\n                            }}\r\n                            onKeyPress={event => event.preventDefault()}\r\n                          />\r\n                        </td>\r\n                        <td>\r\n                          {\"€\" +\r\n                            Math.round(\r\n                              product.price * product.quantityCart * 100\r\n                            ) /\r\n                              100}\r\n                        </td>\r\n                      </tr>\r\n                    ))\r\n                  ) : (\r\n                    <tr>\r\n                      <td colSpan=\"5\" className=\"no-products\">\r\n                        Your cart is empty!\r\n                      </td>\r\n                    </tr>\r\n                  )}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n          <div className=\"price\">\r\n            <div className=\"price-wrapper\">\r\n              <div className=\"total-price\">\r\n                <p>Total to pay</p>\r\n                <p className=\"price-number\">€{this.calculateTotalHandler()}</p>\r\n              </div>\r\n              <button className=\"checkout-btn\">Proceed to checkout</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    order: state.order\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onfetchProductOrder: () => dispatch(fetchProductOrder()),\r\n    onupdateProductOrderQuantity: (inputValue, productId, products) =>\r\n      dispatch(updateProductOrderQuantity(inputValue, productId, products)),\r\n    onaddProductOrder: productId => dispatch(addProductOrder(productId))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Orders);\r\n"]},"metadata":{},"sourceType":"module"}