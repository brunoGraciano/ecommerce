{"ast":null,"code":"import * as actionTypes from \"./actionTypes\";\nexport var addProductOrder = function addProductOrder(product) {\n  return {\n    type: actionTypes.ADD_PRODUCT_ORDER,\n    product: product\n  };\n};\nexport var removeProductOrder = function removeProductOrder(productId) {\n  /*let products = this.state.products;\r\n  for (let p = 0; p < products.length; p++) {\r\n    if (products[p].id === productId) {\r\n      products.splice(p, 1);\r\n    }\r\n  }\r\n  let productsLs = localStorage.getItem(\"product\").split(\",\");\r\n  let quantityLs = localStorage.getItem(\"quantity\").split(\",\");\r\n  const index = productsLs.indexOf(productId);\r\n  \r\n  quantityLs.splice(index, 1);\r\n  localStorage.setItem(\"quantity\", quantityLs);\r\n  \r\n  if () {\r\n    productsLs.splice(index, 1);\r\n    localStorage.setItem(\"product\", productsLs);\r\n  }\r\n    return {\r\n    type: actionTypes.REMOVE_PRODUCT_ORDER,\r\n    products: productsLs,\r\n    quantity: quantityLs\r\n  };*/\n};\nexport var fetchProductOrder = function fetchProductOrder() {\n  return {\n    type: actionTypes.FETCH_PRODUCT_ORDER\n  };\n};","map":{"version":3,"sources":["C:\\Users\\bruno\\desktop\\ecommerce\\src\\store\\actions\\orderAction.js"],"names":["actionTypes","addProductOrder","product","type","ADD_PRODUCT_ORDER","removeProductOrder","productId","fetchProductOrder","FETCH_PRODUCT_ORDER"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AAEA,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,OAAO,EAAI;AACxC,SAAO;AACLC,IAAAA,IAAI,EAAEH,WAAW,CAACI,iBADb;AAELF,IAAAA,OAAO,EAAEA;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,IAAMG,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,SAAS,EAAI;AAC7C;;;;;;;;;;;;;;;;;;;;;;AAuBD,CAxBM;AA0BP,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AACrC,SAAO;AACLJ,IAAAA,IAAI,EAAEH,WAAW,CAACQ;AADb,GAAP;AAGD,CAJM","sourcesContent":["import * as actionTypes from \"./actionTypes\";\r\n\r\nexport const addProductOrder = product => {\r\n  return {\r\n    type: actionTypes.ADD_PRODUCT_ORDER,\r\n    product: product\r\n  };\r\n};\r\n\r\nexport const removeProductOrder = productId => {\r\n  /*let products = this.state.products;\r\n  for (let p = 0; p < products.length; p++) {\r\n    if (products[p].id === productId) {\r\n      products.splice(p, 1);\r\n    }\r\n  }\r\n  let productsLs = localStorage.getItem(\"product\").split(\",\");\r\n  let quantityLs = localStorage.getItem(\"quantity\").split(\",\");\r\n  const index = productsLs.indexOf(productId);\r\n  \r\n  quantityLs.splice(index, 1);\r\n  localStorage.setItem(\"quantity\", quantityLs);\r\n  \r\n  if () {\r\n    productsLs.splice(index, 1);\r\n    localStorage.setItem(\"product\", productsLs);\r\n  }\r\n\r\n  return {\r\n    type: actionTypes.REMOVE_PRODUCT_ORDER,\r\n    products: productsLs,\r\n    quantity: quantityLs\r\n  };*/\r\n};\r\n\r\nexport const fetchProductOrder = () => {\r\n  return {\r\n    type: actionTypes.FETCH_PRODUCT_ORDER\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}