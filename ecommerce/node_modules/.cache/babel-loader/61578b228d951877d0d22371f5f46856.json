{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\bruno\\\\Desktop\\\\ecommerce\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\bruno\\\\Desktop\\\\ecommerce\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\bruno\\\\Desktop\\\\ecommerce\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\bruno\\\\Desktop\\\\ecommerce\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\bruno\\\\Desktop\\\\ecommerce\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\bruno\\\\desktop\\\\ecommerce\\\\src\\\\components\\\\Orders\\\\Orders.js\";\nimport React, { Component } from \"react\";\nimport \"./Orders.css\";\nimport { connect } from \"react-redux\";\nimport { fetchProductOrder, updateProductOrderQuantity, addProductOrder } from \"../../store/actions/indexStore\";\n\nvar Orders =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Orders, _Component);\n\n  function Orders() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Orders);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Orders)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      products: [],\n      quantityLs: [],\n      total: 0\n    };\n    return _this;\n  }\n\n  _createClass(Orders, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.onfetchProductOrder();\n    }\n  }, {\n    key: \"removeFromCartLs\",\n    value: function removeFromCartLs(productId) {\n      var products = this.state.products;\n\n      for (var p = 0; p < products.length; p++) {\n        if (products[p].id === productId) {\n          products.splice(p, 1);\n        }\n      }\n\n      var productsLs = localStorage.getItem(\"product\").split(\",\");\n      var quantityLs = localStorage.getItem(\"quantity\").split(\",\");\n      var index = productsLs.indexOf(productId);\n      productsLs.splice(index, 1);\n      quantityLs.splice(index, 1);\n      localStorage.setItem(\"product\", productsLs);\n      localStorage.setItem(\"quantity\", quantityLs);\n      this.setState({\n        products: products,\n        quantityLs: quantityLs\n      });\n    }\n  }, {\n    key: \"calculateTotalHandler\",\n    value: function calculateTotalHandler() {\n      var products = this.state.products;\n      var quantity = localStorage.getItem(\"quantity\").split(\",\");\n      var total = 0;\n\n      for (var p = 0; p < products.length; p++) {\n        total += products[p].price * quantity[p];\n      }\n\n      total = Math.round(total * 100) / 100;\n      this.setState({\n        total: total\n      });\n    }\n  }, {\n    key: \"navigateProduct\",\n    value: function navigateProduct(product) {\n      this.props.history.push({\n        pathname: \"/categories/subcategories/\".concat(product.id)\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"Orders\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"cart-products\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"cart-products-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"Item\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Description\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Price\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"Quantity\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Subtotal\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, this.props.order.products.length !== 0 ? this.props.order.products.map(function (product, index) {\n        return React.createElement(\"tr\", {\n          key: product.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"frame-img\",\n          onClick: function onClick() {\n            return _this2.navigateProduct(product);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: product.thumbnail,\n          alt: product.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }))), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          onClick: function onClick() {\n            return _this2.navigateProduct(product);\n          },\n          className: \"details\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"product-brand\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, product.attributes.brand), React.createElement(\"div\", {\n          className: \"product-name\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, product.name))), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, \"€\" + product.price), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          className: \"quantity-input\",\n          type: \"number\",\n          name: \"quantityLs\",\n          min: \"0\",\n          value: product.quantityCart,\n          max: product.quantity,\n          onChange: function onChange(e) {\n            _this2.props.onupdateProductOrderQuantity(e.target.value, product.id);\n\n            _this2.calculateTotalHandler();\n          },\n          onKeyPress: function onKeyPress(event) {\n            return event.preventDefault();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        })), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }, \"€\" + Math.round(product.price * _this2.state.quantityLs[index] * 100) / 100));\n      }) : React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        colSpan: \"5\",\n        className: \"no-products\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, \"Your cart is empty!\")))))), React.createElement(\"div\", {\n        className: \"price\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"price-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"total-price\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, \"Total to pay\"), React.createElement(\"p\", {\n        className: \"price-number\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"\\u20AC\", this.state.total)), React.createElement(\"button\", {\n        className: \"checkout-btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, \"Proceed to checkout\"))));\n    }\n  }]);\n\n  return Orders;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    order: state.order\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onfetchProductOrder: function onfetchProductOrder() {\n      return dispatch(fetchProductOrder());\n    },\n    onupdateProductOrderQuantity: function onupdateProductOrderQuantity(inputValue, productId) {\n      return dispatch(updateProductOrderQuantity(inputValue, productId));\n    },\n    onaddProductOrder: function onaddProductOrder(productId) {\n      return dispatch(addProductOrder(productId));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Orders);","map":{"version":3,"sources":["C:\\Users\\bruno\\desktop\\ecommerce\\src\\components\\Orders\\Orders.js"],"names":["React","Component","connect","fetchProductOrder","updateProductOrderQuantity","addProductOrder","Orders","state","products","quantityLs","total","props","onfetchProductOrder","productId","p","length","id","splice","productsLs","localStorage","getItem","split","index","indexOf","setItem","setState","quantity","price","Math","round","product","history","push","pathname","order","map","navigateProduct","thumbnail","attributes","brand","name","quantityCart","e","onupdateProductOrderQuantity","target","value","calculateTotalHandler","event","preventDefault","mapStateToProps","mapDispatchToProps","dispatch","inputValue","onaddProductOrder"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./Orders.css\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  fetchProductOrder,\r\n  updateProductOrderQuantity,\r\n  addProductOrder\r\n} from \"../../store/actions/indexStore\";\r\n\r\nclass Orders extends Component {\r\n  state = {\r\n    products: [],\r\n    quantityLs: [],\r\n    total: 0\r\n  };\r\n  componentDidMount() {\r\n    this.props.onfetchProductOrder();\r\n  }\r\n  removeFromCartLs(productId) {\r\n    let products = this.state.products;\r\n    for (let p = 0; p < products.length; p++) {\r\n      if (products[p].id === productId) {\r\n        products.splice(p, 1);\r\n      }\r\n    }\r\n    let productsLs = localStorage.getItem(\"product\").split(\",\");\r\n    let quantityLs = localStorage.getItem(\"quantity\").split(\",\");\r\n    const index = productsLs.indexOf(productId);\r\n    productsLs.splice(index, 1);\r\n    quantityLs.splice(index, 1);\r\n    localStorage.setItem(\"product\", productsLs);\r\n    localStorage.setItem(\"quantity\", quantityLs);\r\n    this.setState({\r\n      products: products,\r\n      quantityLs: quantityLs\r\n    });\r\n  }\r\n  calculateTotalHandler() {\r\n    const products = this.state.products;\r\n    const quantity = localStorage.getItem(\"quantity\").split(\",\");\r\n    let total = 0;\r\n    for (let p = 0; p < products.length; p++) {\r\n      total += products[p].price * quantity[p];\r\n    }\r\n    total = Math.round(total * 100) / 100;\r\n    this.setState({ total: total });\r\n  }\r\n  navigateProduct(product) {\r\n    this.props.history.push({\r\n      pathname: `/categories/subcategories/${product.id}`\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"Orders\">\r\n        <div className=\"cart-products\">\r\n          <div className=\"cart-products-wrapper\">\r\n            <table>\r\n              <thead>\r\n                <tr>\r\n                  <th>Item</th>\r\n                  <th>Description</th>\r\n                  <th>Price</th>\r\n                  <th>Quantity</th>\r\n                  <th>Subtotal</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {this.props.order.products.length !== 0 ? (\r\n                  this.props.order.products.map((product, index) => (\r\n                    <tr key={product.id}>\r\n                      <td>\r\n                        <div\r\n                          className=\"frame-img\"\r\n                          onClick={() => this.navigateProduct(product)}\r\n                        >\r\n                          <img src={product.thumbnail} alt={product.id} />\r\n                        </div>\r\n                      </td>\r\n                      <td>\r\n                        <div\r\n                          onClick={() => this.navigateProduct(product)}\r\n                          className=\"details\"\r\n                        >\r\n                          <div className=\"product-brand\">\r\n                            {product.attributes.brand}\r\n                          </div>\r\n                          <div className=\"product-name\">{product.name}</div>\r\n                        </div>\r\n                      </td>\r\n                      <td>{\"€\" + product.price}</td>\r\n                      <td>\r\n                        <input\r\n                          className=\"quantity-input\"\r\n                          type=\"number\"\r\n                          name=\"quantityLs\"\r\n                          min=\"0\"\r\n                          value={product.quantityCart}\r\n                          max={product.quantity}\r\n                          onChange={e => {\r\n                            this.props.onupdateProductOrderQuantity(e.target.value, product.id)\r\n                          \r\n                            this.calculateTotalHandler();\r\n                          }}\r\n                          onKeyPress={event => event.preventDefault()}\r\n                        />\r\n                      </td>\r\n                      <td>\r\n                        {\"€\" +\r\n                          Math.round(\r\n                            product.price * this.state.quantityLs[index] * 100\r\n                          ) /\r\n                            100}\r\n                      </td>\r\n                    </tr>\r\n                  ))\r\n                ) : (\r\n                  <tr>\r\n                    <td colSpan=\"5\" className=\"no-products\">\r\n                      Your cart is empty!\r\n                    </td>\r\n                  </tr>\r\n                )}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n        <div className=\"price\">\r\n          <div className=\"price-wrapper\">\r\n            <div className=\"total-price\">\r\n              <p>Total to pay</p>\r\n              <p className=\"price-number\">€{this.state.total}</p>\r\n            </div>\r\n            <button className=\"checkout-btn\">Proceed to checkout</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    order: state.order\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onfetchProductOrder: () => dispatch(fetchProductOrder()),\r\n    onupdateProductOrderQuantity: (inputValue, productId) => dispatch(updateProductOrderQuantity(inputValue, productId)),\r\n    onaddProductOrder: productId => dispatch(addProductOrder(productId))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Orders);\r\n"]},"metadata":{},"sourceType":"module"}