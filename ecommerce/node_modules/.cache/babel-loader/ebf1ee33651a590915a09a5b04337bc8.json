{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\bruno\\\\Desktop\\\\ecommerce\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\bruno\\\\Desktop\\\\ecommerce\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\bruno\\\\Desktop\\\\ecommerce\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\bruno\\\\Desktop\\\\ecommerce\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\bruno\\\\Desktop\\\\ecommerce\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\bruno\\\\Desktop\\\\ecommerce\\\\src\\\\components\\\\Categorization\\\\Categorization.js\";\nimport React, { Component } from \"react\";\nimport \"./Categorization.css\";\nimport { connect } from \"react-redux\";\nimport { fetchCatalog, createCategory, removeCategory, createSubcategory } from \"../../store/actions/indexStore\";\nimport TransitionGroup from \"react-transition-group/TransitionGroup\";\nimport CSSTransition from \"react-transition-group/CSSTransition\";\n\nvar Categorization =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Categorization, _Component);\n\n  function Categorization() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Categorization);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Categorization)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      category: \"\",\n      categoryImg: \"\",\n      categoryArr: [],\n      selectedCategory: \"\",\n      subcategory: \"\",\n      brand: \"\",\n      weight: \"\",\n      size: \"\",\n      color: \"\",\n      isOpenCategory: false,\n      isOpenSubcategory: false,\n      isOpenBrand: false,\n      isOpenWeight: false,\n      isOpenSize: false,\n      isOpenColor: false,\n      index: 0\n    };\n    return _this;\n  }\n\n  _createClass(Categorization, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.onfetchCatalog();\n    }\n  }, {\n    key: \"postSubcategoryHandler\",\n    value: function postSubcategoryHandler() {}\n  }, {\n    key: \"postBrandHandler\",\n    value: function postBrandHandler() {\n      console.log(this.state.brand);\n      this.setState({\n        brand: \"\"\n      });\n    }\n  }, {\n    key: \"postWeightHandler\",\n    value: function postWeightHandler() {\n      console.log(this.state.weight);\n      this.setState({\n        weight: \"\"\n      });\n    }\n  }, {\n    key: \"postSizeHandler\",\n    value: function postSizeHandler() {\n      console.log(this.state.size);\n      this.setState({\n        size: \"\"\n      });\n    }\n  }, {\n    key: \"postColorHandler\",\n    value: function postColorHandler() {\n      console.log(this.state.color);\n      this.setState({\n        color: \"\"\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"Categorization-Height\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"Categorization\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        className: \"hover-row\",\n        onClick: function onClick() {\n          return _this2.setState(function (prevState, props) {\n            return {\n              isOpenCategory: !prevState.isOpenCategory\n            };\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"Category\"), React.createElement(\"td\", {\n        className: \"dropdown-btn-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-caret-down dropdown-btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }))), this.state.isOpenCategory ? React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        colSpan: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"more-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"input-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Category:\"), React.createElement(\"input\", {\n        onChange: function onChange(e) {\n          _this2.setState({\n            category: e.target.value\n          });\n        },\n        value: this.state.category,\n        type: \"text\",\n        placeholder: \"Category\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"input-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Category Image:\"), React.createElement(\"input\", {\n        onChange: function onChange(e) {\n          _this2.setState({\n            categoryImg: e.target.value\n          });\n        },\n        value: this.state.categoryImg,\n        type: \"text\",\n        placeholder: \"Category Image\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"submit\",\n        onClick: function onClick() {\n          return _this2.props.oncreateCategory(_this2.state.category, _this2.state.categoryImg);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"Submit\"), React.createElement(\"button\", {\n        className: \"reset\",\n        onClick: function onClick() {\n          return _this2.setState({\n            category: \"\",\n            categoryImg: \"\"\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"Reset\")), React.createElement(TransitionGroup, {\n        component: \"ul\",\n        className: \"list-ul\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, this.props.catalog.catalog.map(function (category) {\n        return React.createElement(CSSTransition, {\n          key: category.id,\n          classNames: \"fade\",\n          timeout: 400,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        }, React.createElement(\"li\", {\n          className: \"list-li\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }, category.name, React.createElement(\"i\", {\n          className: \"fas fa-times btn-icon\",\n          onClick: function onClick() {\n            _this2.props.onremoveCategory(category.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        })));\n      }))))) : null, React.createElement(\"tr\", {\n        className: \"hover-row\",\n        onClick: function onClick() {\n          return _this2.setState(function (prevState, props) {\n            return {\n              isOpenSubcategory: !prevState.isOpenSubcategory\n            };\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, \"Subcategory\"), React.createElement(\"td\", {\n        className: \"dropdown-btn-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-caret-down dropdown-btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }))), this.state.isOpenSubcategory ? React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        colSpan: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"more-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"input-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, \"Category:\"), React.createElement(\"select\", {\n        onChange: function onChange(e) {\n          return _this2.setState({\n            selectedCategory: e.target.options[e.target.selectedIndex].text\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, this.props.catalog.catalog.map(function (category) {\n        return React.createElement(\"option\", {\n          key: category.id,\n          value: category.name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168\n          },\n          __self: this\n        }, category.name);\n      })), React.createElement(\"p\", {\n        className: \"input-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, \"Subcategory:\"), React.createElement(\"input\", {\n        onChange: function onChange(e) {\n          _this2.setState({\n            subcategory: e.target.value\n          });\n        },\n        value: this.state.subcategory,\n        type: \"text\",\n        placeholder: \"Subcategory\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"submit\",\n        onClick: function onClick() {\n          return _this2.props.oncreateSubcategory();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, \"Submit\"), React.createElement(\"button\", {\n        className: \"reset\",\n        onClick: function onClick() {\n          return _this2.setState({\n            subcategory: \"\"\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, \"Reset\")), React.createElement(\"ul\", {\n        className: \"list-ul\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, this.props.catalog.catalog.map(function (category, index) {\n        if (category.name === _this2.state.selectedCategory) {\n          return category.subcategories.map(function (subcategory) {\n            return React.createElement(\"li\", {\n              className: \"list-li\",\n              key: subcategory.id + \"_List\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 203\n              },\n              __self: this\n            }, subcategory.name, React.createElement(\"i\", {\n              className: \"fas fa-times btn-icon\",\n              onClick: function onClick() {\n                _this2.props.onremoveCategory(category.id);\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 208\n              },\n              __self: this\n            }));\n          });\n        }\n\n        if (_this2.state.selectedCategory === \"\" && index === 0) {\n          return category.subcategories.map(function (subcategory) {\n            return React.createElement(\"li\", {\n              className: \"list-li\",\n              key: subcategory.id,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 222\n              },\n              __self: this\n            }, subcategory.name, React.createElement(\"i\", {\n              className: \"fas fa-times btn-icon\",\n              onClick: function onClick() {\n                _this2.props.onremoveCategory(category.id);\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 224\n              },\n              __self: this\n            }));\n          });\n        }\n\n        return null;\n      }))))) : null, React.createElement(\"tr\", {\n        className: \"hover-row\",\n        onClick: function onClick() {\n          return _this2.setState(function (prevState, props) {\n            return {\n              isOpenBrand: !prevState.isOpenBrand\n            };\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, \"Brand\"), React.createElement(\"td\", {\n        className: \"dropdown-btn-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-caret-down dropdown-btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }))), this.state.isOpenBrand ? React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        colSpan: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"more-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"input-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, \"Brand:\"), React.createElement(\"input\", {\n        onChange: function onChange(e) {\n          _this2.setState({\n            brand: e.target.value\n          });\n        },\n        value: this.state.brand,\n        type: \"text\",\n        placeholder: \"Brand\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"submit\",\n        onClick: function onClick() {\n          return _this2.postBrandHandler();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, \"Submit\"), React.createElement(\"button\", {\n        className: \"reset\",\n        onClick: function onClick() {\n          return _this2.setState({\n            brand: \"\"\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      }, \"Reset\"))))) : null, React.createElement(\"tr\", {\n        className: \"hover-row\",\n        onClick: function onClick() {\n          return _this2.setState(function (prevState, props) {\n            return {\n              isOpenWeight: !prevState.isOpenWeight\n            };\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }, \"Weight\"), React.createElement(\"td\", {\n        className: \"dropdown-btn-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-caret-down dropdown-btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }))), this.state.isOpenWeight ? React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        colSpan: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"more-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"input-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }, \"Weight:\"), React.createElement(\"input\", {\n        onChange: function onChange(e) {\n          _this2.setState({\n            weight: e.target.value\n          });\n        },\n        value: this.state.weight,\n        type: \"text\",\n        placeholder: \"Weight\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"submit\",\n        onClick: function onClick() {\n          return _this2.postWeightHandler();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317\n        },\n        __self: this\n      }, \"Submit\"), React.createElement(\"button\", {\n        className: \"reset\",\n        onClick: function onClick() {\n          return _this2.setState({\n            weight: \"\"\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323\n        },\n        __self: this\n      }, \"Reset\"))))) : null, React.createElement(\"tr\", {\n        className: \"hover-row\",\n        onClick: function onClick() {\n          return _this2.setState(function (prevState, props) {\n            return {\n              isOpenSize: !prevState.isOpenSize\n            };\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342\n        },\n        __self: this\n      }, \"Size\"), React.createElement(\"td\", {\n        className: \"dropdown-btn-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-caret-down dropdown-btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344\n        },\n        __self: this\n      }))), this.state.isOpenSize ? React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        colSpan: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"more-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"input-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351\n        },\n        __self: this\n      }, \"Size:\"), React.createElement(\"input\", {\n        onChange: function onChange(e) {\n          _this2.setState({\n            size: e.target.value\n          });\n        },\n        value: this.state.size,\n        type: \"text\",\n        placeholder: \"Size\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"submit\",\n        onClick: function onClick() {\n          return _this2.postSizeHandler();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363\n        },\n        __self: this\n      }, \"Submit\"), React.createElement(\"button\", {\n        className: \"reset\",\n        onClick: function onClick() {\n          return _this2.setState({\n            size: \"\"\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369\n        },\n        __self: this\n      }, \"Reset\"))))) : null, React.createElement(\"tr\", {\n        className: \"hover-row\",\n        onClick: function onClick() {\n          return _this2.setState(function (prevState, props) {\n            return {\n              isOpenColor: !prevState.isOpenColor\n            };\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 380\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 388\n        },\n        __self: this\n      }, \"Color\"), React.createElement(\"td\", {\n        className: \"dropdown-btn-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 389\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-caret-down dropdown-btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 390\n        },\n        __self: this\n      }))), this.state.isOpenColor ? React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 394\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        colSpan: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 395\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"more-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"input-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 397\n        },\n        __self: this\n      }, \"Color:\"), React.createElement(\"input\", {\n        onChange: function onChange(e) {\n          _this2.setState({\n            color: e.target.value\n          });\n        },\n        value: this.state.color,\n        type: \"text\",\n        placeholder: \"Color\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"submit\",\n        onClick: function onClick() {\n          return _this2.postColorHandler();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 409\n        },\n        __self: this\n      }, \"Submit\"), React.createElement(\"button\", {\n        className: \"reset\",\n        onClick: function onClick() {\n          return _this2.setState({\n            color: \"\"\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 415\n        },\n        __self: this\n      }, \"Reset\"))))) : null))));\n    }\n  }]);\n\n  return Categorization;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    catalog: state.catalog\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onfetchCatalog: function onfetchCatalog() {\n      return dispatch(fetchCatalog());\n    },\n    oncreateCategory: function oncreateCategory(name, imageUrl) {\n      return dispatch(createCategory(name, imageUrl));\n    },\n    onremoveCategory: function onremoveCategory(categoryId) {\n      return dispatch(removeCategory(categoryId));\n    },\n    oncreateSubcategory: function oncreateSubcategory(subcategoryId, subcategory) {\n      return dispatch(createSubcategory(subcategoryId, subcategory));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Categorization);","map":{"version":3,"sources":["C:\\Users\\bruno\\Desktop\\ecommerce\\src\\components\\Categorization\\Categorization.js"],"names":["React","Component","connect","fetchCatalog","createCategory","removeCategory","createSubcategory","TransitionGroup","CSSTransition","Categorization","state","category","categoryImg","categoryArr","selectedCategory","subcategory","brand","weight","size","color","isOpenCategory","isOpenSubcategory","isOpenBrand","isOpenWeight","isOpenSize","isOpenColor","index","props","onfetchCatalog","console","log","setState","prevState","e","target","value","oncreateCategory","catalog","map","id","name","onremoveCategory","options","selectedIndex","text","oncreateSubcategory","subcategories","postBrandHandler","postWeightHandler","postSizeHandler","postColorHandler","mapStateToProps","mapDispatchToProps","dispatch","imageUrl","categoryId","subcategoryId"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./Categorization.css\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  fetchCatalog,\r\n  createCategory,\r\n  removeCategory,\r\n  createSubcategory\r\n} from \"../../store/actions/indexStore\";\r\nimport TransitionGroup from \"react-transition-group/TransitionGroup\";\r\nimport CSSTransition from \"react-transition-group/CSSTransition\";\r\n\r\nclass Categorization extends Component {\r\n  state = {\r\n    category: \"\",\r\n    categoryImg: \"\",\r\n    categoryArr: [],\r\n    selectedCategory: \"\",\r\n    subcategory: \"\",\r\n    brand: \"\",\r\n    weight: \"\",\r\n    size: \"\",\r\n    color: \"\",\r\n    isOpenCategory: false,\r\n    isOpenSubcategory: false,\r\n    isOpenBrand: false,\r\n    isOpenWeight: false,\r\n    isOpenSize: false,\r\n    isOpenColor: false,\r\n    index: 0\r\n  };\r\n  componentDidMount() {\r\n    this.props.onfetchCatalog();\r\n  }\r\n  postSubcategoryHandler() {}\r\n  postBrandHandler() {\r\n    console.log(this.state.brand);\r\n    this.setState({ brand: \"\" });\r\n  }\r\n  postWeightHandler() {\r\n    console.log(this.state.weight);\r\n    this.setState({ weight: \"\" });\r\n  }\r\n  postSizeHandler() {\r\n    console.log(this.state.size);\r\n    this.setState({ size: \"\" });\r\n  }\r\n  postColorHandler() {\r\n    console.log(this.state.color);\r\n    this.setState({ color: \"\" });\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"Categorization-Height\">\r\n        <div className=\"Categorization\">\r\n          <table>\r\n            <tbody>\r\n              <tr\r\n                className=\"hover-row\"\r\n                onClick={() =>\r\n                  this.setState((prevState, props) => {\r\n                    return { isOpenCategory: !prevState.isOpenCategory };\r\n                  })\r\n                }\r\n              >\r\n                <td>Category</td>\r\n                <td className=\"dropdown-btn-wrapper\">\r\n                  <i className=\"fas fa-caret-down dropdown-btn\" />\r\n                </td>\r\n              </tr>\r\n              {this.state.isOpenCategory ? (\r\n                <tr>\r\n                  <td colSpan=\"2\">\r\n                    <div className=\"more-info\">\r\n                      <p className=\"input-info\">Category:</p>\r\n                      <input\r\n                        onChange={e => {\r\n                          this.setState({\r\n                            category: e.target.value\r\n                          });\r\n                        }}\r\n                        value={this.state.category}\r\n                        type=\"text\"\r\n                        placeholder=\"Category\"\r\n                      />\r\n                      <p className=\"input-info\">Category Image:</p>\r\n                      <input\r\n                        onChange={e => {\r\n                          this.setState({\r\n                            categoryImg: e.target.value\r\n                          });\r\n                        }}\r\n                        value={this.state.categoryImg}\r\n                        type=\"text\"\r\n                        placeholder=\"Category Image\"\r\n                      />\r\n                      <div className=\"buttons\">\r\n                        <button\r\n                          className=\"submit\"\r\n                          onClick={() =>\r\n                            this.props.oncreateCategory(\r\n                              this.state.category,\r\n                              this.state.categoryImg\r\n                            )\r\n                          }\r\n                        >\r\n                          Submit\r\n                        </button>\r\n                        <button\r\n                          className=\"reset\"\r\n                          onClick={() =>\r\n                            this.setState({ category: \"\", categoryImg: \"\" })\r\n                          }\r\n                        >\r\n                          Reset\r\n                        </button>\r\n                      </div>\r\n                      <TransitionGroup component=\"ul\" className=\"list-ul\">\r\n                        {this.props.catalog.catalog.map(category => (\r\n                          <CSSTransition\r\n                            key={category.id}\r\n                            classNames=\"fade\"\r\n                            timeout={400}\r\n                          >\r\n                            <li className=\"list-li\">\r\n                              {category.name}\r\n                              <i\r\n                                className=\"fas fa-times btn-icon\"\r\n                                onClick={() => {\r\n                                  this.props.onremoveCategory(category.id);\r\n                                }}\r\n                              />\r\n                            </li>\r\n                          </CSSTransition>\r\n                        ))}\r\n                      </TransitionGroup>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              ) : null}\r\n              <tr\r\n                className=\"hover-row\"\r\n                onClick={() =>\r\n                  this.setState((prevState, props) => {\r\n                    return { isOpenSubcategory: !prevState.isOpenSubcategory };\r\n                  })\r\n                }\r\n              >\r\n                <td>Subcategory</td>\r\n                <td className=\"dropdown-btn-wrapper\">\r\n                  <i className=\"fas fa-caret-down dropdown-btn\" />\r\n                </td>\r\n              </tr>\r\n              {this.state.isOpenSubcategory ? (\r\n                <tr>\r\n                  <td colSpan=\"2\">\r\n                    <div className=\"more-info\">\r\n                      <p className=\"input-info\">Category:</p>\r\n                      <select\r\n                        onChange={e =>\r\n                          this.setState({\r\n                            selectedCategory:\r\n                              e.target.options[e.target.selectedIndex].text\r\n                          })\r\n                        }\r\n                      >\r\n                        {this.props.catalog.catalog.map(category => (\r\n                          <option key={category.id} value={category.name}>\r\n                            {category.name}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n                      <p className=\"input-info\">Subcategory:</p>\r\n                      <input\r\n                        onChange={e => {\r\n                          this.setState({\r\n                            subcategory: e.target.value\r\n                          });\r\n                        }}\r\n                        value={this.state.subcategory}\r\n                        type=\"text\"\r\n                        placeholder=\"Subcategory\"\r\n                      />\r\n                      <div className=\"buttons\">\r\n                        <button\r\n                          className=\"submit\"\r\n                          onClick={() => this.props.oncreateSubcategory()}\r\n                        >\r\n                          Submit\r\n                        </button>\r\n                        <button\r\n                          className=\"reset\"\r\n                          onClick={() => this.setState({ subcategory: \"\" })}\r\n                        >\r\n                          Reset\r\n                        </button>\r\n                      </div>\r\n\r\n                      <ul className=\"list-ul\">\r\n                        {this.props.catalog.catalog.map((category, index) => {\r\n                          if (category.name === this.state.selectedCategory) {\r\n                            return category.subcategories.map(subcategory => (\r\n                              <li\r\n                                className=\"list-li\"\r\n                                key={subcategory.id + \"_List\"}\r\n                              >\r\n                                {subcategory.name}\r\n                                <i\r\n                                  className=\"fas fa-times btn-icon\"\r\n                                  onClick={() => {\r\n                                    this.props.onremoveCategory(category.id);\r\n                                  }}\r\n                                />\r\n                              </li>\r\n                            ));\r\n                          }\r\n                          if (\r\n                            this.state.selectedCategory === \"\" &&\r\n                            index === 0\r\n                          ) {\r\n                            return category.subcategories.map(subcategory => (\r\n                              <li className=\"list-li\" key={subcategory.id}>\r\n                                {subcategory.name}\r\n                                <i\r\n                                  className=\"fas fa-times btn-icon\"\r\n                                  onClick={() => {\r\n                                    this.props.onremoveCategory(category.id);\r\n                                  }}\r\n                                />\r\n                              </li>\r\n                            ));\r\n                          }\r\n\r\n                          return null;\r\n                        })}\r\n                      </ul>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              ) : null}\r\n              <tr\r\n                className=\"hover-row\"\r\n                onClick={() =>\r\n                  this.setState((prevState, props) => {\r\n                    return { isOpenBrand: !prevState.isOpenBrand };\r\n                  })\r\n                }\r\n              >\r\n                <td>Brand</td>\r\n                <td className=\"dropdown-btn-wrapper\">\r\n                  <i className=\"fas fa-caret-down dropdown-btn\" />\r\n                </td>\r\n              </tr>\r\n              {this.state.isOpenBrand ? (\r\n                <tr>\r\n                  <td colSpan=\"2\">\r\n                    <div className=\"more-info\">\r\n                      <p className=\"input-info\">Brand:</p>\r\n                      <input\r\n                        onChange={e => {\r\n                          this.setState({\r\n                            brand: e.target.value\r\n                          });\r\n                        }}\r\n                        value={this.state.brand}\r\n                        type=\"text\"\r\n                        placeholder=\"Brand\"\r\n                      />\r\n                      <div className=\"buttons\">\r\n                        <button\r\n                          className=\"submit\"\r\n                          onClick={() => this.postBrandHandler()}\r\n                        >\r\n                          Submit\r\n                        </button>\r\n                        <button\r\n                          className=\"reset\"\r\n                          onClick={() => this.setState({ brand: \"\" })}\r\n                        >\r\n                          Reset\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              ) : null}\r\n\r\n              <tr\r\n                className=\"hover-row\"\r\n                onClick={() =>\r\n                  this.setState((prevState, props) => {\r\n                    return { isOpenWeight: !prevState.isOpenWeight };\r\n                  })\r\n                }\r\n              >\r\n                <td>Weight</td>\r\n                <td className=\"dropdown-btn-wrapper\">\r\n                  <i className=\"fas fa-caret-down dropdown-btn\" />\r\n                </td>\r\n              </tr>\r\n              {this.state.isOpenWeight ? (\r\n                <tr>\r\n                  <td colSpan=\"2\">\r\n                    <div className=\"more-info\">\r\n                      <p className=\"input-info\">Weight:</p>\r\n                      <input\r\n                        onChange={e => {\r\n                          this.setState({\r\n                            weight: e.target.value\r\n                          });\r\n                        }}\r\n                        value={this.state.weight}\r\n                        type=\"text\"\r\n                        placeholder=\"Weight\"\r\n                      />\r\n                      <div className=\"buttons\">\r\n                        <button\r\n                          className=\"submit\"\r\n                          onClick={() => this.postWeightHandler()}\r\n                        >\r\n                          Submit\r\n                        </button>\r\n                        <button\r\n                          className=\"reset\"\r\n                          onClick={() => this.setState({ weight: \"\" })}\r\n                        >\r\n                          Reset\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              ) : null}\r\n              <tr\r\n                className=\"hover-row\"\r\n                onClick={() =>\r\n                  this.setState((prevState, props) => {\r\n                    return { isOpenSize: !prevState.isOpenSize };\r\n                  })\r\n                }\r\n              >\r\n                <td>Size</td>\r\n                <td className=\"dropdown-btn-wrapper\">\r\n                  <i className=\"fas fa-caret-down dropdown-btn\" />\r\n                </td>\r\n              </tr>\r\n              {this.state.isOpenSize ? (\r\n                <tr>\r\n                  <td colSpan=\"2\">\r\n                    <div className=\"more-info\">\r\n                      <p className=\"input-info\">Size:</p>\r\n                      <input\r\n                        onChange={e => {\r\n                          this.setState({\r\n                            size: e.target.value\r\n                          });\r\n                        }}\r\n                        value={this.state.size}\r\n                        type=\"text\"\r\n                        placeholder=\"Size\"\r\n                      />\r\n                      <div className=\"buttons\">\r\n                        <button\r\n                          className=\"submit\"\r\n                          onClick={() => this.postSizeHandler()}\r\n                        >\r\n                          Submit\r\n                        </button>\r\n                        <button\r\n                          className=\"reset\"\r\n                          onClick={() => this.setState({ size: \"\" })}\r\n                        >\r\n                          Reset\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              ) : null}\r\n              <tr\r\n                className=\"hover-row\"\r\n                onClick={() =>\r\n                  this.setState((prevState, props) => {\r\n                    return { isOpenColor: !prevState.isOpenColor };\r\n                  })\r\n                }\r\n              >\r\n                <td>Color</td>\r\n                <td className=\"dropdown-btn-wrapper\">\r\n                  <i className=\"fas fa-caret-down dropdown-btn\" />\r\n                </td>\r\n              </tr>\r\n              {this.state.isOpenColor ? (\r\n                <tr>\r\n                  <td colSpan=\"2\">\r\n                    <div className=\"more-info\">\r\n                      <p className=\"input-info\">Color:</p>\r\n                      <input\r\n                        onChange={e => {\r\n                          this.setState({\r\n                            color: e.target.value\r\n                          });\r\n                        }}\r\n                        value={this.state.color}\r\n                        type=\"text\"\r\n                        placeholder=\"Color\"\r\n                      />\r\n                      <div className=\"buttons\">\r\n                        <button\r\n                          className=\"submit\"\r\n                          onClick={() => this.postColorHandler()}\r\n                        >\r\n                          Submit\r\n                        </button>\r\n                        <button\r\n                          className=\"reset\"\r\n                          onClick={() => this.setState({ color: \"\" })}\r\n                        >\r\n                          Reset\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              ) : null}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    catalog: state.catalog\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onfetchCatalog: () => dispatch(fetchCatalog()),\r\n    oncreateCategory: (name, imageUrl) =>\r\n      dispatch(createCategory(name, imageUrl)),\r\n    onremoveCategory: categoryId => dispatch(removeCategory(categoryId)),\r\n    oncreateSubcategory: (subcategoryId, subcategory) =>\r\n      dispatch(createSubcategory(subcategoryId, subcategory))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Categorization);\r\n"]},"metadata":{},"sourceType":"module"}