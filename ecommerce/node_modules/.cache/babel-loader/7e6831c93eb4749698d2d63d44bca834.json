{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\bruno\\\\Desktop\\\\ecommerce\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\bruno\\\\Desktop\\\\ecommerce\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\bruno\\\\Desktop\\\\ecommerce\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\bruno\\\\Desktop\\\\ecommerce\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\bruno\\\\Desktop\\\\ecommerce\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\bruno\\\\Desktop\\\\ecommerce\\\\src\\\\components\\\\Categorization\\\\Categorization.js\";\nimport React, { Component } from \"react\";\nimport \"./Categorization.css\";\nimport { connect } from \"react-redux\";\nimport { fetchCatalog, createCategory, removeCategory, createSubcategory, removeSubcategory, editCategory, editSubcategory, createBrand } from \"../../store/actions/indexStore\";\nimport TransitionGroup from \"react-transition-group/TransitionGroup\";\nimport CSSTransition from \"react-transition-group/CSSTransition\";\nimport Modal from \"../UI/Modal/Modal\";\n\nvar Categorization =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Categorization, _Component);\n\n  function Categorization() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Categorization);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Categorization)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      category: \"\",\n      categoryImg: \"\",\n      selectedCategory: \"\",\n      subcategory: \"\",\n      brand: \"\",\n      weight: \"\",\n      size: \"\",\n      color: \"\",\n      isOpenCategory: true,\n      isOpenSubcategory: true,\n      isOpenBrand: true,\n      isOpenWeight: true,\n      isOpenSize: true,\n      isOpenColor: true,\n      selectedCategoryObj: {},\n      isModalOpen: false\n    };\n    return _this;\n  }\n\n  _createClass(Categorization, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.onfetchCatalog();\n    }\n  }, {\n    key: \"closeFullScreenHandler\",\n    value: function closeFullScreenHandler(value) {\n      if (value !== \"\") {\n        this.props.oneditCategory(this.state.selectedCategoryObj.categoryId, {\n          name: this.state.selectedCategoryObj.categoryName,\n          img: value\n        });\n      }\n\n      this.setState({\n        isModalOpen: false\n      });\n    }\n  }, {\n    key: \"postBrandHandler\",\n    value: function postBrandHandler() {\n      console.log(this.state.brand);\n      this.setState({\n        brand: \"\"\n      });\n    }\n  }, {\n    key: \"postWeightHandler\",\n    value: function postWeightHandler() {\n      console.log(this.state.weight);\n      this.setState({\n        weight: \"\"\n      });\n    }\n  }, {\n    key: \"postSizeHandler\",\n    value: function postSizeHandler() {\n      console.log(this.state.size);\n      this.setState({\n        size: \"\"\n      });\n    }\n  }, {\n    key: \"postColorHandler\",\n    value: function postColorHandler() {\n      console.log(this.state.color);\n      this.setState({\n        color: \"\"\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"Categorization-Height\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"Categorization\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        style: {\n          boxShadow: this.state.isOpenCategory ? \"0px 0px 10px 1px rgba(0, 0, 0, 0.08)\" : null\n        },\n        className: \"hover-row\",\n        onClick: function onClick() {\n          return _this2.setState(function (prevState, props) {\n            return {\n              isOpenCategory: !prevState.isOpenCategory\n            };\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Category\"), React.createElement(\"td\", {\n        className: \"dropdown-btn-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-caret-down dropdown-btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }))), this.state.isOpenCategory ? React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        colSpan: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"more-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"input-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"Category:\"), React.createElement(\"input\", {\n        className: \"input\",\n        onChange: function onChange(e) {\n          _this2.setState({\n            category: e.target.value\n          });\n        },\n        value: this.state.category,\n        type: \"text\",\n        placeholder: \"Category\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"input-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"Category Image:\"), React.createElement(\"input\", {\n        className: \"input\",\n        onChange: function onChange(e) {\n          _this2.setState({\n            categoryImg: e.target.value\n          });\n        },\n        value: this.state.categoryImg,\n        type: \"text\",\n        placeholder: \"Category Image\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"submit\",\n        onClick: function onClick() {\n          return _this2.props.oncreateCategory(_this2.state.category, _this2.state.categoryImg);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, \"Submit\"), React.createElement(\"button\", {\n        className: \"reset\",\n        onClick: function onClick() {\n          return _this2.setState({\n            category: \"\",\n            categoryImg: \"\"\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \"Reset\")), React.createElement(TransitionGroup, {\n        component: \"ul\",\n        className: \"list-ul\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, this.props.catalog.catalog.map(function (category) {\n        return React.createElement(CSSTransition, {\n          key: category.id,\n          classNames: \"fade\",\n          timeout: 400,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141\n          },\n          __self: this\n        }, React.createElement(\"li\", {\n          className: \"list-li\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          className: \"input-edit\",\n          value: category.name,\n          onChange: function onChange(e) {\n            _this2.props.oneditCategory(category.id, {\n              name: e.target.value,\n              img: category.img\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"btn-icon\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"fas fa-camera camera\",\n          onClick: function onClick() {\n            _this2.setState({\n              selectedCategoryObj: {\n                categoryId: category.id,\n                categoryName: category.name\n              },\n              isModalOpen: true\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158\n          },\n          __self: this\n        }), React.createElement(\"i\", {\n          className: \"fas fa-times close\",\n          onClick: function onClick() {\n            _this2.props.onremoveCategory(category.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170\n          },\n          __self: this\n        }))));\n      }))))) : null, React.createElement(\"tr\", {\n        style: {\n          boxShadow: this.state.isOpenSubcategory ? \"0px 0px 10px 1px rgba(0, 0, 0, 0.08)\" : null\n        },\n        className: \"hover-row\",\n        onClick: function onClick() {\n          return _this2.setState(function (prevState, props) {\n            return {\n              isOpenSubcategory: !prevState.isOpenSubcategory\n            };\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, \"Subcategory\"), React.createElement(\"td\", {\n        className: \"dropdown-btn-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-caret-down dropdown-btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }))), this.state.isOpenSubcategory ? React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        colSpan: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"more-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"input-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, \"Category:\"), React.createElement(\"select\", {\n        onChange: function onChange(e) {\n          return _this2.setState({\n            selectedCategory: e.target.options[e.target.selectedIndex].value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, this.props.catalog.catalog.map(function (category) {\n        return React.createElement(\"option\", {\n          key: category.id,\n          value: category.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 219\n          },\n          __self: this\n        }, category.name);\n      })), React.createElement(\"p\", {\n        className: \"input-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, \"Subcategory:\"), React.createElement(\"input\", {\n        className: \"input\",\n        onChange: function onChange(e) {\n          _this2.setState({\n            subcategory: e.target.value\n          });\n        },\n        value: this.state.subcategory,\n        type: \"text\",\n        placeholder: \"Subcategory\",\n        onKeyPress: function onKeyPress(e) {\n          if (e.key === \"Enter\") {\n            _this2.props.oncreateSubcategory(_this2.state.selectedCategory === \"\" ? _this2.props.catalog.catalog[0].id : _this2.state.selectedCategory, _this2.state.subcategory);\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"submit\",\n        onClick: function onClick() {\n          return _this2.props.oncreateSubcategory(_this2.state.selectedCategory === \"\" ? _this2.props.catalog.catalog[0].id : _this2.state.selectedCategory, _this2.state.subcategory);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, \"Submit\"), React.createElement(\"button\", {\n        className: \"reset\",\n        onClick: function onClick() {\n          return _this2.setState({\n            subcategory: \"\"\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, \"Reset\")), React.createElement(TransitionGroup, {\n        component: \"ul\",\n        className: \"list-ul\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }, this.props.catalog.catalog.map(function (category, index) {\n        if (category.id === _this2.state.selectedCategory) {\n          return category.subcategories.map(function (subcategory) {\n            return React.createElement(CSSTransition, {\n              key: subcategory.id,\n              classNames: \"fade\",\n              timeout: 400,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 271\n              },\n              __self: this\n            }, React.createElement(\"li\", {\n              className: \"list-li\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 276\n              },\n              __self: this\n            }, React.createElement(\"input\", {\n              className: \"input-edit\",\n              value: subcategory.name,\n              onChange: function onChange(e) {\n                _this2.props.oneditSubcategory(category.id, subcategory.id, {\n                  name: e.target.value\n                });\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 277\n              },\n              __self: this\n            }), React.createElement(\"div\", {\n              className: \"btn-icon\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 290\n              },\n              __self: this\n            }, React.createElement(\"i\", {\n              className: \"fas fa-times close\",\n              onClick: function onClick() {\n                _this2.props.onremoveSubcategory(category.id, subcategory.id);\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 291\n              },\n              __self: this\n            }))));\n          });\n        }\n\n        if (_this2.state.selectedCategory === \"\" && index === 0) {\n          return category.subcategories.map(function (subcategory) {\n            return React.createElement(CSSTransition, {\n              key: subcategory.id,\n              classNames: \"fade\",\n              timeout: 400,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 310\n              },\n              __self: this\n            }, React.createElement(\"li\", {\n              className: \"list-li\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 315\n              },\n              __self: this\n            }, React.createElement(\"input\", {\n              className: \"input-edit\",\n              value: subcategory.name,\n              onChange: function onChange(e) {\n                _this2.props.oneditSubcategory(category.id, subcategory.id, {\n                  name: e.target.value\n                });\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 316\n              },\n              __self: this\n            }), React.createElement(\"div\", {\n              className: \"btn-icon\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 329\n              },\n              __self: this\n            }, React.createElement(\"i\", {\n              className: \"fas fa-times close\",\n              onClick: function onClick() {\n                _this2.props.onremoveSubcategory(category.id, subcategory.id);\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 330\n              },\n              __self: this\n            }))));\n          });\n        }\n\n        return null;\n      }))))) : null, React.createElement(\"tr\", {\n        style: {\n          boxShadow: this.state.isOpenBrand ? \"0px 0px 10px 1px rgba(0, 0, 0, 0.08)\" : null\n        },\n        className: \"hover-row\",\n        onClick: function onClick() {\n          return _this2.setState(function (prevState, props) {\n            return {\n              isOpenBrand: !prevState.isOpenBrand\n            };\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365\n        },\n        __self: this\n      }, \"Brand\"), React.createElement(\"td\", {\n        className: \"dropdown-btn-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-caret-down dropdown-btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367\n        },\n        __self: this\n      }))), this.state.isOpenBrand ? React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        colSpan: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 372\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"more-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"input-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 374\n        },\n        __self: this\n      }, \"Brand:\"), React.createElement(\"input\", {\n        className: \"input\",\n        onChange: function onChange(e) {\n          _this2.setState({\n            brand: e.target.value\n          });\n        },\n        value: this.state.brand,\n        type: \"text\",\n        placeholder: \"Brand\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"submit\",\n        onClick: function onClick() {\n          return _this2.props.oncreateBrands(_this2.state.brand);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 387\n        },\n        __self: this\n      }, \"Submit\"), React.createElement(\"button\", {\n        className: \"reset\",\n        onClick: function onClick() {\n          return _this2.setState({\n            brand: \"\"\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 395\n        },\n        __self: this\n      }, \"Reset\"))))) : null, React.createElement(\"tr\", {\n        style: {\n          boxShadow: this.state.isOpenWeight ? \"0px 0px 10px 1px rgba(0, 0, 0, 0.08)\" : null\n        },\n        className: \"hover-row\",\n        onClick: function onClick() {\n          return _this2.setState(function (prevState, props) {\n            return {\n              isOpenWeight: !prevState.isOpenWeight\n            };\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 436\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 449\n        },\n        __self: this\n      }, \"Weight\"), React.createElement(\"td\", {\n        className: \"dropdown-btn-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 450\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-caret-down dropdown-btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 451\n        },\n        __self: this\n      }))), this.state.isOpenWeight ? React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 455\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        colSpan: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 456\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"more-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 457\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"input-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 458\n        },\n        __self: this\n      }, \"Weight:\"), React.createElement(\"input\", {\n        onChange: function onChange(e) {\n          _this2.setState({\n            weight: e.target.value\n          });\n        },\n        value: this.state.weight,\n        type: \"text\",\n        placeholder: \"Weight\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 459\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 469\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"submit\",\n        onClick: function onClick() {\n          return _this2.postWeightHandler();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 470\n        },\n        __self: this\n      }, \"Submit\"), React.createElement(\"button\", {\n        className: \"reset\",\n        onClick: function onClick() {\n          return _this2.setState({\n            weight: \"\"\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 476\n        },\n        __self: this\n      }, \"Reset\"))))) : null, React.createElement(\"tr\", {\n        style: {\n          boxShadow: this.state.isOpenSize ? \"0px 0px 10px 1px rgba(0, 0, 0, 0.08)\" : null\n        },\n        className: \"hover-row\",\n        onClick: function onClick() {\n          return _this2.setState(function (prevState, props) {\n            return {\n              isOpenSize: !prevState.isOpenSize\n            };\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 487\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 500\n        },\n        __self: this\n      }, \"Size\"), React.createElement(\"td\", {\n        className: \"dropdown-btn-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 501\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-caret-down dropdown-btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 502\n        },\n        __self: this\n      }))), this.state.isOpenSize ? React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 506\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        colSpan: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 507\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"more-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 508\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"input-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 509\n        },\n        __self: this\n      }, \"Size:\"), React.createElement(\"input\", {\n        onChange: function onChange(e) {\n          _this2.setState({\n            size: e.target.value\n          });\n        },\n        value: this.state.size,\n        type: \"text\",\n        placeholder: \"Size\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 510\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 520\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"submit\",\n        onClick: function onClick() {\n          return _this2.postSizeHandler();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 521\n        },\n        __self: this\n      }, \"Submit\"), React.createElement(\"button\", {\n        className: \"reset\",\n        onClick: function onClick() {\n          return _this2.setState({\n            size: \"\"\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 527\n        },\n        __self: this\n      }, \"Reset\"))))) : null, React.createElement(\"tr\", {\n        style: {\n          boxShadow: this.state.isOpenColor ? \"0px 0px 10px 1px rgba(0, 0, 0, 0.08)\" : null\n        },\n        className: \"hover-row\",\n        onClick: function onClick() {\n          return _this2.setState(function (prevState, props) {\n            return {\n              isOpenColor: !prevState.isOpenColor\n            };\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 538\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 551\n        },\n        __self: this\n      }, \"Color\"), React.createElement(\"td\", {\n        className: \"dropdown-btn-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 552\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-caret-down dropdown-btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 553\n        },\n        __self: this\n      }))), this.state.isOpenColor ? React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 557\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        colSpan: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 558\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"more-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 559\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"input-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 560\n        },\n        __self: this\n      }, \"Color:\"), React.createElement(\"input\", {\n        onChange: function onChange(e) {\n          _this2.setState({\n            color: e.target.value\n          });\n        },\n        value: this.state.color,\n        type: \"text\",\n        placeholder: \"Color\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 561\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 571\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"submit\",\n        onClick: function onClick() {\n          return _this2.postColorHandler();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 572\n        },\n        __self: this\n      }, \"Submit\"), React.createElement(\"button\", {\n        className: \"reset\",\n        onClick: function onClick() {\n          return _this2.setState({\n            color: \"\"\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 578\n        },\n        __self: this\n      }, \"Reset\"))))) : null)))), this.state.isModalOpen ? React.createElement(Modal, {\n        closeFullscreen: function closeFullscreen(value) {\n          _this2.closeFullScreenHandler(value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 594\n        },\n        __self: this\n      }) : null);\n    }\n  }]);\n\n  return Categorization;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    catalog: state.catalog\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onfetchCatalog: function onfetchCatalog() {\n      return dispatch(fetchCatalog());\n    },\n    oncreateCategory: function oncreateCategory(name, imageUrl) {\n      return dispatch(createCategory(name, imageUrl));\n    },\n    onremoveCategory: function onremoveCategory(categoryId) {\n      return dispatch(removeCategory(categoryId));\n    },\n    oncreateSubcategory: function oncreateSubcategory(subcategoryId, subcategoryName) {\n      return dispatch(createSubcategory(subcategoryId, subcategoryName));\n    },\n    onremoveSubcategory: function onremoveSubcategory(categoryId, subcategoryId) {\n      return dispatch(removeSubcategory(categoryId, subcategoryId));\n    },\n    oneditCategory: function oneditCategory(categoryId, category) {\n      return dispatch(editCategory(categoryId, category));\n    },\n    oneditSubcategory: function oneditSubcategory(categoryId, subcategoryId, subcategory) {\n      return dispatch(editSubcategory(categoryId, subcategoryId, subcategory));\n    },\n    oncreateBrand: function oncreateBrand(name) {\n      return dispatch(createBrand(name));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Categorization);","map":{"version":3,"sources":["C:\\Users\\bruno\\Desktop\\ecommerce\\src\\components\\Categorization\\Categorization.js"],"names":["React","Component","connect","fetchCatalog","createCategory","removeCategory","createSubcategory","removeSubcategory","editCategory","editSubcategory","createBrand","TransitionGroup","CSSTransition","Modal","Categorization","state","category","categoryImg","selectedCategory","subcategory","brand","weight","size","color","isOpenCategory","isOpenSubcategory","isOpenBrand","isOpenWeight","isOpenSize","isOpenColor","selectedCategoryObj","isModalOpen","props","onfetchCatalog","value","oneditCategory","categoryId","name","categoryName","img","setState","console","log","boxShadow","prevState","e","target","oncreateCategory","catalog","map","id","onremoveCategory","options","selectedIndex","key","oncreateSubcategory","index","subcategories","oneditSubcategory","onremoveSubcategory","oncreateBrands","postWeightHandler","postSizeHandler","postColorHandler","closeFullScreenHandler","mapStateToProps","mapDispatchToProps","dispatch","imageUrl","subcategoryId","subcategoryName","oncreateBrand"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./Categorization.css\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  fetchCatalog,\r\n  createCategory,\r\n  removeCategory,\r\n  createSubcategory,\r\n  removeSubcategory,\r\n  editCategory,\r\n  editSubcategory,\r\n  createBrand\r\n} from \"../../store/actions/indexStore\";\r\nimport TransitionGroup from \"react-transition-group/TransitionGroup\";\r\nimport CSSTransition from \"react-transition-group/CSSTransition\";\r\nimport Modal from \"../UI/Modal/Modal\";\r\n\r\nclass Categorization extends Component {\r\n  state = {\r\n    category: \"\",\r\n    categoryImg: \"\",\r\n    selectedCategory: \"\",\r\n    subcategory: \"\",\r\n    brand: \"\",\r\n    weight: \"\",\r\n    size: \"\",\r\n    color: \"\",\r\n    isOpenCategory: true,\r\n    isOpenSubcategory: true,\r\n    isOpenBrand: true,\r\n    isOpenWeight: true,\r\n    isOpenSize: true,\r\n    isOpenColor: true,\r\n    selectedCategoryObj: {},\r\n    isModalOpen: false\r\n  };\r\n  componentDidMount() {\r\n    this.props.onfetchCatalog();\r\n  }\r\n  closeFullScreenHandler(value) {\r\n    if (value !== \"\") {\r\n      this.props.oneditCategory(this.state.selectedCategoryObj.categoryId, {\r\n        name: this.state.selectedCategoryObj.categoryName,\r\n        img: value\r\n      });\r\n    }\r\n    this.setState({ isModalOpen: false });\r\n  }\r\n  postBrandHandler() {\r\n    console.log(this.state.brand);\r\n    this.setState({ brand: \"\" });\r\n  }\r\n  postWeightHandler() {\r\n    console.log(this.state.weight);\r\n    this.setState({ weight: \"\" });\r\n  }\r\n  postSizeHandler() {\r\n    console.log(this.state.size);\r\n    this.setState({ size: \"\" });\r\n  }\r\n  postColorHandler() {\r\n    console.log(this.state.color);\r\n    this.setState({ color: \"\" });\r\n  }\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"Categorization-Height\">\r\n          <div className=\"Categorization\">\r\n            <table>\r\n              <tbody>\r\n                <tr\r\n                  style={{\r\n                    boxShadow: this.state.isOpenCategory\r\n                      ? \"0px 0px 10px 1px rgba(0, 0, 0, 0.08)\"\r\n                      : null\r\n                  }}\r\n                  className=\"hover-row\"\r\n                  onClick={() =>\r\n                    this.setState((prevState, props) => {\r\n                      return { isOpenCategory: !prevState.isOpenCategory };\r\n                    })\r\n                  }\r\n                >\r\n                  <td>Category</td>\r\n                  <td className=\"dropdown-btn-wrapper\">\r\n                    <i className=\"fas fa-caret-down dropdown-btn\" />\r\n                  </td>\r\n                </tr>\r\n                {this.state.isOpenCategory ? (\r\n                  <tr>\r\n                    <td colSpan=\"2\">\r\n                      <div className=\"more-info\">\r\n                        <p className=\"input-info\">Category:</p>\r\n                        <input\r\n                          className=\"input\"\r\n                          onChange={e => {\r\n                            this.setState({\r\n                              category: e.target.value\r\n                            });\r\n                          }}\r\n                          value={this.state.category}\r\n                          type=\"text\"\r\n                          placeholder=\"Category\"\r\n                        />\r\n                        <p className=\"input-info\">Category Image:</p>\r\n                        <input\r\n                          className=\"input\"\r\n                          onChange={e => {\r\n                            this.setState({\r\n                              categoryImg: e.target.value\r\n                            });\r\n                          }}\r\n                          value={this.state.categoryImg}\r\n                          type=\"text\"\r\n                          placeholder=\"Category Image\"\r\n                        />\r\n                        <div className=\"buttons\">\r\n                          <button\r\n                            className=\"submit\"\r\n                            onClick={() =>\r\n                              this.props.oncreateCategory(\r\n                                this.state.category,\r\n                                this.state.categoryImg\r\n                              )\r\n                            }\r\n                          >\r\n                            Submit\r\n                          </button>\r\n                          <button\r\n                            className=\"reset\"\r\n                            onClick={() =>\r\n                              this.setState({ category: \"\", categoryImg: \"\" })\r\n                            }\r\n                          >\r\n                            Reset\r\n                          </button>\r\n                        </div>\r\n                        <TransitionGroup component=\"ul\" className=\"list-ul\">\r\n                          {this.props.catalog.catalog.map(category => (\r\n                            <CSSTransition\r\n                              key={category.id}\r\n                              classNames=\"fade\"\r\n                              timeout={400}\r\n                            >\r\n                              <li className=\"list-li\">\r\n                                <input\r\n                                  className=\"input-edit\"\r\n                                  value={category.name}\r\n                                  onChange={e => {\r\n                                    this.props.oneditCategory(category.id, {\r\n                                      name: e.target.value,\r\n                                      img: category.img\r\n                                    });\r\n                                  }}\r\n                                />\r\n                                <div className=\"btn-icon\">\r\n                                  <i\r\n                                    className=\"fas fa-camera camera\"\r\n                                    onClick={() => {\r\n                                      this.setState({\r\n                                        selectedCategoryObj: {\r\n                                          categoryId: category.id,\r\n                                          categoryName: category.name\r\n                                        },\r\n                                        isModalOpen: true\r\n                                      });\r\n                                    }}\r\n                                  />\r\n                                  <i\r\n                                    className=\"fas fa-times close\"\r\n                                    onClick={() => {\r\n                                      this.props.onremoveCategory(category.id);\r\n                                    }}\r\n                                  />\r\n                                </div>\r\n                              </li>\r\n                            </CSSTransition>\r\n                          ))}\r\n                        </TransitionGroup>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                ) : null}\r\n                <tr\r\n                  style={{\r\n                    boxShadow: this.state.isOpenSubcategory\r\n                      ? \"0px 0px 10px 1px rgba(0, 0, 0, 0.08)\"\r\n                      : null\r\n                  }}\r\n                  className=\"hover-row\"\r\n                  onClick={() =>\r\n                    this.setState((prevState, props) => {\r\n                      return {\r\n                        isOpenSubcategory: !prevState.isOpenSubcategory\r\n                      };\r\n                    })\r\n                  }\r\n                >\r\n                  <td>Subcategory</td>\r\n                  <td className=\"dropdown-btn-wrapper\">\r\n                    <i className=\"fas fa-caret-down dropdown-btn\" />\r\n                  </td>\r\n                </tr>\r\n                {this.state.isOpenSubcategory ? (\r\n                  <tr>\r\n                    <td colSpan=\"2\">\r\n                      <div className=\"more-info\">\r\n                        <p className=\"input-info\">Category:</p>\r\n                        <select\r\n                          onChange={e =>\r\n                            this.setState({\r\n                              selectedCategory:\r\n                                e.target.options[e.target.selectedIndex].value\r\n                            })\r\n                          }\r\n                        >\r\n                          {this.props.catalog.catalog.map(category => (\r\n                            <option key={category.id} value={category.id}>\r\n                              {category.name}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                        <p className=\"input-info\">Subcategory:</p>\r\n                        <input\r\n                          className=\"input\"\r\n                          onChange={e => {\r\n                            this.setState({\r\n                              subcategory: e.target.value\r\n                            });\r\n                          }}\r\n                          value={this.state.subcategory}\r\n                          type=\"text\"\r\n                          placeholder=\"Subcategory\"\r\n                          onKeyPress={e => {\r\n                            if (e.key === \"Enter\") {\r\n                              this.props.oncreateSubcategory(\r\n                                this.state.selectedCategory === \"\"\r\n                                  ? this.props.catalog.catalog[0].id\r\n                                  : this.state.selectedCategory,\r\n                                this.state.subcategory\r\n                              );\r\n                            }\r\n                          }}\r\n                        />\r\n                        <div className=\"buttons\">\r\n                          <button\r\n                            className=\"submit\"\r\n                            onClick={() =>\r\n                              this.props.oncreateSubcategory(\r\n                                this.state.selectedCategory === \"\"\r\n                                  ? this.props.catalog.catalog[0].id\r\n                                  : this.state.selectedCategory,\r\n                                this.state.subcategory\r\n                              )\r\n                            }\r\n                          >\r\n                            Submit\r\n                          </button>\r\n                          <button\r\n                            className=\"reset\"\r\n                            onClick={() => this.setState({ subcategory: \"\" })}\r\n                          >\r\n                            Reset\r\n                          </button>\r\n                        </div>\r\n                        <TransitionGroup component=\"ul\" className=\"list-ul\">\r\n                          {this.props.catalog.catalog.map((category, index) => {\r\n                            if (category.id === this.state.selectedCategory) {\r\n                              return category.subcategories.map(subcategory => (\r\n                                <CSSTransition\r\n                                  key={subcategory.id}\r\n                                  classNames=\"fade\"\r\n                                  timeout={400}\r\n                                >\r\n                                  <li className=\"list-li\">\r\n                                    <input\r\n                                      className=\"input-edit\"\r\n                                      value={subcategory.name}\r\n                                      onChange={e => {\r\n                                        this.props.oneditSubcategory(\r\n                                          category.id,\r\n                                          subcategory.id,\r\n                                          {\r\n                                            name: e.target.value\r\n                                          }\r\n                                        );\r\n                                      }}\r\n                                    />\r\n                                    <div className=\"btn-icon\">\r\n                                      <i\r\n                                        className=\"fas fa-times close\"\r\n                                        onClick={() => {\r\n                                          this.props.onremoveSubcategory(\r\n                                            category.id,\r\n                                            subcategory.id\r\n                                          );\r\n                                        }}\r\n                                      />\r\n                                    </div>\r\n                                  </li>\r\n                                </CSSTransition>\r\n                              ));\r\n                            }\r\n                            if (\r\n                              this.state.selectedCategory === \"\" &&\r\n                              index === 0\r\n                            ) {\r\n                              return category.subcategories.map(subcategory => (\r\n                                <CSSTransition\r\n                                  key={subcategory.id}\r\n                                  classNames=\"fade\"\r\n                                  timeout={400}\r\n                                >\r\n                                  <li className=\"list-li\">\r\n                                    <input\r\n                                      className=\"input-edit\"\r\n                                      value={subcategory.name}\r\n                                      onChange={e => {\r\n                                        this.props.oneditSubcategory(\r\n                                          category.id,\r\n                                          subcategory.id,\r\n                                          {\r\n                                            name: e.target.value\r\n                                          }\r\n                                        );\r\n                                      }}\r\n                                    />\r\n                                    <div className=\"btn-icon\">\r\n                                      <i\r\n                                        className=\"fas fa-times close\"\r\n                                        onClick={() => {\r\n                                          this.props.onremoveSubcategory(\r\n                                            category.id,\r\n                                            subcategory.id\r\n                                          );\r\n                                        }}\r\n                                      />\r\n                                    </div>\r\n                                  </li>\r\n                                </CSSTransition>\r\n                              ));\r\n                            }\r\n                            return null;\r\n                          })}\r\n                        </TransitionGroup>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                ) : null}\r\n\r\n                <tr\r\n                  style={{\r\n                    boxShadow: this.state.isOpenBrand\r\n                      ? \"0px 0px 10px 1px rgba(0, 0, 0, 0.08)\"\r\n                      : null\r\n                  }}\r\n                  className=\"hover-row\"\r\n                  onClick={() =>\r\n                    this.setState((prevState, props) => {\r\n                      return { isOpenBrand: !prevState.isOpenBrand };\r\n                    })\r\n                  }\r\n                >\r\n                  <td>Brand</td>\r\n                  <td className=\"dropdown-btn-wrapper\">\r\n                    <i className=\"fas fa-caret-down dropdown-btn\" />\r\n                  </td>\r\n                </tr>\r\n                {this.state.isOpenBrand ? (\r\n                  <tr>\r\n                    <td colSpan=\"2\">\r\n                      <div className=\"more-info\">\r\n                        <p className=\"input-info\">Brand:</p>\r\n                        <input\r\n                          className=\"input\"\r\n                          onChange={e => {\r\n                            this.setState({\r\n                              brand: e.target.value\r\n                            });\r\n                          }}\r\n                          value={this.state.brand}\r\n                          type=\"text\"\r\n                          placeholder=\"Brand\"\r\n                        />\r\n                        <div className=\"buttons\">\r\n                          <button\r\n                            className=\"submit\"\r\n                            onClick={() => this.props.oncreateBrands(\r\n                              this.state.brand\r\n                            )}\r\n                          >\r\n                            Submit\r\n                          </button>\r\n                          <button\r\n                            className=\"reset\"\r\n                            onClick={() => this.setState({ brand: \"\" })}\r\n                          >\r\n                            Reset\r\n                          </button>\r\n                        </div>\r\n                        {/*\r\n\r\n                        <p className=\"input-info\">Brand:</p>\r\n                        <input\r\n                          onChange={e => {\r\n                            this.setState({\r\n                              brand: e.target.value\r\n                            });\r\n                          }}\r\n                          value={this.state.brand}\r\n                          type=\"text\"\r\n                          placeholder=\"Brand\"\r\n                        />\r\n                        <div className=\"buttons\">\r\n                          <button\r\n                            className=\"submit\"\r\n                            onClick={() => this.postBrandHandler()}\r\n                          >\r\n                            Submit\r\n                          </button>\r\n                          <button\r\n                            className=\"reset\"\r\n                            onClick={() => this.setState({ brand: \"\" })}\r\n                          >\r\n                            Reset\r\n                          </button>\r\n\r\n\r\n                        \r\n                        </div>*/}\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                ) : null}\r\n                <tr\r\n                  style={{\r\n                    boxShadow: this.state.isOpenWeight\r\n                      ? \"0px 0px 10px 1px rgba(0, 0, 0, 0.08)\"\r\n                      : null\r\n                  }}\r\n                  className=\"hover-row\"\r\n                  onClick={() =>\r\n                    this.setState((prevState, props) => {\r\n                      return { isOpenWeight: !prevState.isOpenWeight };\r\n                    })\r\n                  }\r\n                >\r\n                  <td>Weight</td>\r\n                  <td className=\"dropdown-btn-wrapper\">\r\n                    <i className=\"fas fa-caret-down dropdown-btn\" />\r\n                  </td>\r\n                </tr>\r\n                {this.state.isOpenWeight ? (\r\n                  <tr>\r\n                    <td colSpan=\"2\">\r\n                      <div className=\"more-info\">\r\n                        <p className=\"input-info\">Weight:</p>\r\n                        <input\r\n                          onChange={e => {\r\n                            this.setState({\r\n                              weight: e.target.value\r\n                            });\r\n                          }}\r\n                          value={this.state.weight}\r\n                          type=\"text\"\r\n                          placeholder=\"Weight\"\r\n                        />\r\n                        <div className=\"buttons\">\r\n                          <button\r\n                            className=\"submit\"\r\n                            onClick={() => this.postWeightHandler()}\r\n                          >\r\n                            Submit\r\n                          </button>\r\n                          <button\r\n                            className=\"reset\"\r\n                            onClick={() => this.setState({ weight: \"\" })}\r\n                          >\r\n                            Reset\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                ) : null}\r\n                <tr\r\n                  style={{\r\n                    boxShadow: this.state.isOpenSize\r\n                      ? \"0px 0px 10px 1px rgba(0, 0, 0, 0.08)\"\r\n                      : null\r\n                  }}\r\n                  className=\"hover-row\"\r\n                  onClick={() =>\r\n                    this.setState((prevState, props) => {\r\n                      return { isOpenSize: !prevState.isOpenSize };\r\n                    })\r\n                  }\r\n                >\r\n                  <td>Size</td>\r\n                  <td className=\"dropdown-btn-wrapper\">\r\n                    <i className=\"fas fa-caret-down dropdown-btn\" />\r\n                  </td>\r\n                </tr>\r\n                {this.state.isOpenSize ? (\r\n                  <tr>\r\n                    <td colSpan=\"2\">\r\n                      <div className=\"more-info\">\r\n                        <p className=\"input-info\">Size:</p>\r\n                        <input\r\n                          onChange={e => {\r\n                            this.setState({\r\n                              size: e.target.value\r\n                            });\r\n                          }}\r\n                          value={this.state.size}\r\n                          type=\"text\"\r\n                          placeholder=\"Size\"\r\n                        />\r\n                        <div className=\"buttons\">\r\n                          <button\r\n                            className=\"submit\"\r\n                            onClick={() => this.postSizeHandler()}\r\n                          >\r\n                            Submit\r\n                          </button>\r\n                          <button\r\n                            className=\"reset\"\r\n                            onClick={() => this.setState({ size: \"\" })}\r\n                          >\r\n                            Reset\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                ) : null}\r\n                <tr\r\n                  style={{\r\n                    boxShadow: this.state.isOpenColor\r\n                      ? \"0px 0px 10px 1px rgba(0, 0, 0, 0.08)\"\r\n                      : null\r\n                  }}\r\n                  className=\"hover-row\"\r\n                  onClick={() =>\r\n                    this.setState((prevState, props) => {\r\n                      return { isOpenColor: !prevState.isOpenColor };\r\n                    })\r\n                  }\r\n                >\r\n                  <td>Color</td>\r\n                  <td className=\"dropdown-btn-wrapper\">\r\n                    <i className=\"fas fa-caret-down dropdown-btn\" />\r\n                  </td>\r\n                </tr>\r\n                {this.state.isOpenColor ? (\r\n                  <tr>\r\n                    <td colSpan=\"2\">\r\n                      <div className=\"more-info\">\r\n                        <p className=\"input-info\">Color:</p>\r\n                        <input\r\n                          onChange={e => {\r\n                            this.setState({\r\n                              color: e.target.value\r\n                            });\r\n                          }}\r\n                          value={this.state.color}\r\n                          type=\"text\"\r\n                          placeholder=\"Color\"\r\n                        />\r\n                        <div className=\"buttons\">\r\n                          <button\r\n                            className=\"submit\"\r\n                            onClick={() => this.postColorHandler()}\r\n                          >\r\n                            Submit\r\n                          </button>\r\n                          <button\r\n                            className=\"reset\"\r\n                            onClick={() => this.setState({ color: \"\" })}\r\n                          >\r\n                            Reset\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                ) : null}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n        {this.state.isModalOpen ? (\r\n          <Modal\r\n            closeFullscreen={value => {\r\n              this.closeFullScreenHandler(value);\r\n            }}\r\n          />\r\n        ) : null}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    catalog: state.catalog\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onfetchCatalog: () => dispatch(fetchCatalog()),\r\n    oncreateCategory: (name, imageUrl) =>\r\n      dispatch(createCategory(name, imageUrl)),\r\n    onremoveCategory: categoryId => dispatch(removeCategory(categoryId)),\r\n    oncreateSubcategory: (subcategoryId, subcategoryName) =>\r\n      dispatch(createSubcategory(subcategoryId, subcategoryName)),\r\n    onremoveSubcategory: (categoryId, subcategoryId) =>\r\n      dispatch(removeSubcategory(categoryId, subcategoryId)),\r\n    oneditCategory: (categoryId, category) =>\r\n      dispatch(editCategory(categoryId, category)),\r\n    oneditSubcategory: (categoryId, subcategoryId, subcategory) =>\r\n      dispatch(editSubcategory(categoryId, subcategoryId, subcategory)),\r\n    oncreateBrand: name => dispatch(createBrand(name))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Categorization);\r\n"]},"metadata":{},"sourceType":"module"}