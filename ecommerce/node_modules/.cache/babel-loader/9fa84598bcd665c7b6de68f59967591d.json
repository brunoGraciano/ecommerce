{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\bruno\\\\Desktop\\\\ecommerce\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\bruno\\\\Desktop\\\\ecommerce\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\bruno\\\\Desktop\\\\ecommerce\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\bruno\\\\Desktop\\\\ecommerce\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\bruno\\\\Desktop\\\\ecommerce\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\bruno\\\\Desktop\\\\ecommerce\\\\src\\\\components\\\\Categorization\\\\Categorization.js\";\nimport React, { Component } from \"react\";\nimport \"./Categorization.css\";\nimport { connect } from \"react-redux\";\nimport { fetchCatalog, createCategory, removeCategory, createSubcategory, removeSubcategory, editCategory, editSubcategory, fetchSizes, fetchWeights, fetchBrands, fetchColors, createBrand, removeBrand, editBrand, createWeight, removeWeight, editWeight, createSize, removeSize, editSize, createColor, removeColor, editColor } from \"../../store/actions/indexStore\";\nimport TransitionGroup from \"react-transition-group/TransitionGroup\";\nimport CSSTransition from \"react-transition-group/CSSTransition\";\nimport Modal from \"../UI/Modal/Modal\";\n\nvar Categorization =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Categorization, _Component);\n\n  function Categorization() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Categorization);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Categorization)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      category: \"\",\n      categoryImg: \"\",\n      selectedCategory: \"\",\n      subcategory: \"\",\n      brand: \"\",\n      weight: \"\",\n      size: \"\",\n      color: \"\",\n      isOpenCategory: false,\n      isOpenSubcategory: false,\n      isOpenBrand: false,\n      isOpenWeight: false,\n      isOpenSize: false,\n      isOpenColor: true,\n      selectedCategoryObj: {},\n      isModalOpen: false\n    };\n    return _this;\n  }\n\n  _createClass(Categorization, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.onfetchCatalog();\n      this.props.onfetchSizes();\n      this.props.onfetchColors();\n      this.props.onfetchWeights();\n      this.props.onfetchBrands();\n    }\n  }, {\n    key: \"closeFullScreenHandler\",\n    value: function closeFullScreenHandler(value) {\n      if (value !== \"\") {\n        this.props.oneditCategory(this.state.selectedCategoryObj.categoryId, {\n          name: this.state.selectedCategoryObj.categoryName,\n          img: value\n        });\n      }\n\n      this.setState({\n        isModalOpen: false\n      });\n    }\n  }, {\n    key: \"postBrandHandler\",\n    value: function postBrandHandler() {\n      console.log(this.state.brand);\n      this.setState({\n        brand: \"\"\n      });\n    }\n  }, {\n    key: \"postWeightHandler\",\n    value: function postWeightHandler() {\n      console.log(this.state.weight);\n      this.setState({\n        weight: \"\"\n      });\n    }\n  }, {\n    key: \"postSizeHandler\",\n    value: function postSizeHandler() {\n      console.log(this.state.size);\n      this.setState({\n        size: \"\"\n      });\n    }\n  }, {\n    key: \"postColorHandler\",\n    value: function postColorHandler() {\n      console.log(this.state.color);\n      this.setState({\n        color: \"\"\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"Categorization-Height\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"Categorization\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        style: {\n          boxShadow: this.state.isOpenCategory ? \"0px 0px 10px 1px rgba(0, 0, 0, 0.08)\" : null\n        },\n        className: \"hover-row\",\n        onClick: function onClick() {\n          return _this2.setState(function (prevState, props) {\n            return {\n              isOpenCategory: !prevState.isOpenCategory\n            };\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"Category\"), React.createElement(\"td\", {\n        className: \"dropdown-btn-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-caret-down dropdown-btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }))), this.state.isOpenCategory ? React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        colSpan: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"more-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"input-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"Category:\"), React.createElement(\"input\", {\n        className: \"input\",\n        onChange: function onChange(e) {\n          _this2.setState({\n            category: e.target.value\n          });\n        },\n        value: this.state.category,\n        type: \"text\",\n        placeholder: \"Category\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"input-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \"Category Image:\"), React.createElement(\"input\", {\n        className: \"input\",\n        onChange: function onChange(e) {\n          _this2.setState({\n            categoryImg: e.target.value\n          });\n        },\n        value: this.state.categoryImg,\n        type: \"text\",\n        placeholder: \"Category Image\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"submit\",\n        onClick: function onClick() {\n          return _this2.props.oncreateCategory(_this2.state.category, _this2.state.categoryImg);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, \"Submit\"), React.createElement(\"button\", {\n        className: \"reset\",\n        onClick: function onClick() {\n          return _this2.setState({\n            category: \"\",\n            categoryImg: \"\"\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, \"Reset\")), React.createElement(TransitionGroup, {\n        component: \"ul\",\n        className: \"list-ul\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, this.props.catalog.catalog.map(function (category) {\n        return React.createElement(CSSTransition, {\n          key: category.id,\n          classNames: \"fade\",\n          timeout: 400,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160\n          },\n          __self: this\n        }, React.createElement(\"li\", {\n          className: \"list-li\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          className: \"input-edit\",\n          value: category.name,\n          onChange: function onChange(e) {\n            _this2.props.oneditCategory(category.id, {\n              name: e.target.value,\n              img: category.img\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"btn-icon\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"fas fa-camera camera\",\n          onClick: function onClick() {\n            _this2.setState({\n              selectedCategoryObj: {\n                categoryId: category.id,\n                categoryName: category.name\n              },\n              isModalOpen: true\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177\n          },\n          __self: this\n        }), React.createElement(\"i\", {\n          className: \"fas fa-times close\",\n          onClick: function onClick() {\n            _this2.props.onremoveCategory(category.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 189\n          },\n          __self: this\n        }))));\n      }))))) : null, React.createElement(\"tr\", {\n        style: {\n          boxShadow: this.state.isOpenSubcategory ? \"0px 0px 10px 1px rgba(0, 0, 0, 0.08)\" : null\n        },\n        className: \"hover-row\",\n        onClick: function onClick() {\n          return _this2.setState(function (prevState, props) {\n            return {\n              isOpenSubcategory: !prevState.isOpenSubcategory\n            };\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, \"Subcategory\"), React.createElement(\"td\", {\n        className: \"dropdown-btn-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-caret-down dropdown-btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }))), this.state.isOpenSubcategory ? React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        colSpan: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"more-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"input-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, \"Category:\"), React.createElement(\"select\", {\n        onChange: function onChange(e) {\n          return _this2.setState({\n            selectedCategory: e.target.options[e.target.selectedIndex].value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, this.props.catalog.catalog.map(function (category) {\n        return React.createElement(\"option\", {\n          key: category.id,\n          value: category.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 238\n          },\n          __self: this\n        }, category.name);\n      })), React.createElement(\"p\", {\n        className: \"input-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, \"Subcategory:\"), React.createElement(\"input\", {\n        className: \"input\",\n        onChange: function onChange(e) {\n          _this2.setState({\n            subcategory: e.target.value\n          });\n        },\n        value: this.state.subcategory,\n        type: \"text\",\n        placeholder: \"Subcategory\",\n        onKeyPress: function onKeyPress(e) {\n          if (e.key === \"Enter\") {\n            _this2.props.oncreateSubcategory(_this2.state.selectedCategory === \"\" ? _this2.props.catalog.catalog[0].id : _this2.state.selectedCategory, _this2.state.subcategory);\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"submit\",\n        onClick: function onClick() {\n          return _this2.props.oncreateSubcategory(_this2.state.selectedCategory === \"\" ? _this2.props.catalog.catalog[0].id : _this2.state.selectedCategory, _this2.state.subcategory);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }, \"Submit\"), React.createElement(\"button\", {\n        className: \"reset\",\n        onClick: function onClick() {\n          return _this2.setState({\n            subcategory: \"\"\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }, \"Reset\")), React.createElement(TransitionGroup, {\n        component: \"ul\",\n        className: \"list-ul\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }, this.props.catalog.catalog.map(function (category, index) {\n        if (category.id === _this2.state.selectedCategory) {\n          return category.subcategories.map(function (subcategory) {\n            return React.createElement(CSSTransition, {\n              key: subcategory.id,\n              classNames: \"fade\",\n              timeout: 400,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 290\n              },\n              __self: this\n            }, React.createElement(\"li\", {\n              className: \"list-li\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 295\n              },\n              __self: this\n            }, React.createElement(\"input\", {\n              className: \"input-edit\",\n              value: subcategory.name,\n              onChange: function onChange(e) {\n                _this2.props.oneditSubcategory(category.id, subcategory.id, {\n                  name: e.target.value\n                });\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 296\n              },\n              __self: this\n            }), React.createElement(\"div\", {\n              className: \"btn-icon\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 309\n              },\n              __self: this\n            }, React.createElement(\"i\", {\n              className: \"fas fa-times close\",\n              onClick: function onClick() {\n                _this2.props.onremoveSubcategory(category.id, subcategory.id);\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 310\n              },\n              __self: this\n            }))));\n          });\n        }\n\n        if (_this2.state.selectedCategory === \"\" && index === 0) {\n          return category.subcategories.map(function (subcategory) {\n            return React.createElement(CSSTransition, {\n              key: subcategory.id,\n              classNames: \"fade\",\n              timeout: 400,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 329\n              },\n              __self: this\n            }, React.createElement(\"li\", {\n              className: \"list-li\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 334\n              },\n              __self: this\n            }, React.createElement(\"input\", {\n              className: \"input-edit\",\n              value: subcategory.name,\n              onChange: function onChange(e) {\n                _this2.props.oneditSubcategory(category.id, subcategory.id, {\n                  name: e.target.value\n                });\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 335\n              },\n              __self: this\n            }), React.createElement(\"div\", {\n              className: \"btn-icon\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 348\n              },\n              __self: this\n            }, React.createElement(\"i\", {\n              className: \"fas fa-times close\",\n              onClick: function onClick() {\n                _this2.props.onremoveSubcategory(category.id, subcategory.id);\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 349\n              },\n              __self: this\n            }))));\n          });\n        }\n\n        return null;\n      }))))) : null, React.createElement(\"tr\", {\n        style: {\n          boxShadow: this.state.isOpenBrand ? \"0px 0px 10px 1px rgba(0, 0, 0, 0.08)\" : null\n        },\n        className: \"hover-row\",\n        onClick: function onClick() {\n          return _this2.setState(function (prevState, props) {\n            return {\n              isOpenBrand: !prevState.isOpenBrand\n            };\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 384\n        },\n        __self: this\n      }, \"Brand\"), React.createElement(\"td\", {\n        className: \"dropdown-btn-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-caret-down dropdown-btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386\n        },\n        __self: this\n      }))), this.state.isOpenBrand ? React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 390\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        colSpan: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"more-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"input-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 393\n        },\n        __self: this\n      }, \"Brand:\"), React.createElement(\"input\", {\n        className: \"input\",\n        onChange: function onChange(e) {\n          _this2.setState({\n            brand: e.target.value\n          });\n        },\n        value: this.state.brand,\n        type: \"text\",\n        placeholder: \"Brand\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 394\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 405\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"submit\",\n        onClick: function onClick() {\n          _this2.props.oncreateBrand(_this2.state.brand);\n\n          _this2.setState({\n            brand: \"\"\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 406\n        },\n        __self: this\n      }, \"Submit\"), React.createElement(\"button\", {\n        className: \"reset\",\n        onClick: function onClick() {\n          return _this2.setState({\n            brand: \"\"\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 415\n        },\n        __self: this\n      }, \"Reset\")), React.createElement(TransitionGroup, {\n        component: \"ul\",\n        className: \"list-ul\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 422\n        },\n        __self: this\n      }, this.props.catalog.brands.map(function (brand) {\n        return React.createElement(CSSTransition, {\n          key: brand.id,\n          classNames: \"fade\",\n          timeout: 400,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 424\n          },\n          __self: this\n        }, React.createElement(\"li\", {\n          className: \"list-li\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 429\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          className: \"input-edit\",\n          value: brand.name,\n          onChange: function onChange(e) {\n            _this2.props.oneditBrand(brand.id, {\n              name: e.target.value\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 430\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"btn-icon\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 439\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"fas fa-times close\",\n          onClick: function onClick() {\n            _this2.props.onremoveBrand(brand.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 440\n          },\n          __self: this\n        }))));\n      }))))) : null, React.createElement(\"tr\", {\n        style: {\n          boxShadow: this.state.isOpenWeight ? \"0px 0px 10px 1px rgba(0, 0, 0, 0.08)\" : null\n        },\n        className: \"hover-row\",\n        onClick: function onClick() {\n          return _this2.setState(function (prevState, props) {\n            return {\n              isOpenWeight: !prevState.isOpenWeight\n            };\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 455\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 468\n        },\n        __self: this\n      }, \"Weight\"), React.createElement(\"td\", {\n        className: \"dropdown-btn-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 469\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-caret-down dropdown-btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 470\n        },\n        __self: this\n      }))), this.state.isOpenWeight ? React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 474\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        colSpan: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 475\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"more-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 476\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"input-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 477\n        },\n        __self: this\n      }, \"Weight:\"), React.createElement(\"input\", {\n        className: \"input\",\n        onChange: function onChange(e) {\n          _this2.setState({\n            weight: e.target.value\n          });\n        },\n        value: this.state.weight,\n        type: \"text\",\n        placeholder: \"Weight\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 478\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 489\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"submit\",\n        onClick: function onClick() {\n          _this2.props.oncreateWeight(_this2.state.weight);\n\n          _this2.setState({\n            weight: \"\"\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 490\n        },\n        __self: this\n      }, \"Submit\"), React.createElement(\"button\", {\n        className: \"reset\",\n        onClick: function onClick() {\n          return _this2.setState({\n            weight: \"\"\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 499\n        },\n        __self: this\n      }, \"Reset\")), React.createElement(TransitionGroup, {\n        component: \"ul\",\n        className: \"list-ul\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 506\n        },\n        __self: this\n      }, this.props.catalog.weights.map(function (weight) {\n        return React.createElement(CSSTransition, {\n          key: weight.id,\n          classNames: \"fade\",\n          timeout: 400,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 508\n          },\n          __self: this\n        }, React.createElement(\"li\", {\n          className: \"list-li\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 513\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          className: \"input-edit\",\n          value: weight.name,\n          onChange: function onChange(e) {\n            _this2.props.oneditWeight(weight.id, {\n              name: e.target.value\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 514\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"btn-icon\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 523\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"fas fa-times close\",\n          onClick: function onClick() {\n            _this2.props.onremoveWeight(weight.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 524\n          },\n          __self: this\n        }))));\n      }))))) : null, React.createElement(\"tr\", {\n        style: {\n          boxShadow: this.state.isOpenSize ? \"0px 0px 10px 1px rgba(0, 0, 0, 0.08)\" : null\n        },\n        className: \"hover-row\",\n        onClick: function onClick() {\n          return _this2.setState(function (prevState, props) {\n            return {\n              isOpenSize: !prevState.isOpenSize\n            };\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 539\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 552\n        },\n        __self: this\n      }, \"Size\"), React.createElement(\"td\", {\n        className: \"dropdown-btn-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 553\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-caret-down dropdown-btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 554\n        },\n        __self: this\n      }))), this.state.isOpenSize ? React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 558\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        colSpan: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 559\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"more-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 560\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"input-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 561\n        },\n        __self: this\n      }, \"Size:\"), React.createElement(\"input\", {\n        className: \"input\",\n        onChange: function onChange(e) {\n          _this2.setState({\n            size: e.target.value\n          });\n        },\n        value: this.state.size,\n        type: \"text\",\n        placeholder: \"Size\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 562\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 573\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"submit\",\n        onClick: function onClick() {\n          _this2.props.oncreateSize(_this2.state.size);\n\n          _this2.setState({\n            size: \"\"\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 574\n        },\n        __self: this\n      }, \"Submit\"), React.createElement(\"button\", {\n        className: \"reset\",\n        onClick: function onClick() {\n          return _this2.setState({\n            size: \"\"\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 583\n        },\n        __self: this\n      }, \"Reset\")), React.createElement(TransitionGroup, {\n        component: \"ul\",\n        className: \"list-ul\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 590\n        },\n        __self: this\n      }, this.props.catalog.sizes.map(function (size) {\n        return React.createElement(CSSTransition, {\n          key: size.id,\n          classNames: \"fade\",\n          timeout: 400,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 592\n          },\n          __self: this\n        }, React.createElement(\"li\", {\n          className: \"list-li\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 597\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          className: \"input-edit\",\n          value: size.name,\n          onChange: function onChange(e) {\n            _this2.props.oneditSize(size.id, {\n              name: e.target.value\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 598\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"btn-icon\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 607\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"fas fa-times close\",\n          onClick: function onClick() {\n            _this2.props.onremoveSize(size.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 608\n          },\n          __self: this\n        }))));\n      }))))) : null, React.createElement(\"tr\", {\n        style: {\n          boxShadow: this.state.isOpenColor ? \"0px 0px 10px 1px rgba(0, 0, 0, 0.08)\" : null\n        },\n        className: \"hover-row\",\n        onClick: function onClick() {\n          return _this2.setState(function (prevState, props) {\n            return {\n              isOpenColor: !prevState.isOpenColor\n            };\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 623\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 636\n        },\n        __self: this\n      }, \"Color\"), React.createElement(\"td\", {\n        className: \"dropdown-btn-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 637\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-caret-down dropdown-btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 638\n        },\n        __self: this\n      }))), this.state.isOpenColor ? React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 642\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        colSpan: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 643\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"more-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 644\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"input-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 645\n        },\n        __self: this\n      }, \"Weight:\"), React.createElement(\"input\", {\n        className: \"input\",\n        onChange: function onChange(e) {\n          _this2.setState({\n            weight: e.target.value\n          });\n        },\n        value: this.state.weight,\n        type: \"text\",\n        placeholder: \"Weight\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 646\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 657\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"submit\",\n        onClick: function onClick() {\n          _this2.props.oncreateWeight(_this2.state.weight);\n\n          _this2.setState({\n            weight: \"\"\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 658\n        },\n        __self: this\n      }, \"Submit\"), React.createElement(\"button\", {\n        className: \"reset\",\n        onClick: function onClick() {\n          return _this2.setState({\n            weight: \"\"\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 667\n        },\n        __self: this\n      }, \"Reset\")), React.createElement(TransitionGroup, {\n        component: \"ul\",\n        className: \"list-ul\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 674\n        },\n        __self: this\n      }, this.props.catalog.weights.map(function (weight) {\n        return React.createElement(CSSTransition, {\n          key: weight.id,\n          classNames: \"fade\",\n          timeout: 400,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 676\n          },\n          __self: this\n        }, React.createElement(\"li\", {\n          className: \"list-li\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 681\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          className: \"input-edit\",\n          value: weight.name,\n          onChange: function onChange(e) {\n            _this2.props.oneditWeight(weight.id, {\n              name: e.target.value\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 682\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"btn-icon\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 691\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"fas fa-times close\",\n          onClick: function onClick() {\n            _this2.props.onremoveWeight(weight.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 692\n          },\n          __self: this\n        }))));\n      }))))) : null)))), this.state.isModalOpen ? React.createElement(Modal, {\n        closeFullscreen: function closeFullscreen(value) {\n          _this2.closeFullScreenHandler(value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 712\n        },\n        __self: this\n      }) : null);\n    }\n  }]);\n\n  return Categorization;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    catalog: state.catalog\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onfetchSizes: function onfetchSizes() {\n      return dispatch(fetchSizes());\n    },\n    onfetchColors: function onfetchColors() {\n      return dispatch(fetchColors());\n    },\n    onfetchBrands: function onfetchBrands() {\n      return dispatch(fetchBrands());\n    },\n    onfetchWeights: function onfetchWeights() {\n      return dispatch(fetchWeights());\n    },\n    onfetchCatalog: function onfetchCatalog() {\n      return dispatch(fetchCatalog());\n    },\n    oncreateCategory: function oncreateCategory(name, imageUrl) {\n      return dispatch(createCategory(name, imageUrl));\n    },\n    onremoveCategory: function onremoveCategory(categoryId) {\n      return dispatch(removeCategory(categoryId));\n    },\n    oncreateWeight: function oncreateWeight(name) {\n      return dispatch(createWeight(name));\n    },\n    oncreateBrand: function oncreateBrand(name) {\n      return dispatch(createBrand(name));\n    },\n    onremoveBrand: function onremoveBrand(id) {\n      return dispatch(removeBrand(id));\n    },\n    oneditBrand: function oneditBrand(id, name) {\n      return dispatch(editBrand(id, name));\n    },\n    oncreateSize: function oncreateSize(name) {\n      return dispatch(createSize(name));\n    },\n    onremoveSize: function onremoveSize(id) {\n      return dispatch(removeSize(id));\n    },\n    oneditSize: function oneditSize(id, name) {\n      return dispatch(editSize(id, name));\n    },\n    oncreateColor: function oncreateColor(name) {\n      return dispatch(createColor(name));\n    },\n    onremoveColor: function onremoveColor(id) {\n      return dispatch(removeColor(id));\n    },\n    oneditColor: function oneditColor(id, name) {\n      return dispatch(editColor(id, name));\n    },\n    onremoveWeight: function onremoveWeight(id) {\n      return dispatch(removeWeight(id));\n    },\n    oneditWeight: function oneditWeight(id, name) {\n      return dispatch(editWeight(id, name));\n    },\n    oncreateSubcategory: function oncreateSubcategory(subcategoryId, subcategoryName) {\n      return dispatch(createSubcategory(subcategoryId, subcategoryName));\n    },\n    onremoveSubcategory: function onremoveSubcategory(categoryId, subcategoryId) {\n      return dispatch(removeSubcategory(categoryId, subcategoryId));\n    },\n    oneditCategory: function oneditCategory(categoryId, category) {\n      return dispatch(editCategory(categoryId, category));\n    },\n    oneditSubcategory: function oneditSubcategory(categoryId, subcategoryId, subcategory) {\n      return dispatch(editSubcategory(categoryId, subcategoryId, subcategory));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Categorization);","map":{"version":3,"sources":["C:\\Users\\bruno\\Desktop\\ecommerce\\src\\components\\Categorization\\Categorization.js"],"names":["React","Component","connect","fetchCatalog","createCategory","removeCategory","createSubcategory","removeSubcategory","editCategory","editSubcategory","fetchSizes","fetchWeights","fetchBrands","fetchColors","createBrand","removeBrand","editBrand","createWeight","removeWeight","editWeight","createSize","removeSize","editSize","createColor","removeColor","editColor","TransitionGroup","CSSTransition","Modal","Categorization","state","category","categoryImg","selectedCategory","subcategory","brand","weight","size","color","isOpenCategory","isOpenSubcategory","isOpenBrand","isOpenWeight","isOpenSize","isOpenColor","selectedCategoryObj","isModalOpen","props","onfetchCatalog","onfetchSizes","onfetchColors","onfetchWeights","onfetchBrands","value","oneditCategory","categoryId","name","categoryName","img","setState","console","log","boxShadow","prevState","e","target","oncreateCategory","catalog","map","id","onremoveCategory","options","selectedIndex","key","oncreateSubcategory","index","subcategories","oneditSubcategory","onremoveSubcategory","oncreateBrand","brands","oneditBrand","onremoveBrand","oncreateWeight","weights","oneditWeight","onremoveWeight","oncreateSize","sizes","oneditSize","onremoveSize","closeFullScreenHandler","mapStateToProps","mapDispatchToProps","dispatch","imageUrl","oncreateColor","onremoveColor","oneditColor","subcategoryId","subcategoryName"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./Categorization.css\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  fetchCatalog,\r\n  createCategory,\r\n  removeCategory,\r\n  createSubcategory,\r\n  removeSubcategory,\r\n  editCategory,\r\n  editSubcategory,\r\n  fetchSizes,\r\n  fetchWeights,\r\n  fetchBrands,\r\n  fetchColors,\r\n  createBrand,\r\n  removeBrand,\r\n  editBrand,\r\n  createWeight,\r\n  removeWeight,\r\n  editWeight,\r\n  createSize,\r\n  removeSize,\r\n  editSize,\r\n  createColor,\r\n  removeColor,\r\n  editColor\r\n} from \"../../store/actions/indexStore\";\r\nimport TransitionGroup from \"react-transition-group/TransitionGroup\";\r\nimport CSSTransition from \"react-transition-group/CSSTransition\";\r\nimport Modal from \"../UI/Modal/Modal\";\r\n\r\nclass Categorization extends Component {\r\n  state = {\r\n    category: \"\",\r\n    categoryImg: \"\",\r\n    selectedCategory: \"\",\r\n    subcategory: \"\",\r\n    brand: \"\",\r\n    weight: \"\",\r\n    size: \"\",\r\n    color: \"\",\r\n    isOpenCategory: false,\r\n    isOpenSubcategory: false,\r\n    isOpenBrand: false,\r\n    isOpenWeight: false,\r\n    isOpenSize: false,\r\n    isOpenColor: true,\r\n    selectedCategoryObj: {},\r\n    isModalOpen: false\r\n  };\r\n  componentDidMount() {\r\n    this.props.onfetchCatalog();\r\n    this.props.onfetchSizes();\r\n    this.props.onfetchColors();\r\n    this.props.onfetchWeights();\r\n    this.props.onfetchBrands();\r\n  }\r\n  closeFullScreenHandler(value) {\r\n    if (value !== \"\") {\r\n      this.props.oneditCategory(this.state.selectedCategoryObj.categoryId, {\r\n        name: this.state.selectedCategoryObj.categoryName,\r\n        img: value\r\n      });\r\n    }\r\n    this.setState({ isModalOpen: false });\r\n  }\r\n  postBrandHandler() {\r\n    console.log(this.state.brand);\r\n    this.setState({ brand: \"\" });\r\n  }\r\n  postWeightHandler() {\r\n    console.log(this.state.weight);\r\n    this.setState({ weight: \"\" });\r\n  }\r\n  postSizeHandler() {\r\n    console.log(this.state.size);\r\n    this.setState({ size: \"\" });\r\n  }\r\n  postColorHandler() {\r\n    console.log(this.state.color);\r\n    this.setState({ color: \"\" });\r\n  }\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"Categorization-Height\">\r\n          <div className=\"Categorization\">\r\n            <table>\r\n              <tbody>\r\n                <tr\r\n                  style={{\r\n                    boxShadow: this.state.isOpenCategory\r\n                      ? \"0px 0px 10px 1px rgba(0, 0, 0, 0.08)\"\r\n                      : null\r\n                  }}\r\n                  className=\"hover-row\"\r\n                  onClick={() =>\r\n                    this.setState((prevState, props) => {\r\n                      return { isOpenCategory: !prevState.isOpenCategory };\r\n                    })\r\n                  }\r\n                >\r\n                  <td>Category</td>\r\n                  <td className=\"dropdown-btn-wrapper\">\r\n                    <i className=\"fas fa-caret-down dropdown-btn\" />\r\n                  </td>\r\n                </tr>\r\n                {this.state.isOpenCategory ? (\r\n                  <tr>\r\n                    <td colSpan=\"2\">\r\n                      <div className=\"more-info\">\r\n                        <p className=\"input-info\">Category:</p>\r\n                        <input\r\n                          className=\"input\"\r\n                          onChange={e => {\r\n                            this.setState({\r\n                              category: e.target.value\r\n                            });\r\n                          }}\r\n                          value={this.state.category}\r\n                          type=\"text\"\r\n                          placeholder=\"Category\"\r\n                        />\r\n                        <p className=\"input-info\">Category Image:</p>\r\n                        <input\r\n                          className=\"input\"\r\n                          onChange={e => {\r\n                            this.setState({\r\n                              categoryImg: e.target.value\r\n                            });\r\n                          }}\r\n                          value={this.state.categoryImg}\r\n                          type=\"text\"\r\n                          placeholder=\"Category Image\"\r\n                        />\r\n                        <div className=\"buttons\">\r\n                          <button\r\n                            className=\"submit\"\r\n                            onClick={() =>\r\n                              this.props.oncreateCategory(\r\n                                this.state.category,\r\n                                this.state.categoryImg\r\n                              )\r\n                            }\r\n                          >\r\n                            Submit\r\n                          </button>\r\n                          <button\r\n                            className=\"reset\"\r\n                            onClick={() =>\r\n                              this.setState({ category: \"\", categoryImg: \"\" })\r\n                            }\r\n                          >\r\n                            Reset\r\n                          </button>\r\n                        </div>\r\n                        <TransitionGroup component=\"ul\" className=\"list-ul\">\r\n                          {this.props.catalog.catalog.map(category => (\r\n                            <CSSTransition\r\n                              key={category.id}\r\n                              classNames=\"fade\"\r\n                              timeout={400}\r\n                            >\r\n                              <li className=\"list-li\">\r\n                                <input\r\n                                  className=\"input-edit\"\r\n                                  value={category.name}\r\n                                  onChange={e => {\r\n                                    this.props.oneditCategory(category.id, {\r\n                                      name: e.target.value,\r\n                                      img: category.img\r\n                                    });\r\n                                  }}\r\n                                />\r\n                                <div className=\"btn-icon\">\r\n                                  <i\r\n                                    className=\"fas fa-camera camera\"\r\n                                    onClick={() => {\r\n                                      this.setState({\r\n                                        selectedCategoryObj: {\r\n                                          categoryId: category.id,\r\n                                          categoryName: category.name\r\n                                        },\r\n                                        isModalOpen: true\r\n                                      });\r\n                                    }}\r\n                                  />\r\n                                  <i\r\n                                    className=\"fas fa-times close\"\r\n                                    onClick={() => {\r\n                                      this.props.onremoveCategory(category.id);\r\n                                    }}\r\n                                  />\r\n                                </div>\r\n                              </li>\r\n                            </CSSTransition>\r\n                          ))}\r\n                        </TransitionGroup>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                ) : null}\r\n                <tr\r\n                  style={{\r\n                    boxShadow: this.state.isOpenSubcategory\r\n                      ? \"0px 0px 10px 1px rgba(0, 0, 0, 0.08)\"\r\n                      : null\r\n                  }}\r\n                  className=\"hover-row\"\r\n                  onClick={() =>\r\n                    this.setState((prevState, props) => {\r\n                      return {\r\n                        isOpenSubcategory: !prevState.isOpenSubcategory\r\n                      };\r\n                    })\r\n                  }\r\n                >\r\n                  <td>Subcategory</td>\r\n                  <td className=\"dropdown-btn-wrapper\">\r\n                    <i className=\"fas fa-caret-down dropdown-btn\" />\r\n                  </td>\r\n                </tr>\r\n                {this.state.isOpenSubcategory ? (\r\n                  <tr>\r\n                    <td colSpan=\"2\">\r\n                      <div className=\"more-info\">\r\n                        <p className=\"input-info\">Category:</p>\r\n                        <select\r\n                          onChange={e =>\r\n                            this.setState({\r\n                              selectedCategory:\r\n                                e.target.options[e.target.selectedIndex].value\r\n                            })\r\n                          }\r\n                        >\r\n                          {this.props.catalog.catalog.map(category => (\r\n                            <option key={category.id} value={category.id}>\r\n                              {category.name}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                        <p className=\"input-info\">Subcategory:</p>\r\n                        <input\r\n                          className=\"input\"\r\n                          onChange={e => {\r\n                            this.setState({\r\n                              subcategory: e.target.value\r\n                            });\r\n                          }}\r\n                          value={this.state.subcategory}\r\n                          type=\"text\"\r\n                          placeholder=\"Subcategory\"\r\n                          onKeyPress={e => {\r\n                            if (e.key === \"Enter\") {\r\n                              this.props.oncreateSubcategory(\r\n                                this.state.selectedCategory === \"\"\r\n                                  ? this.props.catalog.catalog[0].id\r\n                                  : this.state.selectedCategory,\r\n                                this.state.subcategory\r\n                              );\r\n                            }\r\n                          }}\r\n                        />\r\n                        <div className=\"buttons\">\r\n                          <button\r\n                            className=\"submit\"\r\n                            onClick={() =>\r\n                              this.props.oncreateSubcategory(\r\n                                this.state.selectedCategory === \"\"\r\n                                  ? this.props.catalog.catalog[0].id\r\n                                  : this.state.selectedCategory,\r\n                                this.state.subcategory\r\n                              )\r\n                            }\r\n                          >\r\n                            Submit\r\n                          </button>\r\n                          <button\r\n                            className=\"reset\"\r\n                            onClick={() => this.setState({ subcategory: \"\" })}\r\n                          >\r\n                            Reset\r\n                          </button>\r\n                        </div>\r\n                        <TransitionGroup component=\"ul\" className=\"list-ul\">\r\n                          {this.props.catalog.catalog.map((category, index) => {\r\n                            if (category.id === this.state.selectedCategory) {\r\n                              return category.subcategories.map(subcategory => (\r\n                                <CSSTransition\r\n                                  key={subcategory.id}\r\n                                  classNames=\"fade\"\r\n                                  timeout={400}\r\n                                >\r\n                                  <li className=\"list-li\">\r\n                                    <input\r\n                                      className=\"input-edit\"\r\n                                      value={subcategory.name}\r\n                                      onChange={e => {\r\n                                        this.props.oneditSubcategory(\r\n                                          category.id,\r\n                                          subcategory.id,\r\n                                          {\r\n                                            name: e.target.value\r\n                                          }\r\n                                        );\r\n                                      }}\r\n                                    />\r\n                                    <div className=\"btn-icon\">\r\n                                      <i\r\n                                        className=\"fas fa-times close\"\r\n                                        onClick={() => {\r\n                                          this.props.onremoveSubcategory(\r\n                                            category.id,\r\n                                            subcategory.id\r\n                                          );\r\n                                        }}\r\n                                      />\r\n                                    </div>\r\n                                  </li>\r\n                                </CSSTransition>\r\n                              ));\r\n                            }\r\n                            if (\r\n                              this.state.selectedCategory === \"\" &&\r\n                              index === 0\r\n                            ) {\r\n                              return category.subcategories.map(subcategory => (\r\n                                <CSSTransition\r\n                                  key={subcategory.id}\r\n                                  classNames=\"fade\"\r\n                                  timeout={400}\r\n                                >\r\n                                  <li className=\"list-li\">\r\n                                    <input\r\n                                      className=\"input-edit\"\r\n                                      value={subcategory.name}\r\n                                      onChange={e => {\r\n                                        this.props.oneditSubcategory(\r\n                                          category.id,\r\n                                          subcategory.id,\r\n                                          {\r\n                                            name: e.target.value\r\n                                          }\r\n                                        );\r\n                                      }}\r\n                                    />\r\n                                    <div className=\"btn-icon\">\r\n                                      <i\r\n                                        className=\"fas fa-times close\"\r\n                                        onClick={() => {\r\n                                          this.props.onremoveSubcategory(\r\n                                            category.id,\r\n                                            subcategory.id\r\n                                          );\r\n                                        }}\r\n                                      />\r\n                                    </div>\r\n                                  </li>\r\n                                </CSSTransition>\r\n                              ));\r\n                            }\r\n                            return null;\r\n                          })}\r\n                        </TransitionGroup>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                ) : null}\r\n\r\n                <tr\r\n                  style={{\r\n                    boxShadow: this.state.isOpenBrand\r\n                      ? \"0px 0px 10px 1px rgba(0, 0, 0, 0.08)\"\r\n                      : null\r\n                  }}\r\n                  className=\"hover-row\"\r\n                  onClick={() =>\r\n                    this.setState((prevState, props) => {\r\n                      return { isOpenBrand: !prevState.isOpenBrand };\r\n                    })\r\n                  }\r\n                >\r\n                  <td>Brand</td>\r\n                  <td className=\"dropdown-btn-wrapper\">\r\n                    <i className=\"fas fa-caret-down dropdown-btn\" />\r\n                  </td>\r\n                </tr>\r\n                {this.state.isOpenBrand ? (\r\n                  <tr>\r\n                    <td colSpan=\"2\">\r\n                      <div className=\"more-info\">\r\n                        <p className=\"input-info\">Brand:</p>\r\n                        <input\r\n                          className=\"input\"\r\n                          onChange={e => {\r\n                            this.setState({\r\n                              brand: e.target.value\r\n                            });\r\n                          }}\r\n                          value={this.state.brand}\r\n                          type=\"text\"\r\n                          placeholder=\"Brand\"\r\n                        />\r\n                        <div className=\"buttons\">\r\n                          <button\r\n                            className=\"submit\"\r\n                            onClick={() => {\r\n                              this.props.oncreateBrand(this.state.brand);\r\n                              this.setState({ brand: \"\" });\r\n                            }}\r\n                          >\r\n                            Submit\r\n                          </button>\r\n                          <button\r\n                            className=\"reset\"\r\n                            onClick={() => this.setState({ brand: \"\" })}\r\n                          >\r\n                            Reset\r\n                          </button>\r\n                        </div>\r\n                        <TransitionGroup component=\"ul\" className=\"list-ul\">\r\n                          {this.props.catalog.brands.map(brand => (\r\n                            <CSSTransition\r\n                              key={brand.id}\r\n                              classNames=\"fade\"\r\n                              timeout={400}\r\n                            >\r\n                              <li className=\"list-li\">\r\n                                <input\r\n                                  className=\"input-edit\"\r\n                                  value={brand.name}\r\n                                  onChange={e => {\r\n                                    this.props.oneditBrand(brand.id, {\r\n                                      name: e.target.value\r\n                                    });\r\n                                  }}\r\n                                />\r\n                                <div className=\"btn-icon\">\r\n                                  <i\r\n                                    className=\"fas fa-times close\"\r\n                                    onClick={() => {\r\n                                      this.props.onremoveBrand(brand.id);\r\n                                    }}\r\n                                  />\r\n                                </div>\r\n                              </li>\r\n                            </CSSTransition>\r\n                          ))}\r\n                        </TransitionGroup>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                ) : null}\r\n                <tr\r\n                  style={{\r\n                    boxShadow: this.state.isOpenWeight\r\n                      ? \"0px 0px 10px 1px rgba(0, 0, 0, 0.08)\"\r\n                      : null\r\n                  }}\r\n                  className=\"hover-row\"\r\n                  onClick={() =>\r\n                    this.setState((prevState, props) => {\r\n                      return { isOpenWeight: !prevState.isOpenWeight };\r\n                    })\r\n                  }\r\n                >\r\n                  <td>Weight</td>\r\n                  <td className=\"dropdown-btn-wrapper\">\r\n                    <i className=\"fas fa-caret-down dropdown-btn\" />\r\n                  </td>\r\n                </tr>\r\n                {this.state.isOpenWeight ? (\r\n                  <tr>\r\n                    <td colSpan=\"2\">\r\n                      <div className=\"more-info\">\r\n                        <p className=\"input-info\">Weight:</p>\r\n                        <input\r\n                          className=\"input\"\r\n                          onChange={e => {\r\n                            this.setState({\r\n                              weight: e.target.value\r\n                            });\r\n                          }}\r\n                          value={this.state.weight}\r\n                          type=\"text\"\r\n                          placeholder=\"Weight\"\r\n                        />\r\n                        <div className=\"buttons\">\r\n                          <button\r\n                            className=\"submit\"\r\n                            onClick={() => {\r\n                              this.props.oncreateWeight(this.state.weight);\r\n                              this.setState({ weight: \"\" });\r\n                            }}\r\n                          >\r\n                            Submit\r\n                          </button>\r\n                          <button\r\n                            className=\"reset\"\r\n                            onClick={() => this.setState({ weight: \"\" })}\r\n                          >\r\n                            Reset\r\n                          </button>\r\n                        </div>\r\n                        <TransitionGroup component=\"ul\" className=\"list-ul\">\r\n                          {this.props.catalog.weights.map(weight => (\r\n                            <CSSTransition\r\n                              key={weight.id}\r\n                              classNames=\"fade\"\r\n                              timeout={400}\r\n                            >\r\n                              <li className=\"list-li\">\r\n                                <input\r\n                                  className=\"input-edit\"\r\n                                  value={weight.name}\r\n                                  onChange={e => {\r\n                                    this.props.oneditWeight(weight.id, {\r\n                                      name: e.target.value\r\n                                    });\r\n                                  }}\r\n                                />\r\n                                <div className=\"btn-icon\">\r\n                                  <i\r\n                                    className=\"fas fa-times close\"\r\n                                    onClick={() => {\r\n                                      this.props.onremoveWeight(weight.id);\r\n                                    }}\r\n                                  />\r\n                                </div>\r\n                              </li>\r\n                            </CSSTransition>\r\n                          ))}\r\n                        </TransitionGroup>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                ) : null}\r\n                <tr\r\n                  style={{\r\n                    boxShadow: this.state.isOpenSize\r\n                      ? \"0px 0px 10px 1px rgba(0, 0, 0, 0.08)\"\r\n                      : null\r\n                  }}\r\n                  className=\"hover-row\"\r\n                  onClick={() =>\r\n                    this.setState((prevState, props) => {\r\n                      return { isOpenSize: !prevState.isOpenSize };\r\n                    })\r\n                  }\r\n                >\r\n                  <td>Size</td>\r\n                  <td className=\"dropdown-btn-wrapper\">\r\n                    <i className=\"fas fa-caret-down dropdown-btn\" />\r\n                  </td>\r\n                </tr>\r\n                {this.state.isOpenSize ? (\r\n                  <tr>\r\n                    <td colSpan=\"2\">\r\n                      <div className=\"more-info\">\r\n                        <p className=\"input-info\">Size:</p>\r\n                        <input\r\n                          className=\"input\"\r\n                          onChange={e => {\r\n                            this.setState({\r\n                              size: e.target.value\r\n                            });\r\n                          }}\r\n                          value={this.state.size}\r\n                          type=\"text\"\r\n                          placeholder=\"Size\"\r\n                        />\r\n                        <div className=\"buttons\">\r\n                          <button\r\n                            className=\"submit\"\r\n                            onClick={() => {\r\n                              this.props.oncreateSize(this.state.size);\r\n                              this.setState({ size: \"\" });\r\n                            }}\r\n                          >\r\n                            Submit\r\n                          </button>\r\n                          <button\r\n                            className=\"reset\"\r\n                            onClick={() => this.setState({ size: \"\" })}\r\n                          >\r\n                            Reset\r\n                          </button>\r\n                        </div>\r\n                        <TransitionGroup component=\"ul\" className=\"list-ul\">\r\n                          {this.props.catalog.sizes.map(size => (\r\n                            <CSSTransition\r\n                              key={size.id}\r\n                              classNames=\"fade\"\r\n                              timeout={400}\r\n                            >\r\n                              <li className=\"list-li\">\r\n                                <input\r\n                                  className=\"input-edit\"\r\n                                  value={size.name}\r\n                                  onChange={e => {\r\n                                    this.props.oneditSize(size.id, {\r\n                                      name: e.target.value\r\n                                    });\r\n                                  }}\r\n                                />\r\n                                <div className=\"btn-icon\">\r\n                                  <i\r\n                                    className=\"fas fa-times close\"\r\n                                    onClick={() => {\r\n                                      this.props.onremoveSize(size.id);\r\n                                    }}\r\n                                  />\r\n                                </div>\r\n                              </li>\r\n                            </CSSTransition>\r\n                          ))}\r\n                        </TransitionGroup>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                ) : null}\r\n                <tr\r\n                  style={{\r\n                    boxShadow: this.state.isOpenColor\r\n                      ? \"0px 0px 10px 1px rgba(0, 0, 0, 0.08)\"\r\n                      : null\r\n                  }}\r\n                  className=\"hover-row\"\r\n                  onClick={() =>\r\n                    this.setState((prevState, props) => {\r\n                      return { isOpenColor: !prevState.isOpenColor };\r\n                    })\r\n                  }\r\n                >\r\n                  <td>Color</td>\r\n                  <td className=\"dropdown-btn-wrapper\">\r\n                    <i className=\"fas fa-caret-down dropdown-btn\" />\r\n                  </td>\r\n                </tr>\r\n                {this.state.isOpenColor ? (\r\n                  <tr>\r\n                    <td colSpan=\"2\">\r\n                      <div className=\"more-info\">\r\n                        <p className=\"input-info\">Weight:</p>\r\n                        <input\r\n                          className=\"input\"\r\n                          onChange={e => {\r\n                            this.setState({\r\n                              weight: e.target.value\r\n                            });\r\n                          }}\r\n                          value={this.state.weight}\r\n                          type=\"text\"\r\n                          placeholder=\"Weight\"\r\n                        />\r\n                        <div className=\"buttons\">\r\n                          <button\r\n                            className=\"submit\"\r\n                            onClick={() => {\r\n                              this.props.oncreateWeight(this.state.weight);\r\n                              this.setState({ weight: \"\" });\r\n                            }}\r\n                          >\r\n                            Submit\r\n                          </button>\r\n                          <button\r\n                            className=\"reset\"\r\n                            onClick={() => this.setState({ weight: \"\" })}\r\n                          >\r\n                            Reset\r\n                          </button>\r\n                        </div>\r\n                        <TransitionGroup component=\"ul\" className=\"list-ul\">\r\n                          {this.props.catalog.weights.map(weight => (\r\n                            <CSSTransition\r\n                              key={weight.id}\r\n                              classNames=\"fade\"\r\n                              timeout={400}\r\n                            >\r\n                              <li className=\"list-li\">\r\n                                <input\r\n                                  className=\"input-edit\"\r\n                                  value={weight.name}\r\n                                  onChange={e => {\r\n                                    this.props.oneditWeight(weight.id, {\r\n                                      name: e.target.value\r\n                                    });\r\n                                  }}\r\n                                />\r\n                                <div className=\"btn-icon\">\r\n                                  <i\r\n                                    className=\"fas fa-times close\"\r\n                                    onClick={() => {\r\n                                      this.props.onremoveWeight(weight.id);\r\n                                    }}\r\n                                  />\r\n                                </div>\r\n                              </li>\r\n                            </CSSTransition>\r\n                          ))}\r\n                        </TransitionGroup>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                ) : null}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n        {this.state.isModalOpen ? (\r\n          <Modal\r\n            closeFullscreen={value => {\r\n              this.closeFullScreenHandler(value);\r\n            }}\r\n          />\r\n        ) : null}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    catalog: state.catalog\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onfetchSizes: () => dispatch(fetchSizes()),\r\n    onfetchColors: () => dispatch(fetchColors()),\r\n    onfetchBrands: () => dispatch(fetchBrands()),\r\n    onfetchWeights: () => dispatch(fetchWeights()),\r\n    onfetchCatalog: () => dispatch(fetchCatalog()),\r\n    oncreateCategory: (name, imageUrl) =>\r\n      dispatch(createCategory(name, imageUrl)),\r\n    onremoveCategory: categoryId => dispatch(removeCategory(categoryId)),\r\n    oncreateWeight: name => dispatch(createWeight(name)),\r\n    oncreateBrand: name => dispatch(createBrand(name)),\r\n    onremoveBrand: id => dispatch(removeBrand(id)),\r\n    oneditBrand: (id, name) => dispatch(editBrand(id, name)),\r\n    oncreateSize: name => dispatch(createSize(name)),\r\n    onremoveSize: id => dispatch(removeSize(id)),\r\n    oneditSize: (id, name) => dispatch(editSize(id, name)),\r\n    oncreateColor: name => dispatch(createColor(name)),\r\n    onremoveColor: id => dispatch(removeColor(id)),\r\n    oneditColor: (id, name) => dispatch(editColor(id, name)),\r\n    onremoveWeight: id => dispatch(removeWeight(id)),\r\n    oneditWeight: (id, name) => dispatch(editWeight(id, name)),\r\n    oncreateSubcategory: (subcategoryId, subcategoryName) =>\r\n      dispatch(createSubcategory(subcategoryId, subcategoryName)),\r\n    onremoveSubcategory: (categoryId, subcategoryId) =>\r\n      dispatch(removeSubcategory(categoryId, subcategoryId)),\r\n    oneditCategory: (categoryId, category) =>\r\n      dispatch(editCategory(categoryId, category)),\r\n    oneditSubcategory: (categoryId, subcategoryId, subcategory) =>\r\n      dispatch(editSubcategory(categoryId, subcategoryId, subcategory))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Categorization);\r\n"]},"metadata":{},"sourceType":"module"}