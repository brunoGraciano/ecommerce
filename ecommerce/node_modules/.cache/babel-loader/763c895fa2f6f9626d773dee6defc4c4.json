{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\bruno\\\\Desktop\\\\ecommerce\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\bruno\\\\Desktop\\\\ecommerce\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\bruno\\\\Desktop\\\\ecommerce\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\bruno\\\\Desktop\\\\ecommerce\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\bruno\\\\Desktop\\\\ecommerce\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\bruno\\\\Desktop\\\\ecommerce\\\\src\\\\components\\\\Users\\\\Users.js\";\nimport React, { Component } from \"react\";\nimport \"./Users.css\"; //import axios from \"axios\";\n//import { getCookie } from \"../Util/Util\";\n\nimport Switch from \"../UI/Switch/Switch\";\nimport { connect } from \"react-redux\";\nimport { addUser, removeUser, fetchUsers } from \"../../store/actions/index\";\n\nvar Users =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Users, _Component);\n\n  function Users() {\n    _classCallCheck(this, Users);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Users).apply(this, arguments));\n  }\n\n  _createClass(Users, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.onfetchUsers();\n      console.log(this.props.users);\n    }\n    /*changeRoleUserHandler(role, user, index) {\r\n      let id;\r\n      if (role === \"Admin\") {\r\n        id = 2;\r\n      } else if (role === \"User\") {\r\n        id = 1;\r\n      }\r\n      let r = \"ROLE_\" + role.toUpperCase();\r\n      user.roles[0].id = id;\r\n      user.roles[0].name = r;\r\n      axios\r\n        .put(\r\n          `http://localhost:8087/secure/users/${user.id}?access_token=${getCookie(\r\n            \"Session\"\r\n          )}`,\r\n          user\r\n        )\r\n        .then(res => {\r\n          if (res.status === 200) {\r\n            let userArr = this.state.users;\r\n            userArr[index] = user;\r\n            this.setState({ users: userArr });\r\n          }\r\n        });\r\n    }\r\n    changeEnableUserHandler(enable, user, index) {\r\n      user.enabled = enable;\r\n      user.accountNonExpired = enable;\r\n      user.accountNonLocked = enable;\r\n      user.account_non_expired = enable;\r\n      user.account_non_locked = enable;\r\n      user.credentialsNonExpired = enable;\r\n      axios\r\n        .put(\r\n          `http://localhost:8087/secure/users/${user.id}?access_token=${getCookie(\r\n            \"Session\"\r\n          )}`,\r\n          user\r\n        )\r\n        .then(res => {\r\n          if (res.status === 200) {\r\n            let userArr = this.state.users;\r\n            userArr[index] = user;\r\n            this.setState({ users: userArr });\r\n          }\r\n        });\r\n    }*/\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"Users\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \" \");\n    }\n  }]);\n\n  return Users;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    user: state.user\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onfetchUsers: function onfetchUsers() {\n      return dispatch(fetchUsers());\n    },\n    onUserAdded: function onUserAdded(user) {\n      return dispatch(addUser(user));\n    },\n    onUserRemoved: function onUserRemoved(username) {\n      return dispatch(removeUser(username));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Users);","map":{"version":3,"sources":["C:\\Users\\bruno\\Desktop\\ecommerce\\src\\components\\Users\\Users.js"],"names":["React","Component","Switch","connect","addUser","removeUser","fetchUsers","Users","props","onfetchUsers","console","log","users","mapStateToProps","state","user","mapDispatchToProps","dispatch","onUserAdded","onUserRemoved","username"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,aAAP,C,CACA;AACA;;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,EAAkBC,UAAlB,EAA8BC,UAA9B,QAAgD,2BAAhD;;IAEMC,K;;;;;;;;;;;;;wCACgB;AAClB,WAAKC,KAAL,CAAWC,YAAX;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,KAAL,CAAWI,KAAvB;AAED;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6BA+CS;AACP,aACE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF;AAqGD;;;;EA3JiBX,S;;AA8JpB,IAAMY,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAE/B,SAAO;AACLC,IAAAA,IAAI,EAAED,KAAK,CAACC;AADP,GAAP;AAGD,CALD;;AAOA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ,EAAI;AACrC,SAAO;AACLR,IAAAA,YAAY,EAAE;AAAA,aAAMQ,QAAQ,CAACX,UAAU,EAAX,CAAd;AAAA,KADT;AAELY,IAAAA,WAAW,EAAE,qBAAAH,IAAI;AAAA,aAAIE,QAAQ,CAACb,OAAO,CAACW,IAAD,CAAR,CAAZ;AAAA,KAFZ;AAGLI,IAAAA,aAAa,EAAE,uBAAAC,QAAQ;AAAA,aAAIH,QAAQ,CAACZ,UAAU,CAACe,QAAD,CAAX,CAAZ;AAAA;AAHlB,GAAP;AAKD,CAND;;AAQA,eAAejB,OAAO,CACpBU,eADoB,EAEpBG,kBAFoB,CAAP,CAGbT,KAHa,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./Users.css\";\r\n//import axios from \"axios\";\r\n//import { getCookie } from \"../Util/Util\";\r\nimport Switch from \"../UI/Switch/Switch\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { addUser, removeUser, fetchUsers } from \"../../store/actions/index\";\r\n\r\nclass Users extends Component {\r\n  componentDidMount() {\r\n    this.props.onfetchUsers();\r\n    console.log(this.props.users);\r\n    \r\n  }\r\n  /*changeRoleUserHandler(role, user, index) {\r\n    let id;\r\n    if (role === \"Admin\") {\r\n      id = 2;\r\n    } else if (role === \"User\") {\r\n      id = 1;\r\n    }\r\n    let r = \"ROLE_\" + role.toUpperCase();\r\n    user.roles[0].id = id;\r\n    user.roles[0].name = r;\r\n    axios\r\n      .put(\r\n        `http://localhost:8087/secure/users/${user.id}?access_token=${getCookie(\r\n          \"Session\"\r\n        )}`,\r\n        user\r\n      )\r\n      .then(res => {\r\n        if (res.status === 200) {\r\n          let userArr = this.state.users;\r\n          userArr[index] = user;\r\n          this.setState({ users: userArr });\r\n        }\r\n      });\r\n  }\r\n  changeEnableUserHandler(enable, user, index) {\r\n    user.enabled = enable;\r\n    user.accountNonExpired = enable;\r\n    user.accountNonLocked = enable;\r\n    user.account_non_expired = enable;\r\n    user.account_non_locked = enable;\r\n    user.credentialsNonExpired = enable;\r\n    axios\r\n      .put(\r\n        `http://localhost:8087/secure/users/${user.id}?access_token=${getCookie(\r\n          \"Session\"\r\n        )}`,\r\n        user\r\n      )\r\n      .then(res => {\r\n        if (res.status === 200) {\r\n          let userArr = this.state.users;\r\n          userArr[index] = user;\r\n          this.setState({ users: userArr });\r\n        }\r\n      });\r\n  }*/\r\n  render() {\r\n    return (\r\n      <div className=\"Users\"> {/* \r\n        {this.props.users.length === 0 ? null : (\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Username</th>\r\n                <th>Name</th>\r\n                <th>Email</th>\r\n                <th>Role</th>\r\n                <th>Enable</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {this.props.users.map((user, index) => (\r\n                <React.Fragment key={user.id}>\r\n                  <tr className=\"hover-row\">\r\n                    <td>{user.username}</td>\r\n                    <td>\r\n                      {user.name} {user.surname}\r\n                    </td>\r\n                    <td>{user.email}</td>\r\n                    <td>\r\n                      <select\r\n                        value={user.roles[0].name}\r\n                        onChange={e => {\r\n                          this.changeRoleUserHandler(\r\n                            e.target.options[e.target.selectedIndex].text,\r\n                            user,\r\n                            index\r\n                          );\r\n                        }}\r\n                      >\r\n                        <option value=\"ROLE_USER\">User</option>\r\n                        <option value=\"ROLE_ADMIN\">Admin</option>\r\n                      </select>\r\n                    </td>\r\n                    <td>\r\n                      <Switch />\r\n                      {user.enabled ? (\r\n                        <div\r\n                          className=\"green\"\r\n                          onClick={() =>\r\n                            this.changeEnableUserHandler(0, user, index)\r\n                          }\r\n                        />\r\n                      ) : (\r\n                        <div\r\n                          className=\"red\"\r\n                          onClick={() =>\r\n                            this.changeEnableUserHandler(1, user, index)\r\n                          }\r\n                        />\r\n                      )}\r\n                    </td>\r\n                    <td\r\n                      className=\"dropdown-btn-wrapper\"\r\n                      onClick={() => {\r\n                        let originalUsers = this.props.users;\r\n                        originalUsers[index].isOpen = !originalUsers[index]\r\n                          .isOpen;\r\n                        this.setState({ users: originalUsers });\r\n                      }}\r\n                    >\r\n                      <i className=\"fas fa-caret-down dropdown-btn\" />\r\n                    </td>\r\n                  </tr>\r\n                  {user.isOpen ? (\r\n                    <tr>\r\n                      <td colSpan=\"6\">\r\n                        <div className=\"more-info\">\r\n                          <div>\r\n                            <img\r\n                              src={user.img}\r\n                              alt={user.username}\r\n                              className=\"profile-img\"\r\n                            />\r\n                          </div>\r\n                          <div className=\"info\">\r\n                            <div className=\"id\">\r\n                              <span className=\"bold\">Id:</span> {user.id}\r\n                            </div>\r\n                            <div className=\"phone\">\r\n                              <span className=\"bold\">Phone:</span> {user.phone}\r\n                            </div>\r\n                            <div className=\"address\">\r\n                              <span className=\"bold\">Address:</span>{\" \"}\r\n                              {user.address}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </td>\r\n                    </tr>\r\n                  ) : null}\r\n                </React.Fragment>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        )} */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  \r\n  return {\r\n    user: state.user\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onfetchUsers: () => dispatch(fetchUsers()),\r\n    onUserAdded: user => dispatch(addUser(user)),\r\n    onUserRemoved: username => dispatch(removeUser(username))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Users);\r\n"]},"metadata":{},"sourceType":"module"}