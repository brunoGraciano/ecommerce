{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\bruno\\\\Desktop\\\\ecommerce\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\bruno\\\\Desktop\\\\ecommerce\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\bruno\\\\Desktop\\\\ecommerce\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\bruno\\\\Desktop\\\\ecommerce\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\bruno\\\\Desktop\\\\ecommerce\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\bruno\\\\Desktop\\\\ecommerce\\\\src\\\\components\\\\Categorization\\\\Categorization.js\";\nimport React, { Component } from \"react\";\nimport \"./Categorization.css\";\nimport axios from \"axios\";\nimport { getCookie } from \"../Util/Util\";\nimport { connect } from \"react-redux\";\nimport { fetchCatalog } from \"../../store/actions/indexStore\";\n\nvar Categorization =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Categorization, _Component);\n\n  function Categorization() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Categorization);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Categorization)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      category: \"\",\n      categoryImg: \"\",\n      categoryArr: [],\n      selectedCategory: \"\",\n      subcategory: \"\",\n      brand: \"\",\n      weight: \"\",\n      size: \"\",\n      color: \"\",\n      isOpenCategory: false,\n      isOpenSubcategory: false,\n      isOpenBrand: false,\n      isOpenWeight: false,\n      isOpenSize: false,\n      isOpenColor: false\n    };\n    return _this;\n  }\n\n  _createClass(Categorization, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var url = \"http://localhost:8086/catalogs/categories\";\n      axios.get(url).then(function (res) {\n        var categories = [];\n\n        for (var i = 0; i < res.data.length; i++) {\n          categories.push(res.data[i].name);\n        }\n\n        _this2.setState({\n          categoryArr: categories\n        });\n      });\n    }\n  }, {\n    key: \"postCategoryHandler\",\n    value: function postCategoryHandler() {\n      var _this3 = this;\n\n      axios({\n        method: \"post\",\n        headers: {\n          \"content-type\": \"application/json\"\n        },\n        data: JSON.stringify({\n          name: this.state.category,\n          img: this.state.categoryImg\n        }),\n        url: \"http://localhost:8086/catalogs/categories?session=\".concat(getCookie(\"Session\"))\n      }).then(function (res) {\n        _this3.setState({\n          category: \"\",\n          categoryImg: \"\"\n        });\n      });\n    }\n  }, {\n    key: \"postSubcategoryHandler\",\n    value: function postSubcategoryHandler() {\n      var _this4 = this;\n\n      var subcategory = this.state.selectedCategory.toLowerCase().split(\" \").join(\"-\");\n      axios({\n        method: \"post\",\n        headers: {\n          \"content-type\": \"application/json\"\n        },\n        data: JSON.stringify({\n          name: this.state.subcategory\n        }),\n        url: \"http://localhost:8086/catalogs/categories/\".concat(subcategory, \"/subcategories?session=\").concat(getCookie(\"Session\"))\n      }).then(function (res) {\n        _this4.setState({\n          subcategory: \"\"\n        });\n      });\n    }\n  }, {\n    key: \"postBrandHandler\",\n    value: function postBrandHandler() {\n      console.log(this.state.brand);\n      this.setState({\n        brand: \"\"\n      });\n    }\n  }, {\n    key: \"postWeightHandler\",\n    value: function postWeightHandler() {\n      console.log(this.state.weight);\n      this.setState({\n        weight: \"\"\n      });\n    }\n  }, {\n    key: \"postSizeHandler\",\n    value: function postSizeHandler() {\n      console.log(this.state.size);\n      this.setState({\n        size: \"\"\n      });\n    }\n  }, {\n    key: \"postColorHandler\",\n    value: function postColorHandler() {\n      console.log(this.state.color);\n      this.setState({\n        color: \"\"\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      return React.createElement(\"div\", {\n        className: \"Categorization-Height\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"Categorization\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        className: \"hover-row\",\n        onClick: function onClick() {\n          return _this5.setState(function (prevState, props) {\n            return {\n              isOpenCategory: !prevState.isOpenCategory\n            };\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"Category\"), React.createElement(\"td\", {\n        className: \"dropdown-btn-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-caret-down dropdown-btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }))), this.state.isOpenCategory ? React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        colSpan: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"more-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"input-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"Category:\"), React.createElement(\"input\", {\n        onChange: function onChange(e) {\n          _this5.setState({\n            category: e.target.value\n          });\n        },\n        value: this.state.category,\n        type: \"text\",\n        placeholder: \"Category\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"input-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, \"Category Image:\"), React.createElement(\"input\", {\n        onChange: function onChange(e) {\n          _this5.setState({\n            categoryImg: e.target.value\n          });\n        },\n        value: this.state.categoryImg,\n        type: \"text\",\n        placeholder: \"Category Image\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"submit\",\n        onClick: function onClick() {\n          return _this5.postCategoryHandler();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, \"Submit\"), React.createElement(\"button\", {\n        className: \"reset\",\n        onClick: function onClick() {\n          return _this5.setState({\n            category: \"\"\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \"Reset\"))))) : null, React.createElement(\"tr\", {\n        className: \"hover-row\",\n        onClick: function onClick() {\n          return _this5.setState(function (prevState, props) {\n            return {\n              isOpenSubcategory: !prevState.isOpenSubcategory\n            };\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, \"Subcategory\"), React.createElement(\"td\", {\n        className: \"dropdown-btn-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-caret-down dropdown-btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }))), this.state.isOpenSubcategory ? React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        colSpan: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"more-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"input-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, \"Category:\"), React.createElement(\"select\", {\n        onChange: function onChange(e) {\n          return _this5.setState({\n            selectedCategory: e.target.options[e.target.selectedIndex].text\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, this.props.catalog.catalog.map(function (category) {\n        return React.createElement(\"option\", {\n          key: category,\n          value: category,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175\n          },\n          __self: this\n        }, category);\n      })), React.createElement(\"p\", {\n        className: \"input-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, \"Subcategory:\"), React.createElement(\"input\", {\n        onChange: function onChange(e) {\n          _this5.setState({\n            subcategory: e.target.value\n          });\n        },\n        value: this.state.subcategory,\n        type: \"text\",\n        placeholder: \"Subcategory\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"submit\",\n        onClick: function onClick() {\n          return _this5.postSubcategoryHandler();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, \"Submit\"), React.createElement(\"button\", {\n        className: \"reset\",\n        onClick: function onClick() {\n          return _this5.setState({\n            subcategory: \"\"\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, \"Reset\"))))) : null, React.createElement(\"tr\", {\n        className: \"hover-row\",\n        onClick: function onClick() {\n          return _this5.setState(function (prevState, props) {\n            return {\n              isOpenBrand: !prevState.isOpenBrand\n            };\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, \"Brand\"), React.createElement(\"td\", {\n        className: \"dropdown-btn-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-caret-down dropdown-btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }))), this.state.isOpenBrand ? React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        colSpan: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"more-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"input-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, \"Brand:\"), React.createElement(\"input\", {\n        onChange: function onChange(e) {\n          _this5.setState({\n            brand: e.target.value\n          });\n        },\n        value: this.state.brand,\n        type: \"text\",\n        placeholder: \"Brand\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"submit\",\n        onClick: function onClick() {\n          return _this5.postBrandHandler();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, \"Submit\"), React.createElement(\"button\", {\n        className: \"reset\",\n        onClick: function onClick() {\n          return _this5.setState({\n            brand: \"\"\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, \"Reset\"))))) : null, React.createElement(\"tr\", {\n        className: \"hover-row\",\n        onClick: function onClick() {\n          return _this5.setState(function (prevState, props) {\n            return {\n              isOpenWeight: !prevState.isOpenWeight\n            };\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }, \"Weight\"), React.createElement(\"td\", {\n        className: \"dropdown-btn-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-caret-down dropdown-btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }))), this.state.isOpenWeight ? React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        colSpan: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"more-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"input-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }, \"Weight:\"), React.createElement(\"input\", {\n        onChange: function onChange(e) {\n          _this5.setState({\n            weight: e.target.value\n          });\n        },\n        value: this.state.weight,\n        type: \"text\",\n        placeholder: \"Weight\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"submit\",\n        onClick: function onClick() {\n          return _this5.postWeightHandler();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      }, \"Submit\"), React.createElement(\"button\", {\n        className: \"reset\",\n        onClick: function onClick() {\n          return _this5.setState({\n            weight: \"\"\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }, \"Reset\"))))) : null, React.createElement(\"tr\", {\n        className: \"hover-row\",\n        onClick: function onClick() {\n          return _this5.setState(function (prevState, props) {\n            return {\n              isOpenSize: !prevState.isOpenSize\n            };\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310\n        },\n        __self: this\n      }, \"Size\"), React.createElement(\"td\", {\n        className: \"dropdown-btn-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-caret-down dropdown-btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312\n        },\n        __self: this\n      }))), this.state.isOpenSize ? React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        colSpan: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"more-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"input-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319\n        },\n        __self: this\n      }, \"Size:\"), React.createElement(\"input\", {\n        onChange: function onChange(e) {\n          _this5.setState({\n            size: e.target.value\n          });\n        },\n        value: this.state.size,\n        type: \"text\",\n        placeholder: \"Size\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"submit\",\n        onClick: function onClick() {\n          return _this5.postSizeHandler();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331\n        },\n        __self: this\n      }, \"Submit\"), React.createElement(\"button\", {\n        className: \"reset\",\n        onClick: function onClick() {\n          return _this5.setState({\n            size: \"\"\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337\n        },\n        __self: this\n      }, \"Reset\"))))) : null, React.createElement(\"tr\", {\n        className: \"hover-row\",\n        onClick: function onClick() {\n          return _this5.setState(function (prevState, props) {\n            return {\n              isOpenColor: !prevState.isOpenColor\n            };\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356\n        },\n        __self: this\n      }, \"Color\"), React.createElement(\"td\", {\n        className: \"dropdown-btn-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-caret-down dropdown-btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358\n        },\n        __self: this\n      }))), this.state.isOpenColor ? React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        colSpan: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"more-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"input-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365\n        },\n        __self: this\n      }, \"Color:\"), React.createElement(\"input\", {\n        onChange: function onChange(e) {\n          _this5.setState({\n            color: e.target.value\n          });\n        },\n        value: this.state.color,\n        type: \"text\",\n        placeholder: \"Color\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"submit\",\n        onClick: function onClick() {\n          return _this5.postColorHandler();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377\n        },\n        __self: this\n      }, \"Submit\"), React.createElement(\"button\", {\n        className: \"reset\",\n        onClick: function onClick() {\n          return _this5.setState({\n            color: \"\"\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383\n        },\n        __self: this\n      }, \"Reset\"))))) : null))));\n    }\n  }]);\n\n  return Categorization;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    catalog: state.catalog\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onfetchCatalog: function onfetchCatalog() {\n      return dispatch(fetchCatalog());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Categorization);","map":{"version":3,"sources":["C:\\Users\\bruno\\Desktop\\ecommerce\\src\\components\\Categorization\\Categorization.js"],"names":["React","Component","axios","getCookie","connect","fetchCatalog","Categorization","state","category","categoryImg","categoryArr","selectedCategory","subcategory","brand","weight","size","color","isOpenCategory","isOpenSubcategory","isOpenBrand","isOpenWeight","isOpenSize","isOpenColor","url","get","then","res","categories","i","data","length","push","name","setState","method","headers","JSON","stringify","img","toLowerCase","split","join","console","log","prevState","props","e","target","value","postCategoryHandler","options","selectedIndex","text","catalog","map","postSubcategoryHandler","postBrandHandler","postWeightHandler","postSizeHandler","postColorHandler","mapStateToProps","mapDispatchToProps","dispatch","onfetchCatalog"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,sBAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,gCAA7B;;IAEMC,c;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,QAAQ,EAAE,EADJ;AAENC,MAAAA,WAAW,EAAE,EAFP;AAGNC,MAAAA,WAAW,EAAE,EAHP;AAINC,MAAAA,gBAAgB,EAAE,EAJZ;AAKNC,MAAAA,WAAW,EAAE,EALP;AAMNC,MAAAA,KAAK,EAAE,EAND;AAONC,MAAAA,MAAM,EAAE,EAPF;AAQNC,MAAAA,IAAI,EAAE,EARA;AASNC,MAAAA,KAAK,EAAE,EATD;AAUNC,MAAAA,cAAc,EAAE,KAVV;AAWNC,MAAAA,iBAAiB,EAAE,KAXb;AAYNC,MAAAA,WAAW,EAAE,KAZP;AAaNC,MAAAA,YAAY,EAAE,KAbR;AAcNC,MAAAA,UAAU,EAAE,KAdN;AAeNC,MAAAA,WAAW,EAAE;AAfP,K;;;;;;wCAiBY;AAAA;;AAClB,UAAIC,GAAG,8CAAP;AACArB,MAAAA,KAAK,CAACsB,GAAN,CAAUD,GAAV,EAAeE,IAAf,CAAoB,UAAAC,GAAG,EAAI;AACzB,YAAIC,UAAU,GAAG,EAAjB;;AACA,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,GAAG,CAACG,IAAJ,CAASC,MAA7B,EAAqCF,CAAC,EAAtC,EAA0C;AACxCD,UAAAA,UAAU,CAACI,IAAX,CAAgBL,GAAG,CAACG,IAAJ,CAASD,CAAT,EAAYI,IAA5B;AACD;;AACD,QAAA,MAAI,CAACC,QAAL,CAAc;AACZvB,UAAAA,WAAW,EAAEiB;AADD,SAAd;AAGD,OARD;AASD;;;0CACqB;AAAA;;AACpBzB,MAAAA,KAAK,CAAC;AACJgC,QAAAA,MAAM,EAAE,MADJ;AAEJC,QAAAA,OAAO,EAAE;AAAE,0BAAgB;AAAlB,SAFL;AAGJN,QAAAA,IAAI,EAAEO,IAAI,CAACC,SAAL,CAAe;AACnBL,UAAAA,IAAI,EAAE,KAAKzB,KAAL,CAAWC,QADE;AAEnB8B,UAAAA,GAAG,EAAE,KAAK/B,KAAL,CAAWE;AAFG,SAAf,CAHF;AAOJc,QAAAA,GAAG,8DAAuDpB,SAAS,CACjE,SADiE,CAAhE;AAPC,OAAD,CAAL,CAUGsB,IAVH,CAUQ,UAAAC,GAAG,EAAI;AACb,QAAA,MAAI,CAACO,QAAL,CAAc;AAAEzB,UAAAA,QAAQ,EAAE,EAAZ;AAAgBC,UAAAA,WAAW,EAAE;AAA7B,SAAd;AACD,OAZD;AAaD;;;6CACwB;AAAA;;AACvB,UAAIG,WAAW,GAAG,KAAKL,KAAL,CAAWI,gBAAX,CACf4B,WADe,GAEfC,KAFe,CAET,GAFS,EAGfC,IAHe,CAGV,GAHU,CAAlB;AAIAvC,MAAAA,KAAK,CAAC;AACJgC,QAAAA,MAAM,EAAE,MADJ;AAEJC,QAAAA,OAAO,EAAE;AAAE,0BAAgB;AAAlB,SAFL;AAGJN,QAAAA,IAAI,EAAEO,IAAI,CAACC,SAAL,CAAe;AAAEL,UAAAA,IAAI,EAAE,KAAKzB,KAAL,CAAWK;AAAnB,SAAf,CAHF;AAIJW,QAAAA,GAAG,sDAA+CX,WAA/C,oCAAoFT,SAAS,CAC9F,SAD8F,CAA7F;AAJC,OAAD,CAAL,CAOGsB,IAPH,CAOQ,UAAAC,GAAG,EAAI;AACb,QAAA,MAAI,CAACO,QAAL,CAAc;AAAErB,UAAAA,WAAW,EAAE;AAAf,SAAd;AACD,OATD;AAUD;;;uCACkB;AACjB8B,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKpC,KAAL,CAAWM,KAAvB;AACA,WAAKoB,QAAL,CAAc;AAAEpB,QAAAA,KAAK,EAAE;AAAT,OAAd;AACD;;;wCACmB;AAClB6B,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKpC,KAAL,CAAWO,MAAvB;AACA,WAAKmB,QAAL,CAAc;AAAEnB,QAAAA,MAAM,EAAE;AAAV,OAAd;AACD;;;sCACiB;AAChB4B,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKpC,KAAL,CAAWQ,IAAvB;AACA,WAAKkB,QAAL,CAAc;AAAElB,QAAAA,IAAI,EAAE;AAAR,OAAd;AACD;;;uCACkB;AACjB2B,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKpC,KAAL,CAAWS,KAAvB;AACA,WAAKiB,QAAL,CAAc;AAAEjB,QAAAA,KAAK,EAAE;AAAT,OAAd;AACD;;;6BACQ;AAAA;;AACP,aACE;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,SAAS,EAAC,WADZ;AAEE,QAAA,OAAO,EAAE;AAAA,iBACP,MAAI,CAACiB,QAAL,CAAc,UAACW,SAAD,EAAYC,KAAZ,EAAsB;AAClC,mBAAO;AAAE5B,cAAAA,cAAc,EAAE,CAAC2B,SAAS,CAAC3B;AAA7B,aAAP;AACD,WAFD,CADO;AAAA,SAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBARF,EASE;AAAI,QAAA,SAAS,EAAC,sBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,SAAS,EAAC,gCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CATF,CADF,EAcG,KAAKV,KAAL,CAAWU,cAAX,GACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,OAAO,EAAC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE;AACE,QAAA,QAAQ,EAAE,kBAAA6B,CAAC,EAAI;AACb,UAAA,MAAI,CAACb,QAAL,CAAc;AACZzB,YAAAA,QAAQ,EAAEsC,CAAC,CAACC,MAAF,CAASC;AADP,WAAd;AAGD,SALH;AAME,QAAA,KAAK,EAAE,KAAKzC,KAAL,CAAWC,QANpB;AAOE,QAAA,IAAI,EAAC,MAPP;AAQE,QAAA,WAAW,EAAC,UARd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAYE;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAZF,EAaE;AACE,QAAA,QAAQ,EAAE,kBAAAsC,CAAC,EAAI;AACb,UAAA,MAAI,CAACb,QAAL,CAAc;AACZxB,YAAAA,WAAW,EAAEqC,CAAC,CAACC,MAAF,CAASC;AADV,WAAd;AAGD,SALH;AAME,QAAA,KAAK,EAAE,KAAKzC,KAAL,CAAWE,WANpB;AAOE,QAAA,IAAI,EAAC,MAPP;AAQE,QAAA,WAAW,EAAC,gBARd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAbF,EAuBE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,SAAS,EAAC,QADZ;AAEE,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACwC,mBAAL,EAAN;AAAA,SAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAOE;AACE,QAAA,SAAS,EAAC,OADZ;AAEE,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAAChB,QAAL,CAAc;AAAEzB,YAAAA,QAAQ,EAAE;AAAZ,WAAd,CAAN;AAAA,SAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAPF,CAvBF,CADF,CADF,CADD,GA2CG,IAzDN,EA0DE;AACE,QAAA,SAAS,EAAC,WADZ;AAEE,QAAA,OAAO,EAAE;AAAA,iBACP,MAAI,CAACyB,QAAL,CAAc,UAACW,SAAD,EAAYC,KAAZ,EAAsB;AAClC,mBAAO;AAAE3B,cAAAA,iBAAiB,EAAE,CAAC0B,SAAS,CAAC1B;AAAhC,aAAP;AACD,WAFD,CADO;AAAA,SAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBARF,EASE;AAAI,QAAA,SAAS,EAAC,sBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,SAAS,EAAC,gCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CATF,CA1DF,EAuEG,KAAKX,KAAL,CAAWW,iBAAX,GACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,OAAO,EAAC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE;AACE,QAAA,QAAQ,EAAE,kBAAA4B,CAAC;AAAA,iBACT,MAAI,CAACb,QAAL,CAAc;AACZtB,YAAAA,gBAAgB,EACdmC,CAAC,CAACC,MAAF,CAASG,OAAT,CAAiBJ,CAAC,CAACC,MAAF,CAASI,aAA1B,EAAyCC;AAF/B,WAAd,CADS;AAAA,SADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAQG,KAAKP,KAAL,CAAWQ,OAAX,CAAmBA,OAAnB,CAA2BC,GAA3B,CAA+B,UAAA9C,QAAQ;AAAA,eACtC;AAAQ,UAAA,GAAG,EAAEA,QAAb;AAAuB,UAAA,KAAK,EAAEA,QAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGA,QADH,CADsC;AAAA,OAAvC,CARH,CAFF,EAgBE;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAhBF,EAiBE;AACE,QAAA,QAAQ,EAAE,kBAAAsC,CAAC,EAAI;AACb,UAAA,MAAI,CAACb,QAAL,CAAc;AACZrB,YAAAA,WAAW,EAAEkC,CAAC,CAACC,MAAF,CAASC;AADV,WAAd;AAGD,SALH;AAME,QAAA,KAAK,EAAE,KAAKzC,KAAL,CAAWK,WANpB;AAOE,QAAA,IAAI,EAAC,MAPP;AAQE,QAAA,WAAW,EAAC,aARd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAjBF,EA2BE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,SAAS,EAAC,QADZ;AAEE,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAAC2C,sBAAL,EAAN;AAAA,SAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAOE;AACE,QAAA,SAAS,EAAC,OADZ;AAEE,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACtB,QAAL,CAAc;AAAErB,YAAAA,WAAW,EAAE;AAAf,WAAd,CAAN;AAAA,SAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAPF,CA3BF,CADF,CADF,CADD,GA+CG,IAtHN,EAuHE;AACE,QAAA,SAAS,EAAC,WADZ;AAEE,QAAA,OAAO,EAAE;AAAA,iBACP,MAAI,CAACqB,QAAL,CAAc,UAACW,SAAD,EAAYC,KAAZ,EAAsB;AAClC,mBAAO;AAAE1B,cAAAA,WAAW,EAAE,CAACyB,SAAS,CAACzB;AAA1B,aAAP;AACD,WAFD,CADO;AAAA,SAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBARF,EASE;AAAI,QAAA,SAAS,EAAC,sBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,SAAS,EAAC,gCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CATF,CAvHF,EAoIG,KAAKZ,KAAL,CAAWY,WAAX,GACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,OAAO,EAAC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AACE,QAAA,QAAQ,EAAE,kBAAA2B,CAAC,EAAI;AACb,UAAA,MAAI,CAACb,QAAL,CAAc;AACZpB,YAAAA,KAAK,EAAEiC,CAAC,CAACC,MAAF,CAASC;AADJ,WAAd;AAGD,SALH;AAME,QAAA,KAAK,EAAE,KAAKzC,KAAL,CAAWM,KANpB;AAOE,QAAA,IAAI,EAAC,MAPP;AAQE,QAAA,WAAW,EAAC,OARd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAYE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,SAAS,EAAC,QADZ;AAEE,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAAC2C,gBAAL,EAAN;AAAA,SAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAOE;AACE,QAAA,SAAS,EAAC,OADZ;AAEE,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACvB,QAAL,CAAc;AAAEpB,YAAAA,KAAK,EAAE;AAAT,WAAd,CAAN;AAAA,SAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAPF,CAZF,CADF,CADF,CADD,GAgCG,IApKN,EAsKE;AACE,QAAA,SAAS,EAAC,WADZ;AAEE,QAAA,OAAO,EAAE;AAAA,iBACP,MAAI,CAACoB,QAAL,CAAc,UAACW,SAAD,EAAYC,KAAZ,EAAsB;AAClC,mBAAO;AAAEzB,cAAAA,YAAY,EAAE,CAACwB,SAAS,CAACxB;AAA3B,aAAP;AACD,WAFD,CADO;AAAA,SAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBARF,EASE;AAAI,QAAA,SAAS,EAAC,sBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,SAAS,EAAC,gCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CATF,CAtKF,EAmLG,KAAKb,KAAL,CAAWa,YAAX,GACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,OAAO,EAAC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE;AACE,QAAA,QAAQ,EAAE,kBAAA0B,CAAC,EAAI;AACb,UAAA,MAAI,CAACb,QAAL,CAAc;AACZnB,YAAAA,MAAM,EAAEgC,CAAC,CAACC,MAAF,CAASC;AADL,WAAd;AAGD,SALH;AAME,QAAA,KAAK,EAAE,KAAKzC,KAAL,CAAWO,MANpB;AAOE,QAAA,IAAI,EAAC,MAPP;AAQE,QAAA,WAAW,EAAC,QARd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAYE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,SAAS,EAAC,QADZ;AAEE,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAAC2C,iBAAL,EAAN;AAAA,SAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAOE;AACE,QAAA,SAAS,EAAC,OADZ;AAEE,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACxB,QAAL,CAAc;AAAEnB,YAAAA,MAAM,EAAE;AAAV,WAAd,CAAN;AAAA,SAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAPF,CAZF,CADF,CADF,CADD,GAgCG,IAnNN,EAoNE;AACE,QAAA,SAAS,EAAC,WADZ;AAEE,QAAA,OAAO,EAAE;AAAA,iBACP,MAAI,CAACmB,QAAL,CAAc,UAACW,SAAD,EAAYC,KAAZ,EAAsB;AAClC,mBAAO;AAAExB,cAAAA,UAAU,EAAE,CAACuB,SAAS,CAACvB;AAAzB,aAAP;AACD,WAFD,CADO;AAAA,SAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF,EASE;AAAI,QAAA,SAAS,EAAC,sBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,SAAS,EAAC,gCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CATF,CApNF,EAiOG,KAAKd,KAAL,CAAWc,UAAX,GACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,OAAO,EAAC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE;AACE,QAAA,QAAQ,EAAE,kBAAAyB,CAAC,EAAI;AACb,UAAA,MAAI,CAACb,QAAL,CAAc;AACZlB,YAAAA,IAAI,EAAE+B,CAAC,CAACC,MAAF,CAASC;AADH,WAAd;AAGD,SALH;AAME,QAAA,KAAK,EAAE,KAAKzC,KAAL,CAAWQ,IANpB;AAOE,QAAA,IAAI,EAAC,MAPP;AAQE,QAAA,WAAW,EAAC,MARd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAYE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,SAAS,EAAC,QADZ;AAEE,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAAC2C,eAAL,EAAN;AAAA,SAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAOE;AACE,QAAA,SAAS,EAAC,OADZ;AAEE,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACzB,QAAL,CAAc;AAAElB,YAAAA,IAAI,EAAE;AAAR,WAAd,CAAN;AAAA,SAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAPF,CAZF,CADF,CADF,CADD,GAgCG,IAjQN,EAkQE;AACE,QAAA,SAAS,EAAC,WADZ;AAEE,QAAA,OAAO,EAAE;AAAA,iBACP,MAAI,CAACkB,QAAL,CAAc,UAACW,SAAD,EAAYC,KAAZ,EAAsB;AAClC,mBAAO;AAAEvB,cAAAA,WAAW,EAAE,CAACsB,SAAS,CAACtB;AAA1B,aAAP;AACD,WAFD,CADO;AAAA,SAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBARF,EASE;AAAI,QAAA,SAAS,EAAC,sBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,SAAS,EAAC,gCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CATF,CAlQF,EA+QG,KAAKf,KAAL,CAAWe,WAAX,GACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,OAAO,EAAC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AACE,QAAA,QAAQ,EAAE,kBAAAwB,CAAC,EAAI;AACb,UAAA,MAAI,CAACb,QAAL,CAAc;AACZjB,YAAAA,KAAK,EAAE8B,CAAC,CAACC,MAAF,CAASC;AADJ,WAAd;AAGD,SALH;AAME,QAAA,KAAK,EAAE,KAAKzC,KAAL,CAAWS,KANpB;AAOE,QAAA,IAAI,EAAC,MAPP;AAQE,QAAA,WAAW,EAAC,OARd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAYE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,SAAS,EAAC,QADZ;AAEE,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAAC2C,gBAAL,EAAN;AAAA,SAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAOE;AACE,QAAA,SAAS,EAAC,OADZ;AAEE,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAAC1B,QAAL,CAAc;AAAEjB,YAAAA,KAAK,EAAE;AAAT,WAAd,CAAN;AAAA,SAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAPF,CAZF,CADF,CADF,CADD,GAgCG,IA/SN,CADF,CADF,CADF,CADF;AAyTD;;;;EAvY0Bf,S;;AA0Y7B,IAAM2D,eAAe,GAAG,SAAlBA,eAAkB,CAAArD,KAAK,EAAI;AAC/B,SAAO;AACL8C,IAAAA,OAAO,EAAE9C,KAAK,CAAC8C;AADV,GAAP;AAGD,CAJD;;AAMA,IAAMQ,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ,EAAI;AACrC,SAAO;AACLC,IAAAA,cAAc,EAAE;AAAA,aAAMD,QAAQ,CAACzD,YAAY,EAAb,CAAd;AAAA;AADX,GAAP;AAGD,CAJD;;AAMA,eAAeD,OAAO,CACpBwD,eADoB,EAEpBC,kBAFoB,CAAP,CAGbvD,cAHa,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./Categorization.css\";\r\nimport axios from \"axios\";\r\nimport { getCookie } from \"../Util/Util\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchCatalog } from \"../../store/actions/indexStore\";\r\n\r\nclass Categorization extends Component {\r\n  state = {\r\n    category: \"\",\r\n    categoryImg: \"\",\r\n    categoryArr: [],\r\n    selectedCategory: \"\",\r\n    subcategory: \"\",\r\n    brand: \"\",\r\n    weight: \"\",\r\n    size: \"\",\r\n    color: \"\",\r\n    isOpenCategory: false,\r\n    isOpenSubcategory: false,\r\n    isOpenBrand: false,\r\n    isOpenWeight: false,\r\n    isOpenSize: false,\r\n    isOpenColor: false\r\n  };\r\n  componentDidMount() {\r\n    let url = `http://localhost:8086/catalogs/categories`;\r\n    axios.get(url).then(res => {\r\n      let categories = [];\r\n      for (let i = 0; i < res.data.length; i++) {\r\n        categories.push(res.data[i].name);\r\n      }\r\n      this.setState({\r\n        categoryArr: categories\r\n      });\r\n    });\r\n  }\r\n  postCategoryHandler() {\r\n    axios({\r\n      method: \"post\",\r\n      headers: { \"content-type\": \"application/json\" },\r\n      data: JSON.stringify({\r\n        name: this.state.category,\r\n        img: this.state.categoryImg\r\n      }),\r\n      url: `http://localhost:8086/catalogs/categories?session=${getCookie(\r\n        \"Session\"\r\n      )}`\r\n    }).then(res => {\r\n      this.setState({ category: \"\", categoryImg: \"\" });\r\n    });\r\n  }\r\n  postSubcategoryHandler() {\r\n    let subcategory = this.state.selectedCategory\r\n      .toLowerCase()\r\n      .split(\" \")\r\n      .join(\"-\");\r\n    axios({\r\n      method: \"post\",\r\n      headers: { \"content-type\": \"application/json\" },\r\n      data: JSON.stringify({ name: this.state.subcategory }),\r\n      url: `http://localhost:8086/catalogs/categories/${subcategory}/subcategories?session=${getCookie(\r\n        \"Session\"\r\n      )}`\r\n    }).then(res => {\r\n      this.setState({ subcategory: \"\" });\r\n    });\r\n  }\r\n  postBrandHandler() {\r\n    console.log(this.state.brand);\r\n    this.setState({ brand: \"\" });\r\n  }\r\n  postWeightHandler() {\r\n    console.log(this.state.weight);\r\n    this.setState({ weight: \"\" });\r\n  }\r\n  postSizeHandler() {\r\n    console.log(this.state.size);\r\n    this.setState({ size: \"\" });\r\n  }\r\n  postColorHandler() {\r\n    console.log(this.state.color);\r\n    this.setState({ color: \"\" });\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"Categorization-Height\">\r\n        <div className=\"Categorization\">\r\n          <table>\r\n            <tbody>\r\n              <tr\r\n                className=\"hover-row\"\r\n                onClick={() =>\r\n                  this.setState((prevState, props) => {\r\n                    return { isOpenCategory: !prevState.isOpenCategory };\r\n                  })\r\n                }\r\n              >\r\n                <td>Category</td>\r\n                <td className=\"dropdown-btn-wrapper\">\r\n                  <i className=\"fas fa-caret-down dropdown-btn\" />\r\n                </td>\r\n              </tr>\r\n              {this.state.isOpenCategory ? (\r\n                <tr>\r\n                  <td colSpan=\"2\">\r\n                    <div className=\"more-info\">\r\n                      <p className=\"input-info\">Category:</p>\r\n                      <input\r\n                        onChange={e => {\r\n                          this.setState({\r\n                            category: e.target.value\r\n                          });\r\n                        }}\r\n                        value={this.state.category}\r\n                        type=\"text\"\r\n                        placeholder=\"Category\"\r\n                      />\r\n                      <p className=\"input-info\">Category Image:</p>\r\n                      <input\r\n                        onChange={e => {\r\n                          this.setState({\r\n                            categoryImg: e.target.value\r\n                          });\r\n                        }}\r\n                        value={this.state.categoryImg}\r\n                        type=\"text\"\r\n                        placeholder=\"Category Image\"\r\n                      />\r\n                      <div className=\"buttons\">\r\n                        <button\r\n                          className=\"submit\"\r\n                          onClick={() => this.postCategoryHandler()}\r\n                        >\r\n                          Submit\r\n                        </button>\r\n                        <button\r\n                          className=\"reset\"\r\n                          onClick={() => this.setState({ category: \"\" })}\r\n                        >\r\n                          Reset\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              ) : null}\r\n              <tr\r\n                className=\"hover-row\"\r\n                onClick={() =>\r\n                  this.setState((prevState, props) => {\r\n                    return { isOpenSubcategory: !prevState.isOpenSubcategory };\r\n                  })\r\n                }\r\n              >\r\n                <td>Subcategory</td>\r\n                <td className=\"dropdown-btn-wrapper\">\r\n                  <i className=\"fas fa-caret-down dropdown-btn\" />\r\n                </td>\r\n              </tr>\r\n              {this.state.isOpenSubcategory ? (\r\n                <tr>\r\n                  <td colSpan=\"2\">\r\n                    <div className=\"more-info\">\r\n                      <p className=\"input-info\">Category:</p>\r\n                      <select\r\n                        onChange={e =>\r\n                          this.setState({\r\n                            selectedCategory:\r\n                              e.target.options[e.target.selectedIndex].text\r\n                          })\r\n                        }\r\n                      >\r\n                        {this.props.catalog.catalog.map(category => (\r\n                          <option key={category} value={category}>\r\n                            {category}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n                      <p className=\"input-info\">Subcategory:</p>\r\n                      <input\r\n                        onChange={e => {\r\n                          this.setState({\r\n                            subcategory: e.target.value\r\n                          });\r\n                        }}\r\n                        value={this.state.subcategory}\r\n                        type=\"text\"\r\n                        placeholder=\"Subcategory\"\r\n                      />\r\n                      <div className=\"buttons\">\r\n                        <button\r\n                          className=\"submit\"\r\n                          onClick={() => this.postSubcategoryHandler()}\r\n                        >\r\n                          Submit\r\n                        </button>\r\n                        <button\r\n                          className=\"reset\"\r\n                          onClick={() => this.setState({ subcategory: \"\" })}\r\n                        >\r\n                          Reset\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              ) : null}\r\n              <tr\r\n                className=\"hover-row\"\r\n                onClick={() =>\r\n                  this.setState((prevState, props) => {\r\n                    return { isOpenBrand: !prevState.isOpenBrand };\r\n                  })\r\n                }\r\n              >\r\n                <td>Brand</td>\r\n                <td className=\"dropdown-btn-wrapper\">\r\n                  <i className=\"fas fa-caret-down dropdown-btn\" />\r\n                </td>\r\n              </tr>\r\n              {this.state.isOpenBrand ? (\r\n                <tr>\r\n                  <td colSpan=\"2\">\r\n                    <div className=\"more-info\">\r\n                      <p className=\"input-info\">Brand:</p>\r\n                      <input\r\n                        onChange={e => {\r\n                          this.setState({\r\n                            brand: e.target.value\r\n                          });\r\n                        }}\r\n                        value={this.state.brand}\r\n                        type=\"text\"\r\n                        placeholder=\"Brand\"\r\n                      />\r\n                      <div className=\"buttons\">\r\n                        <button\r\n                          className=\"submit\"\r\n                          onClick={() => this.postBrandHandler()}\r\n                        >\r\n                          Submit\r\n                        </button>\r\n                        <button\r\n                          className=\"reset\"\r\n                          onClick={() => this.setState({ brand: \"\" })}\r\n                        >\r\n                          Reset\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              ) : null}\r\n\r\n              <tr\r\n                className=\"hover-row\"\r\n                onClick={() =>\r\n                  this.setState((prevState, props) => {\r\n                    return { isOpenWeight: !prevState.isOpenWeight };\r\n                  })\r\n                }\r\n              >\r\n                <td>Weight</td>\r\n                <td className=\"dropdown-btn-wrapper\">\r\n                  <i className=\"fas fa-caret-down dropdown-btn\" />\r\n                </td>\r\n              </tr>\r\n              {this.state.isOpenWeight ? (\r\n                <tr>\r\n                  <td colSpan=\"2\">\r\n                    <div className=\"more-info\">\r\n                      <p className=\"input-info\">Weight:</p>\r\n                      <input\r\n                        onChange={e => {\r\n                          this.setState({\r\n                            weight: e.target.value\r\n                          });\r\n                        }}\r\n                        value={this.state.weight}\r\n                        type=\"text\"\r\n                        placeholder=\"Weight\"\r\n                      />\r\n                      <div className=\"buttons\">\r\n                        <button\r\n                          className=\"submit\"\r\n                          onClick={() => this.postWeightHandler()}\r\n                        >\r\n                          Submit\r\n                        </button>\r\n                        <button\r\n                          className=\"reset\"\r\n                          onClick={() => this.setState({ weight: \"\" })}\r\n                        >\r\n                          Reset\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              ) : null}\r\n              <tr\r\n                className=\"hover-row\"\r\n                onClick={() =>\r\n                  this.setState((prevState, props) => {\r\n                    return { isOpenSize: !prevState.isOpenSize };\r\n                  })\r\n                }\r\n              >\r\n                <td>Size</td>\r\n                <td className=\"dropdown-btn-wrapper\">\r\n                  <i className=\"fas fa-caret-down dropdown-btn\" />\r\n                </td>\r\n              </tr>\r\n              {this.state.isOpenSize ? (\r\n                <tr>\r\n                  <td colSpan=\"2\">\r\n                    <div className=\"more-info\">\r\n                      <p className=\"input-info\">Size:</p>\r\n                      <input\r\n                        onChange={e => {\r\n                          this.setState({\r\n                            size: e.target.value\r\n                          });\r\n                        }}\r\n                        value={this.state.size}\r\n                        type=\"text\"\r\n                        placeholder=\"Size\"\r\n                      />\r\n                      <div className=\"buttons\">\r\n                        <button\r\n                          className=\"submit\"\r\n                          onClick={() => this.postSizeHandler()}\r\n                        >\r\n                          Submit\r\n                        </button>\r\n                        <button\r\n                          className=\"reset\"\r\n                          onClick={() => this.setState({ size: \"\" })}\r\n                        >\r\n                          Reset\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              ) : null}\r\n              <tr\r\n                className=\"hover-row\"\r\n                onClick={() =>\r\n                  this.setState((prevState, props) => {\r\n                    return { isOpenColor: !prevState.isOpenColor };\r\n                  })\r\n                }\r\n              >\r\n                <td>Color</td>\r\n                <td className=\"dropdown-btn-wrapper\">\r\n                  <i className=\"fas fa-caret-down dropdown-btn\" />\r\n                </td>\r\n              </tr>\r\n              {this.state.isOpenColor ? (\r\n                <tr>\r\n                  <td colSpan=\"2\">\r\n                    <div className=\"more-info\">\r\n                      <p className=\"input-info\">Color:</p>\r\n                      <input\r\n                        onChange={e => {\r\n                          this.setState({\r\n                            color: e.target.value\r\n                          });\r\n                        }}\r\n                        value={this.state.color}\r\n                        type=\"text\"\r\n                        placeholder=\"Color\"\r\n                      />\r\n                      <div className=\"buttons\">\r\n                        <button\r\n                          className=\"submit\"\r\n                          onClick={() => this.postColorHandler()}\r\n                        >\r\n                          Submit\r\n                        </button>\r\n                        <button\r\n                          className=\"reset\"\r\n                          onClick={() => this.setState({ color: \"\" })}\r\n                        >\r\n                          Reset\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              ) : null}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    catalog: state.catalog\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onfetchCatalog: () => dispatch(fetchCatalog())\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Categorization);\r\n"]},"metadata":{},"sourceType":"module"}