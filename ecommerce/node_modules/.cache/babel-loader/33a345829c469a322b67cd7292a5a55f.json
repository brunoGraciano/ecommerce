{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\bruno\\\\Desktop\\\\ecommerce\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport * as actionTypes from \"./actionTypes\";\nimport axios from \"axios\";\nexport var updateProductOrder = function updateProductOrder(inputValue, productId) {\n  var productsLs = localStorage.getItem(\"product\").split(\",\");\n  var quantityLs = localStorage.getItem(\"quantity\").split(\",\");\n  var index = productsLs.indexOf(productId);\n\n  if (quantityLs[index] < 1) {\n    quantityLs.splice(index, 1);\n    productsLs.splice(index, 1);\n    localStorage.setItem(\"quantity\", quantityLs);\n    localStorage.setItem(\"product\", productsLs);\n  } else {\n    quantityLs[index] = inputValue;\n    localStorage.setItem(\"quantity\", quantityLs);\n  }\n\n  return {\n    type: actionTypes.REMOVE_PRODUCT_ORDER,\n    products: productsLs,\n    total: calculateTotal(quantityLs)\n  };\n};\nexport var addProductOrder = function addProductOrder(productId) {\n  var products = localStorage.getItem(\"product\");\n  var quantity = localStorage.getItem(\"quantity\");\n  var arrProducts = [];\n  var arrQuantity = [];\n\n  if (products !== null && products !== \"\") {\n    arrProducts = products.split(\",\");\n    arrQuantity = quantity.split(\",\");\n\n    if (arrProducts.indexOf(productId) === -1) {\n      arrProducts.push(productId);\n      arrQuantity.push(1);\n    } else {\n      var indexOfProduct = arrProducts.indexOf(productId);\n      var prevQuantity = parseInt(arrQuantity[indexOfProduct], 10) + 1;\n      arrQuantity[indexOfProduct] = prevQuantity;\n    }\n  } else {\n    arrProducts = [productId];\n    arrQuantity = [1];\n  }\n\n  localStorage.setItem(\"product\", arrProducts);\n  localStorage.setItem(\"quantity\", arrQuantity);\n  return {\n    type: actionTypes.ADD_PRODUCT_ORDER,\n    products: arrProducts,\n    total: calculateTotal(arrQuantity)\n  };\n};\nexport var fetchProductOrder = function fetchProductOrder() {\n  return function (dispatch) {\n    if (localStorage.getItem(\"product\") !== null) {\n      var products = localStorage.getItem(\"product\").split(\",\");\n      axios({\n        method: \"post\",\n        headers: {\n          \"content-type\": \"application/json\"\n        },\n        data: products,\n        url: \"http://localhost:8086/products/arr\"\n      }).then(function (res) {\n        var quantityLs = localStorage.getItem(\"quantity\").split(\",\");\n\n        var productsState = _toConsumableArray(res.data);\n\n        for (var p = 0; p < productsState.length; p++) {\n          productsState[p].quantityCart = quantityLs[p];\n        }\n\n        dispatch({\n          type: actionTypes.FETCH_PRODUCT_ORDER,\n          products: productsState,\n          total: calculateTotal(quantityLs)\n        });\n      });\n    }\n  };\n};\n\nvar calculateTotal = function calculateTotal(arrQuantity) {\n  var total = 0;\n\n  for (var q = 0; q < arrQuantity.length; q++) {\n    total += parseInt(arrQuantity[q], 10);\n  }\n\n  return total;\n};","map":{"version":3,"sources":["C:\\Users\\bruno\\desktop\\ecommerce\\src\\store\\actions\\orderAction.js"],"names":["actionTypes","axios","updateProductOrder","inputValue","productId","productsLs","localStorage","getItem","split","quantityLs","index","indexOf","splice","setItem","type","REMOVE_PRODUCT_ORDER","products","total","calculateTotal","addProductOrder","quantity","arrProducts","arrQuantity","push","indexOfProduct","prevQuantity","parseInt","ADD_PRODUCT_ORDER","fetchProductOrder","dispatch","method","headers","data","url","then","res","productsState","p","length","quantityCart","FETCH_PRODUCT_ORDER","q"],"mappings":"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","sourcesContent":["import * as actionTypes from \"./actionTypes\";\r\nimport axios from \"axios\";\r\n\r\nexport const updateProductOrder = (inputValue ,productId) => {\r\n  let productsLs = localStorage.getItem(\"product\").split(\",\");\r\n  let quantityLs = localStorage.getItem(\"quantity\").split(\",\");\r\n  const index = productsLs.indexOf(productId);\r\n  if (quantityLs[index] < 1) {\r\n    quantityLs.splice(index, 1);\r\n    productsLs.splice(index, 1);\r\n    localStorage.setItem(\"quantity\", quantityLs);\r\n    localStorage.setItem(\"product\", productsLs);\r\n  } else {\r\n    quantityLs[index] = inputValue;\r\n    localStorage.setItem(\"quantity\", quantityLs);\r\n  }\r\n  return {\r\n    type: actionTypes.REMOVE_PRODUCT_ORDER,\r\n    products: productsLs,\r\n    total: calculateTotal(quantityLs)\r\n  };\r\n};\r\n\r\nexport const addProductOrder = productId => {\r\n  let products = localStorage.getItem(\"product\");\r\n  let quantity = localStorage.getItem(\"quantity\");\r\n  let arrProducts = [];\r\n  let arrQuantity = [];\r\n  if (products !== null && products !== \"\") {\r\n    arrProducts = products.split(\",\");\r\n    arrQuantity = quantity.split(\",\");\r\n    if (arrProducts.indexOf(productId) === -1) {\r\n      arrProducts.push(productId);\r\n      arrQuantity.push(1);\r\n    } else {\r\n      const indexOfProduct = arrProducts.indexOf(productId);\r\n      let prevQuantity = parseInt(arrQuantity[indexOfProduct], 10) + 1;\r\n      arrQuantity[indexOfProduct] = prevQuantity;\r\n    }\r\n  } else {\r\n    arrProducts = [productId];\r\n    arrQuantity = [1];\r\n  }\r\n  localStorage.setItem(\"product\", arrProducts);\r\n  localStorage.setItem(\"quantity\", arrQuantity);\r\n  return {\r\n    type: actionTypes.ADD_PRODUCT_ORDER,\r\n    products: arrProducts,\r\n    total: calculateTotal(arrQuantity)\r\n  };\r\n};\r\n\r\nexport const fetchProductOrder = () => {\r\n  return dispatch => {\r\n    if (localStorage.getItem(\"product\") !== null) {\r\n      let products = localStorage.getItem(\"product\").split(\",\");\r\n      axios({\r\n        method: \"post\",\r\n        headers: { \"content-type\": \"application/json\" },\r\n        data: products,\r\n        url: \"http://localhost:8086/products/arr\"\r\n      }).then(res => {\r\n        let quantityLs = localStorage.getItem(\"quantity\").split(\",\");\r\n        let productsState = [...res.data];\r\n        for (let p = 0; p < productsState.length; p++) {\r\n          productsState[p].quantityCart = quantityLs[p];\r\n        }\r\n        dispatch({\r\n          type: actionTypes.FETCH_PRODUCT_ORDER,\r\n          products: productsState,\r\n          total: calculateTotal(quantityLs)\r\n        });\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nconst calculateTotal = arrQuantity => {\r\n  let total = 0;\r\n  for (let q = 0; q < arrQuantity.length; q++) {\r\n    total += parseInt(arrQuantity[q], 10)\r\n  }\r\n  return total;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}