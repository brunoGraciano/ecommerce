{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\bruno\\\\Desktop\\\\ecommerce\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\bruno\\\\Desktop\\\\ecommerce\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\bruno\\\\Desktop\\\\ecommerce\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\bruno\\\\Desktop\\\\ecommerce\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\bruno\\\\Desktop\\\\ecommerce\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\bruno\\\\Desktop\\\\ecommerce\\\\src\\\\components\\\\Users\\\\Users.js\";\nimport React, { Component } from \"react\";\nimport \"./Users.css\"; //import axios from \"axios\";\n//import { getCookie } from \"../Util/Util\";\n\nimport Switch from \"../UI/Switch/Switch\";\nimport { connect } from \"react-redux\";\nimport { addUser, removeUser, fetchUsers } from \"../../store/actions/index\";\n\nvar Users =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Users, _Component);\n\n  function Users() {\n    _classCallCheck(this, Users);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Users).apply(this, arguments));\n  }\n\n  _createClass(Users, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.onfetchUser();\n      console.log(this.props.users);\n    }\n    /*changeRoleUserHandler(role, user, index) {\r\n      let id;\r\n      if (role === \"Admin\") {\r\n        id = 2;\r\n      } else if (role === \"User\") {\r\n        id = 1;\r\n      }\r\n      let r = \"ROLE_\" + role.toUpperCase();\r\n      user.roles[0].id = id;\r\n      user.roles[0].name = r;\r\n      axios\r\n        .put(\r\n          `http://localhost:8087/secure/users/${user.id}?access_token=${getCookie(\r\n            \"Session\"\r\n          )}`,\r\n          user\r\n        )\r\n        .then(res => {\r\n          if (res.status === 200) {\r\n            let userArr = this.state.users;\r\n            userArr[index] = user;\r\n            this.setState({ users: userArr });\r\n          }\r\n        });\r\n    }\r\n    changeEnableUserHandler(enable, user, index) {\r\n      user.enabled = enable;\r\n      user.accountNonExpired = enable;\r\n      user.accountNonLocked = enable;\r\n      user.account_non_expired = enable;\r\n      user.account_non_locked = enable;\r\n      user.credentialsNonExpired = enable;\r\n      axios\r\n        .put(\r\n          `http://localhost:8087/secure/users/${user.id}?access_token=${getCookie(\r\n            \"Session\"\r\n          )}`,\r\n          user\r\n        )\r\n        .then(res => {\r\n          if (res.status === 200) {\r\n            let userArr = this.state.users;\r\n            userArr[index] = user;\r\n            this.setState({ users: userArr });\r\n          }\r\n        });\r\n    }*/\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(\"div\", {\n        className: \"Users\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, this.props.users.length === 0 ? null : React.createElement(\"table\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Username\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"Name\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Email\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"Role\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Enable\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, this.props.users.map(function (user, index) {\n        return React.createElement(React.Fragment, {\n          key: user.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, React.createElement(\"tr\", {\n          className: \"hover-row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, user.username), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, user.name, \" \", user.surname), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, user.email), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, React.createElement(\"select\", {\n          value: user.roles[0].name,\n          onChange: function onChange(e) {\n            _this.changeRoleUserHandler(e.target.options[e.target.selectedIndex].text, user, index);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, React.createElement(\"option\", {\n          value: \"ROLE_USER\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }, \"User\"), React.createElement(\"option\", {\n          value: \"ROLE_ADMIN\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, \"Admin\"))), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }, React.createElement(Switch, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }), user.enabled ? React.createElement(\"div\", {\n          className: \"green\",\n          onClick: function onClick() {\n            return _this.changeEnableUserHandler(0, user, index);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }) : React.createElement(\"div\", {\n          className: \"red\",\n          onClick: function onClick() {\n            return _this.changeEnableUserHandler(1, user, index);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        })), React.createElement(\"td\", {\n          className: \"dropdown-btn-wrapper\",\n          onClick: function onClick() {\n            var originalUsers = _this.props.users;\n            originalUsers[index].isOpen = !originalUsers[index].isOpen;\n\n            _this.setState({\n              users: originalUsers\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"fas fa-caret-down dropdown-btn\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128\n          },\n          __self: this\n        }))), user.isOpen ? React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          colSpan: \"6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"more-info\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: user.img,\n          alt: user.username,\n          className: \"profile-img\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"info\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"id\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"bold\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144\n          },\n          __self: this\n        }, \"Id:\"), \" \", user.id), React.createElement(\"div\", {\n          className: \"phone\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"bold\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147\n          },\n          __self: this\n        }, \"Phone:\"), \" \", user.phone), React.createElement(\"div\", {\n          className: \"address\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"bold\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150\n          },\n          __self: this\n        }, \"Address:\"), \" \", user.address))))) : null);\n      }))));\n    }\n  }]);\n\n  return Users;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    user: state.user\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onfetchUser: function onfetchUser() {\n      return dispatch(fetchUsers());\n    },\n    onUserAdded: function onUserAdded(user) {\n      return dispatch(addUser(user));\n    },\n    onUserRemoved: function onUserRemoved(username) {\n      return dispatch(removeUser(username));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Users);","map":{"version":3,"sources":["C:\\Users\\bruno\\Desktop\\ecommerce\\src\\components\\Users\\Users.js"],"names":["React","Component","Switch","connect","addUser","removeUser","fetchUsers","Users","props","onfetchUser","console","log","users","length","map","user","index","id","username","name","surname","email","roles","e","changeRoleUserHandler","target","options","selectedIndex","text","enabled","changeEnableUserHandler","originalUsers","isOpen","setState","img","phone","address","mapStateToProps","state","mapDispatchToProps","dispatch","onUserAdded","onUserRemoved"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./Users.css\";\r\n//import axios from \"axios\";\r\n//import { getCookie } from \"../Util/Util\";\r\nimport Switch from \"../UI/Switch/Switch\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { addUser, removeUser, fetchUsers } from \"../../store/actions/index\";\r\n\r\nclass Users extends Component {\r\n  componentDidMount() {\r\n    this.props.onfetchUser();\r\n    console.log(this.props.users);\r\n    \r\n  }\r\n  /*changeRoleUserHandler(role, user, index) {\r\n    let id;\r\n    if (role === \"Admin\") {\r\n      id = 2;\r\n    } else if (role === \"User\") {\r\n      id = 1;\r\n    }\r\n    let r = \"ROLE_\" + role.toUpperCase();\r\n    user.roles[0].id = id;\r\n    user.roles[0].name = r;\r\n    axios\r\n      .put(\r\n        `http://localhost:8087/secure/users/${user.id}?access_token=${getCookie(\r\n          \"Session\"\r\n        )}`,\r\n        user\r\n      )\r\n      .then(res => {\r\n        if (res.status === 200) {\r\n          let userArr = this.state.users;\r\n          userArr[index] = user;\r\n          this.setState({ users: userArr });\r\n        }\r\n      });\r\n  }\r\n  changeEnableUserHandler(enable, user, index) {\r\n    user.enabled = enable;\r\n    user.accountNonExpired = enable;\r\n    user.accountNonLocked = enable;\r\n    user.account_non_expired = enable;\r\n    user.account_non_locked = enable;\r\n    user.credentialsNonExpired = enable;\r\n    axios\r\n      .put(\r\n        `http://localhost:8087/secure/users/${user.id}?access_token=${getCookie(\r\n          \"Session\"\r\n        )}`,\r\n        user\r\n      )\r\n      .then(res => {\r\n        if (res.status === 200) {\r\n          let userArr = this.state.users;\r\n          userArr[index] = user;\r\n          this.setState({ users: userArr });\r\n        }\r\n      });\r\n  }*/\r\n  render() {\r\n    return (\r\n      <div className=\"Users\">\r\n        {this.props.users.length === 0 ? null : (\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Username</th>\r\n                <th>Name</th>\r\n                <th>Email</th>\r\n                <th>Role</th>\r\n                <th>Enable</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {this.props.users.map((user, index) => (\r\n                <React.Fragment key={user.id}>\r\n                  <tr className=\"hover-row\">\r\n                    <td>{user.username}</td>\r\n                    <td>\r\n                      {user.name} {user.surname}\r\n                    </td>\r\n                    <td>{user.email}</td>\r\n                    <td>\r\n                      <select\r\n                        value={user.roles[0].name}\r\n                        onChange={e => {\r\n                          this.changeRoleUserHandler(\r\n                            e.target.options[e.target.selectedIndex].text,\r\n                            user,\r\n                            index\r\n                          );\r\n                        }}\r\n                      >\r\n                        <option value=\"ROLE_USER\">User</option>\r\n                        <option value=\"ROLE_ADMIN\">Admin</option>\r\n                      </select>\r\n                    </td>\r\n                    <td>\r\n                      <Switch />\r\n                      {user.enabled ? (\r\n                        <div\r\n                          className=\"green\"\r\n                          onClick={() =>\r\n                            this.changeEnableUserHandler(0, user, index)\r\n                          }\r\n                        />\r\n                      ) : (\r\n                        <div\r\n                          className=\"red\"\r\n                          onClick={() =>\r\n                            this.changeEnableUserHandler(1, user, index)\r\n                          }\r\n                        />\r\n                      )}\r\n                    </td>\r\n                    <td\r\n                      className=\"dropdown-btn-wrapper\"\r\n                      onClick={() => {\r\n                        let originalUsers = this.props.users;\r\n                        originalUsers[index].isOpen = !originalUsers[index]\r\n                          .isOpen;\r\n                        this.setState({ users: originalUsers });\r\n                      }}\r\n                    >\r\n                      <i className=\"fas fa-caret-down dropdown-btn\" />\r\n                    </td>\r\n                  </tr>\r\n                  {user.isOpen ? (\r\n                    <tr>\r\n                      <td colSpan=\"6\">\r\n                        <div className=\"more-info\">\r\n                          <div>\r\n                            <img\r\n                              src={user.img}\r\n                              alt={user.username}\r\n                              className=\"profile-img\"\r\n                            />\r\n                          </div>\r\n                          <div className=\"info\">\r\n                            <div className=\"id\">\r\n                              <span className=\"bold\">Id:</span> {user.id}\r\n                            </div>\r\n                            <div className=\"phone\">\r\n                              <span className=\"bold\">Phone:</span> {user.phone}\r\n                            </div>\r\n                            <div className=\"address\">\r\n                              <span className=\"bold\">Address:</span>{\" \"}\r\n                              {user.address}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </td>\r\n                    </tr>\r\n                  ) : null}\r\n                </React.Fragment>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.user\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onfetchUser: () => dispatch(fetchUsers()),\r\n    onUserAdded: user => dispatch(addUser(user)),\r\n    onUserRemoved: username => dispatch(removeUser(username))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Users);\r\n"]},"metadata":{},"sourceType":"module"}